<t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>SELECT * FROM predictive_analytics_table WHERE id = 1</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>select * from predictive_analytics_table where id = 1</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>SELECT prediction FROM predictive_analytics_table WHERE customer_id = 100</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>select prediction from predictive_analytics_table where customer_id = 100</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>SELECT id, customer_id FROM predictive_analytics_table</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>select id, customer_id from predictive_analytics_table</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>SELECT * FROM predictive_analytics_table WHERE id > 10</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>select * from predictive_analytics_table where id > 10</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>SELECT DISTINCT customer_id FROM predictive_analytics_table</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>select distinct customer_id from predictive_analytics_table</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>SELECT * FROM predictive_analytics_table ORDER BY customer_id DESC</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>select * from predictive_analytics_table order by customer_id desc</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>SELECT COUNT(*) FROM predictive_analytics_table</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>select count(*) from predictive_analytics_table</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>SELECT AVG(id) FROM predictive_analytics_table</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>select avg(id) from predictive_analytics_table</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>SELECT MAX(customer_id) FROM predictive_analytics_table</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>select max(customer_id) from predictive_analytics_table</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>SELECT MIN(id) FROM predictive_analytics_table</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>select min(id) from predictive_analytics_table</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>SELECT SUM(customer_id) FROM predictive_analytics_table</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>select sum(customer_id) from predictive_analytics_table</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>SELECT * FROM predictive_analytics_table WHERE prediction LIKE '%good%'</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>select * from predictive_analytics_table where prediction like '%good%'</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>SELECT * FROM predictive_analytics_table WHERE customer_id IN (1,2,3)</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>select * from predictive_analytics_table where customer_id in (1,2,3)</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>SELECT * FROM predictive_analytics_table WHERE id BETWEEN 5 AND 10</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>select * from predictive_analytics_table where id between 5 and 10</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>SELECT * FROM predictive_analytics_table WHERE prediction IS NOT NULL</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>select * from predictive_analytics_table where prediction is not null</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>SELECT * FROM predictive_analytics_table WHERE customer_id = 1 AND prediction = 'high'</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>select * from predictive_analytics_table where customer_id = 1 and prediction = 'high'</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>SELECT * FROM predictive_analytics_table WHERE customer_id = 2 OR prediction = 'low'</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>select * from predictive_analytics_table where customer_id = 2 or prediction = 'low'</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>SELECT * FROM predictive_analytics_table WHERE customer_id = 3 AND prediction != 'medium'</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>select * from predictive_analytics_table where customer_id = 3 and prediction != 'medium'</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>SELECT * FROM predictive_analytics_table WHERE id < 5 OR id > 15</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>select * from predictive_analytics_table where id < 5 or id > 15</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>SELECT * FROM predictive_analytics_table WHERE customer_id = 4 AND id = 5</stat><divider><t>CREATE TABLE predictive_analytics_table (id INT PRIMARY KEY, customer_id INT, prediction TEXT)</t><stat>select * from predictive_analytics_table where customer_id = 4 and id = 5</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>SELECT * FROM Customer;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>select * from customer;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>SELECT * FROM Customer;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>select * from customer;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>SELECT customer_id, name FROM Customer;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>select customer_id, name from customer;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>SELECT customer_id, name FROM Customer;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>select customer_id, name from customer;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>SELECT * FROM Customer WHERE age > 18;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>select * from customer where age > 18;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>SELECT * FROM Customer WHERE age > 18;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>select * from customer where age > 18;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>SELECT customer_id, name FROM Customer WHERE age > 18;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>select customer_id, name from customer where age > 18;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>SELECT customer_id, name FROM Customer WHERE age > 18;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>select customer_id, name from customer where age > 18;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>SELECT * FROM Customer ORDER BY age DESC;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>select * from customer order by age desc;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>SELECT * FROM Customer ORDER BY age DESC;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>select * from customer order by age desc;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>SELECT * FROM PurchaseHistory;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>select * from purchasehistory;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>SELECT * FROM PurchaseHistory;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>select * from purchasehistory;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>SELECT purchase_id, product_name FROM PurchaseHistory;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>select purchase_id, product_name from purchasehistory;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>SELECT purchase_id, product_name FROM PurchaseHistory;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>select purchase_id, product_name from purchasehistory;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>SELECT * FROM PurchaseHistory WHERE amount > 100;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>select * from purchasehistory where amount > 100;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>SELECT * FROM PurchaseHistory WHERE amount > 100;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>select * from purchasehistory where amount > 100;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>SELECT customer_id, product_name FROM PurchaseHistory WHERE amount > 100;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>select customer_id, product_name from purchasehistory where amount > 100;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>SELECT customer_id, product_name FROM PurchaseHistory WHERE amount > 100;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>select customer_id, product_name from purchasehistory where amount > 100;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>SELECT * FROM PurchaseHistory ORDER BY purchase_date;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>select * from purchasehistory order by purchase_date;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>SELECT * FROM PurchaseHistory ORDER BY purchase_date;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>select * from purchasehistory order by purchase_date;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>SELECT c.name, p.product_name FROM Customer c INNER JOIN PurchaseHistory p ON c.customer_id = p.customer_id;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>select c.name, p.product_name from customer c inner join purchasehistory p on c.customer_id = p.customer_id;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>SELECT c.name, p.product_name FROM Customer c INNER JOIN PurchaseHistory p ON c.customer_id = p.customer_id;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>select c.name, p.product_name from customer c inner join purchasehistory p on c.customer_id = p.customer_id;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>SELECT c.name, p.product_name FROM Customer c, PurchaseHistory p WHERE c.customer_id = p.customer_id;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>select c.name, p.product_name from customer c, purchasehistory p where c.customer_id = p.customer_id;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>SELECT c.name, p.product_name FROM Customer c, PurchaseHistory p WHERE c.customer_id = p.customer_id;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>select c.name, p.product_name from customer c, purchasehistory p where c.customer_id = p.customer_id;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>SELECT c.name, p.product_name FROM Customer c LEFT JOIN PurchaseHistory p ON c.customer_id = p.customer_id;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>select c.name, p.product_name from customer c left join purchasehistory p on c.customer_id = p.customer_id;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>SELECT c.name, p.product_name FROM Customer c LEFT JOIN PurchaseHistory p ON c.customer_id = p.customer_id;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>select c.name, p.product_name from customer c left join purchasehistory p on c.customer_id = p.customer_id;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>SELECT c.name, p.product_name FROM Customer c RIGHT JOIN PurchaseHistory p ON c.customer_id = p.customer_id;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>select c.name, p.product_name from customer c right join purchasehistory p on c.customer_id = p.customer_id;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>SELECT c.name, p.product_name FROM Customer c RIGHT JOIN PurchaseHistory p ON c.customer_id = p.customer_id;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>select c.name, p.product_name from customer c right join purchasehistory p on c.customer_id = p.customer_id;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>SELECT c.name, p.product_name FROM Customer c FULL JOIN PurchaseHistory p ON c.customer_id = p.customer_id;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>select c.name, p.product_name from customer c full join purchasehistory p on c.customer_id = p.customer_id;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>SELECT c.name, p.product_name FROM Customer c FULL JOIN PurchaseHistory p ON c.customer_id = p.customer_id;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>select c.name, p.product_name from customer c full join purchasehistory p on c.customer_id = p.customer_id;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>SELECT c.name, COUNT(p.product_name) AS total_products FROM Customer c INNER JOIN PurchaseHistory p ON c.customer_id = p.customer_id GROUP BY c.name;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>select c.name, count(p.product_name) as total_products from customer c inner join purchasehistory p on c.customer_id = p.customer_id group by c.name;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>SELECT c.name, COUNT(p.product_name) AS total_products FROM Customer c INNER JOIN PurchaseHistory p ON c.customer_id = p.customer_id GROUP BY c.name;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>select c.name, count(p.product_name) as total_products from customer c inner join purchasehistory p on c.customer_id = p.customer_id group by c.name;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>SELECT c.name, SUM(p.amount) AS total_amount FROM Customer c INNER JOIN PurchaseHistory p ON c.customer_id = p.customer_id GROUP BY c.name;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>select c.name, sum(p.amount) as total_amount from customer c inner join purchasehistory p on c.customer_id = p.customer_id group by c.name;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>SELECT c.name, SUM(p.amount) AS total_amount FROM Customer c INNER JOIN PurchaseHistory p ON c.customer_id = p.customer_id GROUP BY c.name;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>select c.name, sum(p.amount) as total_amount from customer c inner join purchasehistory p on c.customer_id = p.customer_id group by c.name;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>SELECT c.name, AVG(p.amount) AS avg_amount FROM Customer c INNER JOIN PurchaseHistory p ON c.customer_id = p.customer_id GROUP BY c.name;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>select c.name, avg(p.amount) as avg_amount from customer c inner join purchasehistory p on c.customer_id = p.customer_id group by c.name;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>SELECT c.name, AVG(p.amount) AS avg_amount FROM Customer c INNER JOIN PurchaseHistory p ON c.customer_id = p.customer_id GROUP BY c.name;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>select c.name, avg(p.amount) as avg_amount from customer c inner join purchasehistory p on c.customer_id = p.customer_id group by c.name;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>SELECT gender, AVG(age) AS avg_age FROM Customer GROUP BY gender;</stat><divider><t>CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));

CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));</t><stat>select gender, avg(age) as avg_age from customer group by gender;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>SELECT gender, AVG(age) AS avg_age FROM Customer GROUP BY gender;</stat><divider><t>CREATE TABLE PurchaseHistory (purchase_id INT PRIMARY KEY, customer_id INT, product_name VARCHAR(50), purchase_date DATE, amount DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES Customer(customer_id));

CREATE TABLE Customer (customer_id INT PRIMARY KEY, name VARCHAR(50), age INT, gender VARCHAR(10));</t><stat>select gender, avg(age) as avg_age from customer group by gender;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM customer_data;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select * from customer_data;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT * FROM customer_data;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select * from customer_data;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM customer_data;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select * from customer_data;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT * FROM customer_data;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select * from customer_data;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT * FROM customer_data;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select * from customer_data;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT * FROM customer_data;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select * from customer_data;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM customer_data;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select * from customer_data;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT * FROM customer_data;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select * from customer_data;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM customer_data;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select * from customer_data;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT * FROM customer_data;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select * from customer_data;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT * FROM customer_data;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select * from customer_data;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT * FROM customer_data;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select * from customer_data;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM customer_data;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select * from customer_data;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT * FROM customer_data;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select * from customer_data;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM customer_data;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select * from customer_data;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT * FROM customer_data;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select * from customer_data;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT * FROM customer_data;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select * from customer_data;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT * FROM customer_data;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select * from customer_data;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT * FROM customer_data;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select * from customer_data;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT * FROM customer_data;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select * from customer_data;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT * FROM customer_data;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select * from customer_data;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT * FROM customer_data;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select * from customer_data;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT * FROM customer_data;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select * from customer_data;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT * FROM customer_data;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select * from customer_data;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT customer_name, age, city FROM customer_data;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select customer_name, age, city from customer_data;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT customer_name, age, city FROM customer_data;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select customer_name, age, city from customer_data;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT customer_name, age, city FROM customer_data;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select customer_name, age, city from customer_data;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT customer_name, age, city FROM customer_data;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select customer_name, age, city from customer_data;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT customer_name, age, city FROM customer_data;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select customer_name, age, city from customer_data;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT customer_name, age, city FROM customer_data;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select customer_name, age, city from customer_data;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT customer_name, age, city FROM customer_data;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select customer_name, age, city from customer_data;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT customer_name, age, city FROM customer_data;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select customer_name, age, city from customer_data;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT customer_name, age, city FROM customer_data;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select customer_name, age, city from customer_data;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT customer_name, age, city FROM customer_data;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select customer_name, age, city from customer_data;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT customer_name, age, city FROM customer_data;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select customer_name, age, city from customer_data;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT customer_name, age, city FROM customer_data;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select customer_name, age, city from customer_data;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT customer_name, age, city FROM customer_data;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select customer_name, age, city from customer_data;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT customer_name, age, city FROM customer_data;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select customer_name, age, city from customer_data;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT customer_name, age, city FROM customer_data;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select customer_name, age, city from customer_data;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT customer_name, age, city FROM customer_data;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select customer_name, age, city from customer_data;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT customer_name, age, city FROM customer_data;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select customer_name, age, city from customer_data;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT customer_name, age, city FROM customer_data;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select customer_name, age, city from customer_data;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT customer_name, age, city FROM customer_data;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select customer_name, age, city from customer_data;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT customer_name, age, city FROM customer_data;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select customer_name, age, city from customer_data;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT customer_name, age, city FROM customer_data;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select customer_name, age, city from customer_data;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT customer_name, age, city FROM customer_data;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select customer_name, age, city from customer_data;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT customer_name, age, city FROM customer_data;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select customer_name, age, city from customer_data;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT customer_name, age, city FROM customer_data;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select customer_name, age, city from customer_data;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT customer_name, email FROM customer_data WHERE city='New York';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select customer_name, email from customer_data where city='new york';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT customer_name, email FROM customer_data WHERE city='New York';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select customer_name, email from customer_data where city='new york';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT customer_name, email FROM customer_data WHERE city='New York';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select customer_name, email from customer_data where city='new york';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT customer_name, email FROM customer_data WHERE city='New York';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select customer_name, email from customer_data where city='new york';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT customer_name, email FROM customer_data WHERE city='New York';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select customer_name, email from customer_data where city='new york';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT customer_name, email FROM customer_data WHERE city='New York';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select customer_name, email from customer_data where city='new york';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT customer_name, email FROM customer_data WHERE city='New York';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select customer_name, email from customer_data where city='new york';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT customer_name, email FROM customer_data WHERE city='New York';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select customer_name, email from customer_data where city='new york';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT customer_name, email FROM customer_data WHERE city='New York';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select customer_name, email from customer_data where city='new york';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT customer_name, email FROM customer_data WHERE city='New York';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select customer_name, email from customer_data where city='new york';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT customer_name, email FROM customer_data WHERE city='New York';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select customer_name, email from customer_data where city='new york';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT customer_name, email FROM customer_data WHERE city='New York';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select customer_name, email from customer_data where city='new york';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT customer_name, email FROM customer_data WHERE city='New York';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select customer_name, email from customer_data where city='new york';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT customer_name, email FROM customer_data WHERE city='New York';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select customer_name, email from customer_data where city='new york';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT customer_name, email FROM customer_data WHERE city='New York';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select customer_name, email from customer_data where city='new york';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT customer_name, email FROM customer_data WHERE city='New York';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select customer_name, email from customer_data where city='new york';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT customer_name, email FROM customer_data WHERE city='New York';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select customer_name, email from customer_data where city='new york';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT customer_name, email FROM customer_data WHERE city='New York';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select customer_name, email from customer_data where city='new york';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT customer_name, email FROM customer_data WHERE city='New York';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select customer_name, email from customer_data where city='new york';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT customer_name, email FROM customer_data WHERE city='New York';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select customer_name, email from customer_data where city='new york';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT customer_name, email FROM customer_data WHERE city='New York';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select customer_name, email from customer_data where city='new york';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT customer_name, email FROM customer_data WHERE city='New York';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select customer_name, email from customer_data where city='new york';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT customer_name, email FROM customer_data WHERE city='New York';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select customer_name, email from customer_data where city='new york';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT customer_name, email FROM customer_data WHERE city='New York';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select customer_name, email from customer_data where city='new york';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM purchase_history;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select * from purchase_history;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT * FROM purchase_history;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select * from purchase_history;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM purchase_history;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select * from purchase_history;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT * FROM purchase_history;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select * from purchase_history;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT * FROM purchase_history;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select * from purchase_history;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT * FROM purchase_history;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select * from purchase_history;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM purchase_history;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select * from purchase_history;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT * FROM purchase_history;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select * from purchase_history;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM purchase_history;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select * from purchase_history;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT * FROM purchase_history;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select * from purchase_history;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT * FROM purchase_history;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select * from purchase_history;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT * FROM purchase_history;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select * from purchase_history;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM purchase_history;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select * from purchase_history;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT * FROM purchase_history;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select * from purchase_history;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM purchase_history;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select * from purchase_history;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT * FROM purchase_history;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select * from purchase_history;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT * FROM purchase_history;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select * from purchase_history;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT * FROM purchase_history;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select * from purchase_history;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT * FROM purchase_history;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select * from purchase_history;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT * FROM purchase_history;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select * from purchase_history;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT * FROM purchase_history;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select * from purchase_history;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT * FROM purchase_history;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select * from purchase_history;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT * FROM purchase_history;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select * from purchase_history;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT * FROM purchase_history;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select * from purchase_history;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT customer_id, purchase_date, total_amount FROM purchase_history;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select customer_id, purchase_date, total_amount from purchase_history;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT customer_id, purchase_date, total_amount FROM purchase_history;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select customer_id, purchase_date, total_amount from purchase_history;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT customer_id, purchase_date, total_amount FROM purchase_history;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select customer_id, purchase_date, total_amount from purchase_history;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT customer_id, purchase_date, total_amount FROM purchase_history;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select customer_id, purchase_date, total_amount from purchase_history;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT customer_id, purchase_date, total_amount FROM purchase_history;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select customer_id, purchase_date, total_amount from purchase_history;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT customer_id, purchase_date, total_amount FROM purchase_history;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select customer_id, purchase_date, total_amount from purchase_history;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT customer_id, purchase_date, total_amount FROM purchase_history;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select customer_id, purchase_date, total_amount from purchase_history;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT customer_id, purchase_date, total_amount FROM purchase_history;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select customer_id, purchase_date, total_amount from purchase_history;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT customer_id, purchase_date, total_amount FROM purchase_history;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select customer_id, purchase_date, total_amount from purchase_history;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT customer_id, purchase_date, total_amount FROM purchase_history;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select customer_id, purchase_date, total_amount from purchase_history;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT customer_id, purchase_date, total_amount FROM purchase_history;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select customer_id, purchase_date, total_amount from purchase_history;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT customer_id, purchase_date, total_amount FROM purchase_history;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select customer_id, purchase_date, total_amount from purchase_history;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT customer_id, purchase_date, total_amount FROM purchase_history;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select customer_id, purchase_date, total_amount from purchase_history;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT customer_id, purchase_date, total_amount FROM purchase_history;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select customer_id, purchase_date, total_amount from purchase_history;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT customer_id, purchase_date, total_amount FROM purchase_history;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select customer_id, purchase_date, total_amount from purchase_history;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT customer_id, purchase_date, total_amount FROM purchase_history;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select customer_id, purchase_date, total_amount from purchase_history;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT customer_id, purchase_date, total_amount FROM purchase_history;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select customer_id, purchase_date, total_amount from purchase_history;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT customer_id, purchase_date, total_amount FROM purchase_history;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select customer_id, purchase_date, total_amount from purchase_history;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT customer_id, purchase_date, total_amount FROM purchase_history;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select customer_id, purchase_date, total_amount from purchase_history;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT customer_id, purchase_date, total_amount FROM purchase_history;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select customer_id, purchase_date, total_amount from purchase_history;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT customer_id, purchase_date, total_amount FROM purchase_history;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select customer_id, purchase_date, total_amount from purchase_history;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT customer_id, purchase_date, total_amount FROM purchase_history;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select customer_id, purchase_date, total_amount from purchase_history;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT customer_id, purchase_date, total_amount FROM purchase_history;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select customer_id, purchase_date, total_amount from purchase_history;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT customer_id, purchase_date, total_amount FROM purchase_history;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select customer_id, purchase_date, total_amount from purchase_history;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT ph.purchase_id, cd.customer_name, ph.total_amount FROM purchase_history ph JOIN customer_data cd ON ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select ph.purchase_id, cd.customer_name, ph.total_amount from purchase_history ph join customer_data cd on ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT ph.purchase_id, cd.customer_name, ph.total_amount FROM purchase_history ph JOIN customer_data cd ON ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select ph.purchase_id, cd.customer_name, ph.total_amount from purchase_history ph join customer_data cd on ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT ph.purchase_id, cd.customer_name, ph.total_amount FROM purchase_history ph JOIN customer_data cd ON ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select ph.purchase_id, cd.customer_name, ph.total_amount from purchase_history ph join customer_data cd on ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT ph.purchase_id, cd.customer_name, ph.total_amount FROM purchase_history ph JOIN customer_data cd ON ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select ph.purchase_id, cd.customer_name, ph.total_amount from purchase_history ph join customer_data cd on ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT ph.purchase_id, cd.customer_name, ph.total_amount FROM purchase_history ph JOIN customer_data cd ON ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select ph.purchase_id, cd.customer_name, ph.total_amount from purchase_history ph join customer_data cd on ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT ph.purchase_id, cd.customer_name, ph.total_amount FROM purchase_history ph JOIN customer_data cd ON ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select ph.purchase_id, cd.customer_name, ph.total_amount from purchase_history ph join customer_data cd on ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT ph.purchase_id, cd.customer_name, ph.total_amount FROM purchase_history ph JOIN customer_data cd ON ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select ph.purchase_id, cd.customer_name, ph.total_amount from purchase_history ph join customer_data cd on ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT ph.purchase_id, cd.customer_name, ph.total_amount FROM purchase_history ph JOIN customer_data cd ON ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select ph.purchase_id, cd.customer_name, ph.total_amount from purchase_history ph join customer_data cd on ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT ph.purchase_id, cd.customer_name, ph.total_amount FROM purchase_history ph JOIN customer_data cd ON ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select ph.purchase_id, cd.customer_name, ph.total_amount from purchase_history ph join customer_data cd on ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT ph.purchase_id, cd.customer_name, ph.total_amount FROM purchase_history ph JOIN customer_data cd ON ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select ph.purchase_id, cd.customer_name, ph.total_amount from purchase_history ph join customer_data cd on ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT ph.purchase_id, cd.customer_name, ph.total_amount FROM purchase_history ph JOIN customer_data cd ON ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select ph.purchase_id, cd.customer_name, ph.total_amount from purchase_history ph join customer_data cd on ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT ph.purchase_id, cd.customer_name, ph.total_amount FROM purchase_history ph JOIN customer_data cd ON ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select ph.purchase_id, cd.customer_name, ph.total_amount from purchase_history ph join customer_data cd on ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT ph.purchase_id, cd.customer_name, ph.total_amount FROM purchase_history ph JOIN customer_data cd ON ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select ph.purchase_id, cd.customer_name, ph.total_amount from purchase_history ph join customer_data cd on ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT ph.purchase_id, cd.customer_name, ph.total_amount FROM purchase_history ph JOIN customer_data cd ON ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select ph.purchase_id, cd.customer_name, ph.total_amount from purchase_history ph join customer_data cd on ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT ph.purchase_id, cd.customer_name, ph.total_amount FROM purchase_history ph JOIN customer_data cd ON ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select ph.purchase_id, cd.customer_name, ph.total_amount from purchase_history ph join customer_data cd on ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT ph.purchase_id, cd.customer_name, ph.total_amount FROM purchase_history ph JOIN customer_data cd ON ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select ph.purchase_id, cd.customer_name, ph.total_amount from purchase_history ph join customer_data cd on ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT ph.purchase_id, cd.customer_name, ph.total_amount FROM purchase_history ph JOIN customer_data cd ON ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select ph.purchase_id, cd.customer_name, ph.total_amount from purchase_history ph join customer_data cd on ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT ph.purchase_id, cd.customer_name, ph.total_amount FROM purchase_history ph JOIN customer_data cd ON ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select ph.purchase_id, cd.customer_name, ph.total_amount from purchase_history ph join customer_data cd on ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT ph.purchase_id, cd.customer_name, ph.total_amount FROM purchase_history ph JOIN customer_data cd ON ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select ph.purchase_id, cd.customer_name, ph.total_amount from purchase_history ph join customer_data cd on ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT ph.purchase_id, cd.customer_name, ph.total_amount FROM purchase_history ph JOIN customer_data cd ON ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select ph.purchase_id, cd.customer_name, ph.total_amount from purchase_history ph join customer_data cd on ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT ph.purchase_id, cd.customer_name, ph.total_amount FROM purchase_history ph JOIN customer_data cd ON ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select ph.purchase_id, cd.customer_name, ph.total_amount from purchase_history ph join customer_data cd on ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT ph.purchase_id, cd.customer_name, ph.total_amount FROM purchase_history ph JOIN customer_data cd ON ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select ph.purchase_id, cd.customer_name, ph.total_amount from purchase_history ph join customer_data cd on ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT ph.purchase_id, cd.customer_name, ph.total_amount FROM purchase_history ph JOIN customer_data cd ON ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select ph.purchase_id, cd.customer_name, ph.total_amount from purchase_history ph join customer_data cd on ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT ph.purchase_id, cd.customer_name, ph.total_amount FROM purchase_history ph JOIN customer_data cd ON ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select ph.purchase_id, cd.customer_name, ph.total_amount from purchase_history ph join customer_data cd on ph.customer_id = cd.customer_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT DISTINCT category FROM product_catalog;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select distinct category from product_catalog;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT DISTINCT category FROM product_catalog;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select distinct category from product_catalog;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT DISTINCT category FROM product_catalog;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select distinct category from product_catalog;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT DISTINCT category FROM product_catalog;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select distinct category from product_catalog;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT DISTINCT category FROM product_catalog;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select distinct category from product_catalog;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT DISTINCT category FROM product_catalog;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select distinct category from product_catalog;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT DISTINCT category FROM product_catalog;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select distinct category from product_catalog;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT DISTINCT category FROM product_catalog;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select distinct category from product_catalog;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT DISTINCT category FROM product_catalog;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select distinct category from product_catalog;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT DISTINCT category FROM product_catalog;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select distinct category from product_catalog;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT DISTINCT category FROM product_catalog;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select distinct category from product_catalog;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT DISTINCT category FROM product_catalog;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select distinct category from product_catalog;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT DISTINCT category FROM product_catalog;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select distinct category from product_catalog;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT DISTINCT category FROM product_catalog;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select distinct category from product_catalog;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT DISTINCT category FROM product_catalog;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select distinct category from product_catalog;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT DISTINCT category FROM product_catalog;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select distinct category from product_catalog;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT DISTINCT category FROM product_catalog;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select distinct category from product_catalog;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT DISTINCT category FROM product_catalog;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select distinct category from product_catalog;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT DISTINCT category FROM product_catalog;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select distinct category from product_catalog;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT DISTINCT category FROM product_catalog;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select distinct category from product_catalog;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT DISTINCT category FROM product_catalog;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select distinct category from product_catalog;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT DISTINCT category FROM product_catalog;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select distinct category from product_catalog;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT DISTINCT category FROM product_catalog;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select distinct category from product_catalog;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT DISTINCT category FROM product_catalog;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select distinct category from product_catalog;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT product_id, product_name, price FROM product_catalog WHERE category='Electronics';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select product_id, product_name, price from product_catalog where category='electronics';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT product_id, product_name, price FROM product_catalog WHERE category='Electronics';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select product_id, product_name, price from product_catalog where category='electronics';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT product_id, product_name, price FROM product_catalog WHERE category='Electronics';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select product_id, product_name, price from product_catalog where category='electronics';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT product_id, product_name, price FROM product_catalog WHERE category='Electronics';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select product_id, product_name, price from product_catalog where category='electronics';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT product_id, product_name, price FROM product_catalog WHERE category='Electronics';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select product_id, product_name, price from product_catalog where category='electronics';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT product_id, product_name, price FROM product_catalog WHERE category='Electronics';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select product_id, product_name, price from product_catalog where category='electronics';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT product_id, product_name, price FROM product_catalog WHERE category='Electronics';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select product_id, product_name, price from product_catalog where category='electronics';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT product_id, product_name, price FROM product_catalog WHERE category='Electronics';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select product_id, product_name, price from product_catalog where category='electronics';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT product_id, product_name, price FROM product_catalog WHERE category='Electronics';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select product_id, product_name, price from product_catalog where category='electronics';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT product_id, product_name, price FROM product_catalog WHERE category='Electronics';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select product_id, product_name, price from product_catalog where category='electronics';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT product_id, product_name, price FROM product_catalog WHERE category='Electronics';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select product_id, product_name, price from product_catalog where category='electronics';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT product_id, product_name, price FROM product_catalog WHERE category='Electronics';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select product_id, product_name, price from product_catalog where category='electronics';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT product_id, product_name, price FROM product_catalog WHERE category='Electronics';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select product_id, product_name, price from product_catalog where category='electronics';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT product_id, product_name, price FROM product_catalog WHERE category='Electronics';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select product_id, product_name, price from product_catalog where category='electronics';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT product_id, product_name, price FROM product_catalog WHERE category='Electronics';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select product_id, product_name, price from product_catalog where category='electronics';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT product_id, product_name, price FROM product_catalog WHERE category='Electronics';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select product_id, product_name, price from product_catalog where category='electronics';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT product_id, product_name, price FROM product_catalog WHERE category='Electronics';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select product_id, product_name, price from product_catalog where category='electronics';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT product_id, product_name, price FROM product_catalog WHERE category='Electronics';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select product_id, product_name, price from product_catalog where category='electronics';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT product_id, product_name, price FROM product_catalog WHERE category='Electronics';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select product_id, product_name, price from product_catalog where category='electronics';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT product_id, product_name, price FROM product_catalog WHERE category='Electronics';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select product_id, product_name, price from product_catalog where category='electronics';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT product_id, product_name, price FROM product_catalog WHERE category='Electronics';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select product_id, product_name, price from product_catalog where category='electronics';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT product_id, product_name, price FROM product_catalog WHERE category='Electronics';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select product_id, product_name, price from product_catalog where category='electronics';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT product_id, product_name, price FROM product_catalog WHERE category='Electronics';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select product_id, product_name, price from product_catalog where category='electronics';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT product_id, product_name, price FROM product_catalog WHERE category='Electronics';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select product_id, product_name, price from product_catalog where category='electronics';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM predictive_model WHERE accuracy > 0.8;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select * from predictive_model where accuracy > 0.8;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT * FROM predictive_model WHERE accuracy > 0.8;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select * from predictive_model where accuracy > 0.8;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM predictive_model WHERE accuracy > 0.8;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select * from predictive_model where accuracy > 0.8;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT * FROM predictive_model WHERE accuracy > 0.8;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select * from predictive_model where accuracy > 0.8;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT * FROM predictive_model WHERE accuracy > 0.8;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select * from predictive_model where accuracy > 0.8;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT * FROM predictive_model WHERE accuracy > 0.8;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select * from predictive_model where accuracy > 0.8;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM predictive_model WHERE accuracy > 0.8;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select * from predictive_model where accuracy > 0.8;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT * FROM predictive_model WHERE accuracy > 0.8;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select * from predictive_model where accuracy > 0.8;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM predictive_model WHERE accuracy > 0.8;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select * from predictive_model where accuracy > 0.8;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT * FROM predictive_model WHERE accuracy > 0.8;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select * from predictive_model where accuracy > 0.8;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT * FROM predictive_model WHERE accuracy > 0.8;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select * from predictive_model where accuracy > 0.8;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT * FROM predictive_model WHERE accuracy > 0.8;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select * from predictive_model where accuracy > 0.8;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM predictive_model WHERE accuracy > 0.8;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select * from predictive_model where accuracy > 0.8;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT * FROM predictive_model WHERE accuracy > 0.8;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select * from predictive_model where accuracy > 0.8;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT * FROM predictive_model WHERE accuracy > 0.8;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select * from predictive_model where accuracy > 0.8;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT * FROM predictive_model WHERE accuracy > 0.8;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select * from predictive_model where accuracy > 0.8;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT * FROM predictive_model WHERE accuracy > 0.8;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select * from predictive_model where accuracy > 0.8;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT * FROM predictive_model WHERE accuracy > 0.8;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select * from predictive_model where accuracy > 0.8;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT * FROM predictive_model WHERE accuracy > 0.8;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select * from predictive_model where accuracy > 0.8;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT * FROM predictive_model WHERE accuracy > 0.8;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select * from predictive_model where accuracy > 0.8;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT * FROM predictive_model WHERE accuracy > 0.8;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select * from predictive_model where accuracy > 0.8;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT * FROM predictive_model WHERE accuracy > 0.8;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select * from predictive_model where accuracy > 0.8;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT * FROM predictive_model WHERE accuracy > 0.8;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select * from predictive_model where accuracy > 0.8;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT * FROM predictive_model WHERE accuracy > 0.8;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select * from predictive_model where accuracy > 0.8;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT model_name, model_type, accuracy FROM predictive_model WHERE model_type='Regression';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select model_name, model_type, accuracy from predictive_model where model_type='regression';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT model_name, model_type, accuracy FROM predictive_model WHERE model_type='Regression';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select model_name, model_type, accuracy from predictive_model where model_type='regression';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT model_name, model_type, accuracy FROM predictive_model WHERE model_type='Regression';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select model_name, model_type, accuracy from predictive_model where model_type='regression';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT model_name, model_type, accuracy FROM predictive_model WHERE model_type='Regression';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select model_name, model_type, accuracy from predictive_model where model_type='regression';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT model_name, model_type, accuracy FROM predictive_model WHERE model_type='Regression';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select model_name, model_type, accuracy from predictive_model where model_type='regression';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT model_name, model_type, accuracy FROM predictive_model WHERE model_type='Regression';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select model_name, model_type, accuracy from predictive_model where model_type='regression';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT model_name, model_type, accuracy FROM predictive_model WHERE model_type='Regression';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select model_name, model_type, accuracy from predictive_model where model_type='regression';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT model_name, model_type, accuracy FROM predictive_model WHERE model_type='Regression';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select model_name, model_type, accuracy from predictive_model where model_type='regression';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT model_name, model_type, accuracy FROM predictive_model WHERE model_type='Regression';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select model_name, model_type, accuracy from predictive_model where model_type='regression';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT model_name, model_type, accuracy FROM predictive_model WHERE model_type='Regression';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select model_name, model_type, accuracy from predictive_model where model_type='regression';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT model_name, model_type, accuracy FROM predictive_model WHERE model_type='Regression';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select model_name, model_type, accuracy from predictive_model where model_type='regression';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT model_name, model_type, accuracy FROM predictive_model WHERE model_type='Regression';</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select model_name, model_type, accuracy from predictive_model where model_type='regression';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT model_name, model_type, accuracy FROM predictive_model WHERE model_type='Regression';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select model_name, model_type, accuracy from predictive_model where model_type='regression';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT model_name, model_type, accuracy FROM predictive_model WHERE model_type='Regression';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select model_name, model_type, accuracy from predictive_model where model_type='regression';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT model_name, model_type, accuracy FROM predictive_model WHERE model_type='Regression';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select model_name, model_type, accuracy from predictive_model where model_type='regression';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT model_name, model_type, accuracy FROM predictive_model WHERE model_type='Regression';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select model_name, model_type, accuracy from predictive_model where model_type='regression';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT model_name, model_type, accuracy FROM predictive_model WHERE model_type='Regression';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select model_name, model_type, accuracy from predictive_model where model_type='regression';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT model_name, model_type, accuracy FROM predictive_model WHERE model_type='Regression';</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select model_name, model_type, accuracy from predictive_model where model_type='regression';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT model_name, model_type, accuracy FROM predictive_model WHERE model_type='Regression';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select model_name, model_type, accuracy from predictive_model where model_type='regression';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT model_name, model_type, accuracy FROM predictive_model WHERE model_type='Regression';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select model_name, model_type, accuracy from predictive_model where model_type='regression';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT model_name, model_type, accuracy FROM predictive_model WHERE model_type='Regression';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select model_name, model_type, accuracy from predictive_model where model_type='regression';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT model_name, model_type, accuracy FROM predictive_model WHERE model_type='Regression';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select model_name, model_type, accuracy from predictive_model where model_type='regression';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT model_name, model_type, accuracy FROM predictive_model WHERE model_type='Regression';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select model_name, model_type, accuracy from predictive_model where model_type='regression';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT model_name, model_type, accuracy FROM predictive_model WHERE model_type='Regression';</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select model_name, model_type, accuracy from predictive_model where model_type='regression';</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.age, ph.purchase_date, pc.product_name, pc.price from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.city, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.city, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.city, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.city, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.city, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.city, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.city, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.city, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.city, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.city, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.city, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.city, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.city, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.city, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.city, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.city, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.city, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.city, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.city, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.city, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.city, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.city, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.city, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.city, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.city, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.city, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.city, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.city, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.city, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.city, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.city, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.city, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.city, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.city, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.city, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.city, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.city, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.city, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.city, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.city, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.city, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.city, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.city, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.city, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.city, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.city, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.city, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.city, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where pm.accuracy > 0.9;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.email, ph.total_amount FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id WHERE ph.total_amount > 1000;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.email, ph.total_amount from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id where ph.total_amount > 1000;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.email, ph.total_amount FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id WHERE ph.total_amount > 1000;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.email, ph.total_amount from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id where ph.total_amount > 1000;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.email, ph.total_amount FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id WHERE ph.total_amount > 1000;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.email, ph.total_amount from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id where ph.total_amount > 1000;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.email, ph.total_amount FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id WHERE ph.total_amount > 1000;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.email, ph.total_amount from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id where ph.total_amount > 1000;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.email, ph.total_amount FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id WHERE ph.total_amount > 1000;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.email, ph.total_amount from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id where ph.total_amount > 1000;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.email, ph.total_amount FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id WHERE ph.total_amount > 1000;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.email, ph.total_amount from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id where ph.total_amount > 1000;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.email, ph.total_amount FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id WHERE ph.total_amount > 1000;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.email, ph.total_amount from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id where ph.total_amount > 1000;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.email, ph.total_amount FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id WHERE ph.total_amount > 1000;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.email, ph.total_amount from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id where ph.total_amount > 1000;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.email, ph.total_amount FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id WHERE ph.total_amount > 1000;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.email, ph.total_amount from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id where ph.total_amount > 1000;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.email, ph.total_amount FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id WHERE ph.total_amount > 1000;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.email, ph.total_amount from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id where ph.total_amount > 1000;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.email, ph.total_amount FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id WHERE ph.total_amount > 1000;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.email, ph.total_amount from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id where ph.total_amount > 1000;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.email, ph.total_amount FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id WHERE ph.total_amount > 1000;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.email, ph.total_amount from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id where ph.total_amount > 1000;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.email, ph.total_amount FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id WHERE ph.total_amount > 1000;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.email, ph.total_amount from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id where ph.total_amount > 1000;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.email, ph.total_amount FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id WHERE ph.total_amount > 1000;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.email, ph.total_amount from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id where ph.total_amount > 1000;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.email, ph.total_amount FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id WHERE ph.total_amount > 1000;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.email, ph.total_amount from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id where ph.total_amount > 1000;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.email, ph.total_amount FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id WHERE ph.total_amount > 1000;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.email, ph.total_amount from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id where ph.total_amount > 1000;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.email, ph.total_amount FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id WHERE ph.total_amount > 1000;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.email, ph.total_amount from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id where ph.total_amount > 1000;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.email, ph.total_amount FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id WHERE ph.total_amount > 1000;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.email, ph.total_amount from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id where ph.total_amount > 1000;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.email, ph.total_amount FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id WHERE ph.total_amount > 1000;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.email, ph.total_amount from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id where ph.total_amount > 1000;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.email, ph.total_amount FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id WHERE ph.total_amount > 1000;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.email, ph.total_amount from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id where ph.total_amount > 1000;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.email, ph.total_amount FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id WHERE ph.total_amount > 1000;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.email, ph.total_amount from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id where ph.total_amount > 1000;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.email, ph.total_amount FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id WHERE ph.total_amount > 1000;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.email, ph.total_amount from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id where ph.total_amount > 1000;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.email, ph.total_amount FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id WHERE ph.total_amount > 1000;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.email, ph.total_amount from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id where ph.total_amount > 1000;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.email, ph.total_amount FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id WHERE ph.total_amount > 1000;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.email, ph.total_amount from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id where ph.total_amount > 1000;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT ph.purchase_id, ph.total_amount, pc.price FROM purchase_history ph JOIN product_catalog pc ON ph.product_id = pc.product_id WHERE pc.price < 500;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select ph.purchase_id, ph.total_amount, pc.price from purchase_history ph join product_catalog pc on ph.product_id = pc.product_id where pc.price < 500;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT ph.purchase_id, ph.total_amount, pc.price FROM purchase_history ph JOIN product_catalog pc ON ph.product_id = pc.product_id WHERE pc.price < 500;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select ph.purchase_id, ph.total_amount, pc.price from purchase_history ph join product_catalog pc on ph.product_id = pc.product_id where pc.price < 500;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT ph.purchase_id, ph.total_amount, pc.price FROM purchase_history ph JOIN product_catalog pc ON ph.product_id = pc.product_id WHERE pc.price < 500;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select ph.purchase_id, ph.total_amount, pc.price from purchase_history ph join product_catalog pc on ph.product_id = pc.product_id where pc.price < 500;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT ph.purchase_id, ph.total_amount, pc.price FROM purchase_history ph JOIN product_catalog pc ON ph.product_id = pc.product_id WHERE pc.price < 500;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select ph.purchase_id, ph.total_amount, pc.price from purchase_history ph join product_catalog pc on ph.product_id = pc.product_id where pc.price < 500;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT ph.purchase_id, ph.total_amount, pc.price FROM purchase_history ph JOIN product_catalog pc ON ph.product_id = pc.product_id WHERE pc.price < 500;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select ph.purchase_id, ph.total_amount, pc.price from purchase_history ph join product_catalog pc on ph.product_id = pc.product_id where pc.price < 500;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT ph.purchase_id, ph.total_amount, pc.price FROM purchase_history ph JOIN product_catalog pc ON ph.product_id = pc.product_id WHERE pc.price < 500;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select ph.purchase_id, ph.total_amount, pc.price from purchase_history ph join product_catalog pc on ph.product_id = pc.product_id where pc.price < 500;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT ph.purchase_id, ph.total_amount, pc.price FROM purchase_history ph JOIN product_catalog pc ON ph.product_id = pc.product_id WHERE pc.price < 500;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select ph.purchase_id, ph.total_amount, pc.price from purchase_history ph join product_catalog pc on ph.product_id = pc.product_id where pc.price < 500;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT ph.purchase_id, ph.total_amount, pc.price FROM purchase_history ph JOIN product_catalog pc ON ph.product_id = pc.product_id WHERE pc.price < 500;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select ph.purchase_id, ph.total_amount, pc.price from purchase_history ph join product_catalog pc on ph.product_id = pc.product_id where pc.price < 500;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT ph.purchase_id, ph.total_amount, pc.price FROM purchase_history ph JOIN product_catalog pc ON ph.product_id = pc.product_id WHERE pc.price < 500;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select ph.purchase_id, ph.total_amount, pc.price from purchase_history ph join product_catalog pc on ph.product_id = pc.product_id where pc.price < 500;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT ph.purchase_id, ph.total_amount, pc.price FROM purchase_history ph JOIN product_catalog pc ON ph.product_id = pc.product_id WHERE pc.price < 500;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select ph.purchase_id, ph.total_amount, pc.price from purchase_history ph join product_catalog pc on ph.product_id = pc.product_id where pc.price < 500;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT ph.purchase_id, ph.total_amount, pc.price FROM purchase_history ph JOIN product_catalog pc ON ph.product_id = pc.product_id WHERE pc.price < 500;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select ph.purchase_id, ph.total_amount, pc.price from purchase_history ph join product_catalog pc on ph.product_id = pc.product_id where pc.price < 500;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT ph.purchase_id, ph.total_amount, pc.price FROM purchase_history ph JOIN product_catalog pc ON ph.product_id = pc.product_id WHERE pc.price < 500;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select ph.purchase_id, ph.total_amount, pc.price from purchase_history ph join product_catalog pc on ph.product_id = pc.product_id where pc.price < 500;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT ph.purchase_id, ph.total_amount, pc.price FROM purchase_history ph JOIN product_catalog pc ON ph.product_id = pc.product_id WHERE pc.price < 500;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select ph.purchase_id, ph.total_amount, pc.price from purchase_history ph join product_catalog pc on ph.product_id = pc.product_id where pc.price < 500;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT ph.purchase_id, ph.total_amount, pc.price FROM purchase_history ph JOIN product_catalog pc ON ph.product_id = pc.product_id WHERE pc.price < 500;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select ph.purchase_id, ph.total_amount, pc.price from purchase_history ph join product_catalog pc on ph.product_id = pc.product_id where pc.price < 500;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT ph.purchase_id, ph.total_amount, pc.price FROM purchase_history ph JOIN product_catalog pc ON ph.product_id = pc.product_id WHERE pc.price < 500;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select ph.purchase_id, ph.total_amount, pc.price from purchase_history ph join product_catalog pc on ph.product_id = pc.product_id where pc.price < 500;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT ph.purchase_id, ph.total_amount, pc.price FROM purchase_history ph JOIN product_catalog pc ON ph.product_id = pc.product_id WHERE pc.price < 500;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select ph.purchase_id, ph.total_amount, pc.price from purchase_history ph join product_catalog pc on ph.product_id = pc.product_id where pc.price < 500;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT ph.purchase_id, ph.total_amount, pc.price FROM purchase_history ph JOIN product_catalog pc ON ph.product_id = pc.product_id WHERE pc.price < 500;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select ph.purchase_id, ph.total_amount, pc.price from purchase_history ph join product_catalog pc on ph.product_id = pc.product_id where pc.price < 500;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT ph.purchase_id, ph.total_amount, pc.price FROM purchase_history ph JOIN product_catalog pc ON ph.product_id = pc.product_id WHERE pc.price < 500;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select ph.purchase_id, ph.total_amount, pc.price from purchase_history ph join product_catalog pc on ph.product_id = pc.product_id where pc.price < 500;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT ph.purchase_id, ph.total_amount, pc.price FROM purchase_history ph JOIN product_catalog pc ON ph.product_id = pc.product_id WHERE pc.price < 500;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select ph.purchase_id, ph.total_amount, pc.price from purchase_history ph join product_catalog pc on ph.product_id = pc.product_id where pc.price < 500;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT ph.purchase_id, ph.total_amount, pc.price FROM purchase_history ph JOIN product_catalog pc ON ph.product_id = pc.product_id WHERE pc.price < 500;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select ph.purchase_id, ph.total_amount, pc.price from purchase_history ph join product_catalog pc on ph.product_id = pc.product_id where pc.price < 500;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT ph.purchase_id, ph.total_amount, pc.price FROM purchase_history ph JOIN product_catalog pc ON ph.product_id = pc.product_id WHERE pc.price < 500;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select ph.purchase_id, ph.total_amount, pc.price from purchase_history ph join product_catalog pc on ph.product_id = pc.product_id where pc.price < 500;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT ph.purchase_id, ph.total_amount, pc.price FROM purchase_history ph JOIN product_catalog pc ON ph.product_id = pc.product_id WHERE pc.price < 500;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select ph.purchase_id, ph.total_amount, pc.price from purchase_history ph join product_catalog pc on ph.product_id = pc.product_id where pc.price < 500;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT ph.purchase_id, ph.total_amount, pc.price FROM purchase_history ph JOIN product_catalog pc ON ph.product_id = pc.product_id WHERE pc.price < 500;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select ph.purchase_id, ph.total_amount, pc.price from purchase_history ph join product_catalog pc on ph.product_id = pc.product_id where pc.price < 500;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT ph.purchase_id, ph.total_amount, pc.price FROM purchase_history ph JOIN product_catalog pc ON ph.product_id = pc.product_id WHERE pc.price < 500;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select ph.purchase_id, ph.total_amount, pc.price from purchase_history ph join product_catalog pc on ph.product_id = pc.product_id where pc.price < 500;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE ph.total_amount > 500 AND pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id where ph.total_amount > 500 and pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE ph.total_amount > 500 AND pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id where ph.total_amount > 500 and pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE ph.total_amount > 500 AND pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id where ph.total_amount > 500 and pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE ph.total_amount > 500 AND pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id where ph.total_amount > 500 and pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE ph.total_amount > 500 AND pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id where ph.total_amount > 500 and pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE ph.total_amount > 500 AND pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id where ph.total_amount > 500 and pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE ph.total_amount > 500 AND pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id where ph.total_amount > 500 and pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE ph.total_amount > 500 AND pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id where ph.total_amount > 500 and pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE ph.total_amount > 500 AND pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id where ph.total_amount > 500 and pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE ph.total_amount > 500 AND pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id where ph.total_amount > 500 and pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE ph.total_amount > 500 AND pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id where ph.total_amount > 500 and pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE ph.total_amount > 500 AND pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id where ph.total_amount > 500 and pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE ph.total_amount > 500 AND pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id where ph.total_amount > 500 and pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE ph.total_amount > 500 AND pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id where ph.total_amount > 500 and pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE ph.total_amount > 500 AND pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id where ph.total_amount > 500 and pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE ph.total_amount > 500 AND pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id where ph.total_amount > 500 and pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE ph.total_amount > 500 AND pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id where ph.total_amount > 500 and pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE ph.total_amount > 500 AND pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id where ph.total_amount > 500 and pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE ph.total_amount > 500 AND pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id where ph.total_amount > 500 and pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE ph.total_amount > 500 AND pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id where ph.total_amount > 500 and pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE ph.total_amount > 500 AND pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id where ph.total_amount > 500 and pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE ph.total_amount > 500 AND pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id where ph.total_amount > 500 and pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE ph.total_amount > 500 AND pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id where ph.total_amount > 500 and pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE ph.total_amount > 500 AND pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join predictive_model pm on cd.customer_id = pm.model_id where ph.total_amount > 500 and pm.accuracy > 0.7;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE cd.city='London' AND pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where cd.city='london' and pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE cd.city='London' AND pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where cd.city='london' and pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE cd.city='London' AND pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where cd.city='london' and pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE cd.city='London' AND pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where cd.city='london' and pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE cd.city='London' AND pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where cd.city='london' and pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE cd.city='London' AND pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where cd.city='london' and pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE cd.city='London' AND pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where cd.city='london' and pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE cd.city='London' AND pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where cd.city='london' and pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE cd.city='London' AND pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where cd.city='london' and pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE cd.city='London' AND pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where cd.city='london' and pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE cd.city='London' AND pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where cd.city='london' and pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE cd.city='London' AND pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where cd.city='london' and pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE cd.city='London' AND pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where cd.city='london' and pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE cd.city='London' AND pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where cd.city='london' and pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE cd.city='London' AND pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where cd.city='london' and pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE cd.city='London' AND pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where cd.city='london' and pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE cd.city='London' AND pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where cd.city='london' and pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE cd.city='London' AND pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where cd.city='london' and pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE cd.city='London' AND pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where cd.city='london' and pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE cd.city='London' AND pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where cd.city='london' and pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE cd.city='London' AND pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where cd.city='london' and pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE cd.city='London' AND pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where cd.city='london' and pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE cd.city='London' AND pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where cd.city='london' and pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy FROM customer_data cd JOIN predictive_model pm ON cd.customer_id = pm.model_id WHERE cd.city='London' AND pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.age, cd.city, pm.model_name, pm.accuracy from customer_data cd join predictive_model pm on cd.customer_id = pm.model_id where cd.city='london' and pm.accuracy < 0.7;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.email, pc.product_name, ph.total_amount, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);</t><stat>select cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);</t><stat>select cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);</t><stat>select cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>SELECT cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name FROM customer_data cd JOIN purchase_history ph ON cd.customer_id = ph.customer_id JOIN product_catalog pc ON ph.product_id = pc.product_id JOIN predictive_model pm ON cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE predictive_model (
    model_id INT PRIMARY KEY,
    model_name VARCHAR(50),
    model_type VARCHAR(50),
    accuracy DECIMAL(5,2)
);

CREATE TABLE product_catalog (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50),
    category VARCHAR(50),
    price DECIMAL(10,2)
);

CREATE TABLE purchase_history (
    purchase_id INT PRIMARY KEY,
    customer_id INT,
    purchase_date DATE,
    total_amount DECIMAL(10,2),
    FOREIGN KEY (customer_id) REFERENCES customer_data(customer_id)
);

CREATE TABLE customer_data (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50),
    age INT,
    city VARCHAR(50),
    email VARCHAR(50)
);</t><stat>select cd.customer_name, cd.age, cd.city, ph.purchase_date, pc.product_name, pm.model_name from customer_data cd join purchase_history ph on cd.customer_id = ph.customer_id join product_catalog pc on ph.product_id = pc.product_id join predictive_model pm on cd.customer_id = pm.model_id;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_date, prediction_score FROM predictions;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_date, prediction_score from predictions;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM transactions WHERE amount > 1000;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from transactions where amount > 1000;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, age FROM customers WHERE age > 30;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, age from customers where age > 30;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, price FROM products WHERE category = 'Electronics';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, price from products where category = 'electronics';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons WHERE region = 'North';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons where region = 'north';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers WHERE customer_id = 100;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers where customer_id = 100;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, customer_id, transaction_date FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, customer_id, transaction_date from transactions where transaction_date between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM salespersons WHERE salesperson_id = 2;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from salespersons where salesperson_id = 2;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT * FROM products WHERE price < 50;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select * from products where price < 50;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT prediction_id, prediction_score FROM predictions WHERE customer_id = 200;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select prediction_id, prediction_score from predictions where customer_id = 200;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT transaction_id, amount FROM transactions WHERE customer_id = 150;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select transaction_id, amount from transactions where customer_id = 150;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT product_name, category FROM products ORDER BY category;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select product_name, category from products order by category;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_name, email FROM customers ORDER BY customer_name DESC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_name, email from customers order by customer_name desc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT salesperson_name, region FROM salespersons ORDER BY region ASC;</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select salesperson_name, region from salespersons order by region asc;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>SELECT customer_id, age, email FROM customers WHERE customer_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE predictions (prediction_id INT PRIMARY KEY, customer_id INT, prediction_date DATE, prediction_score DECIMAL(5, 2));

CREATE TABLE salespersons (salesperson_id INT PRIMARY KEY, salesperson_name VARCHAR(100), region VARCHAR(50));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), category VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, transaction_date DATE, amount DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(100), age INT, email VARCHAR(100));</t><stat>select customer_id, age, email from customers where customer_id in (1, 2, 3);</stat>