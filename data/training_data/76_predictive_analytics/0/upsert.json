[
  "### TABLEDATA\n\nCREATE TABLE customer_churn_predictions (\n    customer_id UUID PRIMARY KEY,\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    total_sales DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO customer_churn_predictions (customer_id, email, age, gender, total_sales) VALUES ('11111111-1111-1111-1111-111111111111', 'customer1@example.com', 30, 'Male', 500.00)",
  "### TABLEDATA\n\nCREATE TABLE customer_churn_predictions (\n    customer_id UUID PRIMARY KEY,\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    total_sales DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO customer_churn_predictions (customer_id, email, age, gender, total_sales) VALUES ('22222222-2222-2222-2222-222222222222', 'customer2@example.com', 25, 'Female', 800.00)",
  "### TABLEDATA\n\nCREATE TABLE customer_churn_predictions (\n    customer_id UUID PRIMARY KEY,\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    total_sales DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO customer_churn_predictions (customer_id, email, age, gender, total_sales) VALUES ('33333333-3333-3333-3333-333333333333', 'customer3@example.com', 40, 'Male', 1200.00)",
  "### TABLEDATA\n\nCREATE TABLE customer_churn_predictions (\n    customer_id UUID PRIMARY KEY,\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    total_sales DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO customer_churn_predictions (customer_id, email, age, gender, total_sales) VALUES ('44444444-4444-4444-4444-444444444444', 'customer4@example.com', 35, 'Female', 950.00)",
  "### TABLEDATA\n\nCREATE TABLE customer_churn_predictions (\n    customer_id UUID PRIMARY KEY,\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    total_sales DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO customer_churn_predictions (customer_id, email, age, gender, total_sales) VALUES ('55555555-5555-5555-5555-555555555555', 'customer5@example.com', 45, 'Male', 1500.00)",
  "### TABLEDATA\n\nCREATE TABLE customer_churn_predictions (\n    customer_id UUID PRIMARY KEY,\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    total_sales DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO customer_churn_predictions (customer_id, email, age, gender, total_sales) VALUES ('66666666-6666-6666-6666-666666666666', 'customer6@example.com', 28, 'Female', 700.00)",
  "### TABLEDATA\n\nCREATE TABLE customer_churn_predictions (\n    customer_id UUID PRIMARY KEY,\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    total_sales DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO customer_churn_predictions (customer_id, email, age, gender, total_sales) VALUES ('77777777-7777-7777-7777-777777777777', 'customer7@example.com', 33, 'Male', 1100.00)",
  "### TABLEDATA\n\nCREATE TABLE customer_churn_predictions (\n    customer_id UUID PRIMARY KEY,\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    total_sales DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO customer_churn_predictions (customer_id, email, age, gender, total_sales) VALUES ('88888888-8888-8888-8888-888888888888', 'customer8@example.com', 50, 'Female', 1800.00)",
  "### TABLEDATA\n\nCREATE TABLE customer_churn_predictions (\n    customer_id UUID PRIMARY KEY,\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    total_sales DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO customer_churn_predictions (customer_id, email, age, gender, total_sales) VALUES ('99999999-9999-9999-9999-999999999999', 'customer9@example.com', 22, 'Male', 600.00)",
  "### TABLEDATA\n\nCREATE TABLE customer_churn_predictions (\n    customer_id UUID PRIMARY KEY,\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    total_sales DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO customer_churn_predictions (customer_id, email, age, gender, total_sales) VALUES ('10101010-1010-1010-1010-101010101010', 'customer10@example.com', 32, 'Female', 1000.00)",
  "### TABLEDATA\n\nCREATE TABLE customer_churn_predictions (\n    customer_id UUID PRIMARY KEY,\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    total_sales DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO customer_churn_predictions (customer_id, email, age, gender, total_sales) VALUES ('11111111-1234-5678-9101-111111111111', 'customer11@example.com', 37, 'Male', 1300.00)",
  "### TABLEDATA\n\nCREATE TABLE customer_churn_predictions (\n    customer_id UUID PRIMARY KEY,\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    total_sales DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO customer_churn_predictions (customer_id, email, age, gender, total_sales) VALUES ('12121212-1212-1212-1212-121212121212', 'customer12@example.com', 42, 'Female', 1400.00)",
  "### TABLEDATA\n\nCREATE TABLE customer_churn_predictions (\n    customer_id UUID PRIMARY KEY,\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    total_sales DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO customer_churn_predictions (customer_id, email, age, gender, total_sales) VALUES ('13131313-1313-1313-1313-131313131313', 'customer13@example.com', 27, 'Male', 850.00)",
  "### TABLEDATA\n\nCREATE TABLE customer_churn_predictions (\n    customer_id UUID PRIMARY KEY,\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    total_sales DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO customer_churn_predictions (customer_id, email, age, gender, total_sales) VALUES ('14141414-1414-1414-1414-141414141414', 'customer14@example.com', 31, 'Female', 950.00)",
  "### TABLEDATA\n\nCREATE TABLE customer_churn_predictions (\n    customer_id UUID PRIMARY KEY,\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    total_sales DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO customer_churn_predictions (customer_id, email, age, gender, total_sales) VALUES ('15151515-1515-1515-1515-151515151515', 'customer15@example.com', 38, 'Male', 1250.00)",
  "### TABLEDATA\n\nCREATE TABLE customer_churn_predictions (\n    customer_id UUID PRIMARY KEY,\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    total_sales DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO customer_churn_predictions (customer_id, email, age, gender, total_sales) VALUES ('16161616-1616-1616-1616-161616161616', 'customer16@example.com', 26, 'Female', 750.00)",
  "### TABLEDATA\n\nCREATE TABLE customer_churn_predictions (\n    customer_id UUID PRIMARY KEY,\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    total_sales DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO customer_churn_predictions (customer_id, email, age, gender, total_sales) VALUES ('17171717-1717-1717-1717-171717171717', 'customer17@example.com', 36, 'Male', 1050.00)",
  "### TABLEDATA\n\nCREATE TABLE customer_churn_predictions (\n    customer_id UUID PRIMARY KEY,\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    total_sales DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO customer_churn_predictions (customer_id, email, age, gender, total_sales) VALUES ('18181818-1818-1818-1818-181818181818', 'customer18@example.com', 47, 'Female', 1600.00)",
  "### TABLEDATA\n\nCREATE TABLE customer_churn_predictions (\n    customer_id UUID PRIMARY KEY,\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    total_sales DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO customer_churn_predictions (customer_id, email, age, gender, total_sales) VALUES ('19191919-1919-1919-1919-191919191919', 'customer19@example.com', 29, 'Male', 800.00)",
  "### TABLEDATA\n\nCREATE TABLE customer_churn_predictions (\n    customer_id UUID PRIMARY KEY,\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    total_sales DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO customer_churn_predictions (customer_id, email, age, gender, total_sales) VALUES ('20202020-2020-2020-2020-202020202020', 'customer20@example.com', 39, 'Female', 1100.00)",
  "### TABLEDATA\n\nCREATE TABLE customer_churn_predictions (\n    customer_id UUID PRIMARY KEY,\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    total_sales DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO customer_churn_predictions (customer_id, email, age, gender, total_sales) VALUES ('11111111-1111-1111-1111-111111111111', 'john.doe@example.com', 30, 'Male', 1000.50) ON CONFLICT (customer_id) DO UPDATE SET email = 'john.doe@example.com', age = 30, gender = 'Male', total_sales = 1000.50;",
  "### TABLEDATA\n\nCREATE TABLE customer_churn_predictions (\n    customer_id UUID PRIMARY KEY,\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    total_sales DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO customer_churn_predictions (customer_id, email, age, gender, total_sales) VALUES ('22222222-2222-2222-2222-222222222222', 'jane.smith@example.com', 25, 'Female', 800.75) ON CONFLICT (customer_id) DO UPDATE SET email = 'jane.smith@example.com', age = 25, gender = 'Female', total_sales = 800.75;",
  "### TABLEDATA\n\nCREATE TABLE customer_churn_predictions (\n    customer_id UUID PRIMARY KEY,\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    total_sales DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO customer_churn_predictions (customer_id, email, age, gender, total_sales) VALUES ('33333333-3333-3333-3333-333333333333', 'mike.jones@example.com', 35, 'Male', 1200.25) ON CONFLICT (customer_id) DO UPDATE SET email = 'mike.jones@example.com', age = 35, gender = 'Male', total_sales = 1200.25;",
  "### TABLEDATA\n\nCREATE TABLE customer_churn_predictions (\n    customer_id UUID PRIMARY KEY,\n    email VARCHAR(255),\n    age INT,\n    gender VARCHAR(10),\n    total_sales DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO customer_churn_predictions (customer_id, email, age, gender, total_sales) VALUES ('44444444-4444-4444-4444-444444444444', 'sara.wilson@example.com', 28, 'Female', 950.45) ON CONFLICT (customer_id) DO UPD...",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone, customer_since) VALUES (1, 'Alice', 'alice@example.com', '123-456-7890', '2022-01-01') ON DUPLICATE KEY UPDATE customer_name='Alice', customer_email='alice@example.com', customer_phone='123-456-7890', customer_since='2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone, customer_since) VALUES (2, 'Bob', 'bob@example.com', '987-654-3210', '2022-02-01') ON DUPLICATE KEY UPDATE customer_name='Bob', customer_email='bob@example.com', customer_phone='987-654-3210', customer_since='2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone, customer_since) VALUES (3, 'Charlie', 'charlie@example.com', '555-123-4567', '2022-03-01') ON DUPLICATE KEY UPDATE customer_name='Charlie', customer_email='charlie@example.com', customer_phone='555-123-4567', customer_since='2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone, customer_since) VALUES (4, 'David', 'david@example.com', '444-222-3333', '2022-04-01') ON DUPLICATE KEY UPDATE customer_name='David', customer_email='david@example.com', customer_phone='444-222-3333', customer_since='2022-04-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone, customer_since) VALUES (5, 'Eve', 'eve@example.com', '999-888-7777', '2022-05-01') ON DUPLICATE KEY UPDATE customer_name='Eve', customer_email='eve@example.com', customer_phone='999-888-7777', customer_since='2022-05-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone, customer_since) VALUES (6, 'Frank', 'frank@example.com', '777-555-9999', '2022-06-01') ON DUPLICATE KEY UPDATE customer_name='Frank', customer_email='frank@example.com', customer_phone='777-555-9999', customer_since='2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone, customer_since) VALUES (7, 'Grace', 'grace@example.com', '666-444-1111', '2022-07-01') ON DUPLICATE KEY UPDATE customer_name='Grace', customer_email='grace@example.com', customer_phone='666-444-1111', customer_since='2022-07-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone, customer_since) VALUES (8, 'Henry', 'henry@example.com', '333-777-8888', '2022-08-01') ON DUPLICATE KEY UPDATE customer_name='Henry', customer_email='henry@example.com', customer_phone='333-777-8888', customer_since='2022-08-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone, customer_since) VALUES (9, 'Ivy', 'ivy@example.com', '222-999-6666', '2022-09-01') ON DUPLICATE KEY UPDATE customer_name='Ivy', customer_email='ivy@example.com', customer_phone='222-999-6666', customer_since='2022-09-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone, customer_since) VALUES (10, 'Jack', 'jack@example.com', '111-222-3333', '2022-10-01') ON DUPLICATE KEY UPDATE customer_name='Jack', customer_email='jack@example.com', customer_phone='111-222-3333', customer_since='2022-10-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone, customer_since) VALUES (11, 'Kate', 'kate@example.com', '999-111-2222', '2022-11-01') ON DUPLICATE KEY UPDATE customer_name='Kate', customer_email='kate@example.com', customer_phone='999-111-2222', customer_since='2022-11-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone, customer_since) VALUES (12, 'Luke', 'luke@example.com', '888-333-4444', '2022-12-01') ON DUPLICATE KEY UPDATE customer_name='Luke', customer_email='luke@example.com', customer_phone='888-333-4444', customer_since='2022-12-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone, customer_since) VALUES (13, 'Mia', 'mia@example.com', '777-444-5555', '2023-01-01') ON DUPLICATE KEY UPDATE customer_name='Mia', customer_email='mia@example.com', customer_phone='777-444-5555', customer_since='2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone, customer_since) VALUES (14, 'Nathan', 'nathan@example.com', '666-555-6666', '2023-02-01') ON DUPLICATE KEY UPDATE customer_name='Nathan', customer_email='nathan@example.com', customer_phone='666-555-6666', customer_since='2023-02-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone, customer_since) VALUES (15, 'Olivia', 'olivia@example.com', '555-666-7777', '2023-03-01') ON DUPLICATE KEY UPDATE customer_name='Olivia', customer_email='olivia@example.com', customer_phone='555-666-7777', customer_since='2023-03-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone, customer_since) VALUES (16, 'Peter', 'peter@example.com', '444-777-8888', '2023-04-01') ON DUPLICATE KEY UPDATE customer_name='Peter', customer_email='peter@example.com', customer_phone='444-777-8888', customer_since='2023-04-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone, customer_since) VALUES (17, 'Quinn', 'quinn@example.com', '333-888-9999', '2023-05-01') ON DUPLICATE KEY UPDATE customer_name='Quinn', customer_email='quinn@example.com', customer_phone='333-888-9999', customer_since='2023-05-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone, customer_since) VALUES (18, 'Rachel', 'rachel@example.com', '222-999-0000', '2023-06-01') ON DUPLICATE KEY UPDATE customer_name='Rachel', customer_email='rachel@example.com', customer_phone='222-999-0000', customer_since='2023-06-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone, customer_since) VALUES (19, 'Sam', 'sam@example.com', '111-000-1111', '2023-07-01') ON DUPLICATE KEY UPDATE customer_name='Sam', customer_email='sam@example.com', customer_phone='111-000-1111', customer_since='2023-07-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_phone, customer_since) VALUES (20, 'Tom', 'tom@example.com', '000-111-0000', '2023-08-01') ON DUPLICATE KEY UPDATE customer_name='Tom', customer_email='tom@example.com', customer_phone='000-111-0000', customer_since='2023-08-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone, customer_since) VALUES (101, 'John Doe', 'john.doe@example.com', '1234567890', '2022-01-01') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_phone = '1234567890'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone, customer_since) VALUES (102, 'Jane Smith', 'jane.smith@example.com', '9876543210', '2021-12-01') ON DUPLICATE KEY UPDATE customer_name = 'Jane Smith', customer_email = 'jane.smith@example.com', customer_phone = '9876543210'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone, customer_since) VALUES (103, 'Alice Johnson', 'alice.johnson@example.com', '5551234567', '2021-11-15') ON DUPLICATE KEY UPDATE customer_name = 'Alice Johnson', customer_email = 'alice.johnson@example.com', customer_phone = '5551234567'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone, customer_since) VALUES (104, 'Bob Smith', 'bob.smith@example.com', '6549873210', '2021-10-20') ON DUPLICATE KEY UPDATE customer_name = 'Bob Smith', customer_email = 'bob.smith@example.com', customer_phone = '6549873210'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone, customer_since) VALUES (105, 'Sarah Brown', 'sarah.brown@example.com', '7896543210', '2022-02-10') ON DUPLICATE KEY UPDATE customer_name = 'Sarah Brown', customer_email = 'sarah.brown@example.com', customer_phone = '7896543210'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone, customer_since) VALUES (106, 'Michael Lee', 'michael.lee@example.com', '4567891230', '2022-03-05') ON DUPLICATE KEY UPDATE customer_name = 'Michael Lee', customer_email = 'michael.lee@example.com', customer_phone = '4567891230'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone, customer_since) VALUES (107, 'Emily Williams', 'emily.williams@example.com', '9873216540', '2022-04-20') ON DUPLICATE KEY UPDATE customer_name = 'Emily Williams', customer_email = 'emily.williams@example.com', customer_phone = '9873216540'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone, customer_since) VALUES (108, 'David Miller', 'david.miller@example.com', '3698521470', '2022-05-15') ON DUPLICATE KEY UPDATE customer_name = 'David Miller', customer_email = 'david.miller@example.com', customer_phone = '3698521470'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone, customer_since) VALUES (109, 'Jessica Taylor', 'jessica.taylor@example.com', '1593578520', '2022-06-30') ON DUPLICATE KEY UPDATE customer_name = 'Jessica Taylor', customer_email = 'jessica.taylor@example.com', customer_phone = '1593578520'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_phone, customer_since) VALUES (110, 'Kevin Davis', 'kevin.davis@example.com', '7539514680', '2022-07-10') ON DUPLICATE KEY UPDATE customer_name = 'Kevin Davis', customer_email = 'kevin.davis@example.com', customer_phone = '7539514680'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO sales (sale_id, customer_id, sale_date, sale_amount, product_id) VALUES (201, 101, '2022-01-10', 150.25, 301) ON DUPLICATE KEY UPDATE customer_id = 101, sale_date = '2022-01-10', sale_amount = 150.25, product_id = 301",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO sales (sale_id, customer_id, sale_date, sale_amount, product_id) VALUES (202, 102, '2022-01-15', 200.75, 302) ON DUPLICATE KEY UPDATE customer_id = 102, sale_date = '2022-01-15', sale_amount = 200.75, product_id = 302",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO sales (sale_id, customer_id, sale_date, sale_amount, product_id) VALUES (203, 103, '2022-01-20', 100.50, 303) ON DUPLICATE KEY UPDATE customer_id = 103, sale_date = '2022-01-20', sale_amount = 100.50, product_id = 303",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO sales (sale_id, customer_id, sale_date, sale_amount, product_id) VALUES (204, 104, '2022-01-25', 175.30, 304) ON DUPLICATE KEY UPDATE customer_id = 104, sale_date = '2022-01-25', sale_amount = 175.30, product_id = 304",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO sales (sale_id, customer_id, sale_date, sale_amount, product_id) VALUES (205, 105, '2022-02-01', 300.60, 305) ON DUPLICATE KEY UPDATE customer_id = 105, sale_date = '2022-02-01', sale_amount = 300.60, product_id = 305",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO sales (sale_id, customer_id, sale_date, sale_amount, product_id) VALUES (206, 106, '2022-02-05', 250.45, 306) ON DUPLICATE KEY UPDATE customer_id = 106, sale_date = '2022-02-05', sale_amount = 250.45, product_id = 306",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO sales (sale_id, customer_id, sale_date, sale_amount, product_id) VALUES (207, 107, '2022-02-10', 180.90, 307) ON DUPLICATE KEY UPDATE customer_id = 107, sale_date = '2022-02-10', sale_amount = 180.90, product_id = 307",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO sales (sale_id, customer_id, sale_date, sale_amount, product_id) VALUES (208, 108, '2022-02-15', 220.30, 308) ON DUPLICATE KEY UPDATE customer_id = 108, sale_date = '2022-02-15', sale_amount = 220.30, product_id = 308",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO sales (sale_id, customer_id, sale_date, sale_amount, product_id) VALUES (209, 109, '2022-02-20', 150.70, 309) ON DUPLICATE KEY UPDATE customer_id = 109, sale_date = '2022-02-20', sale_amount = 150.70, product_id = 309",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15),\n    customer_since DATE\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    sale_amount DECIMAL(10, 2),\n    product_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO sales (sale_id, customer_id, sale_date, sale_amount, product_id) VALUES (210, 110, '2022-02-25', 280.25, 310) ON DUPLICATE KEY UPDATE customer_id = 110, sale_date = '2022-02-25', sale_amount = 280.25, product_id = 310",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, phone_number, email) VALUES (1, 'Alice', '123 Main St', '555-1234', 'alice@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Alice', address = '123 Main St', phone_number = '555-1234', email = 'alice@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, phone_number, email) VALUES (2, 'Bob', '456 Elm St', '555-5678', 'bob@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Bob', address = '456 Elm St', phone_number = '555-5678', email = 'bob@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, phone_number, email) VALUES (3, 'Charlie', '789 Oak St', '555-9101', 'charlie@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Charlie', address = '789 Oak St', phone_number = '555-9101', email = 'charlie@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, phone_number, email) VALUES (4, 'David', '321 Pine St', '555-1122', 'david@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'David', address = '321 Pine St', phone_number = '555-1122', email = 'david@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, phone_number, email) VALUES (5, 'Emily', '654 Cedar St', '555-3344', 'emily@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Emily', address = '654 Cedar St', phone_number = '555-3344', email = 'emily@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, phone_number, email) VALUES (6, 'Frank', '987 Birch St', '555-5566', 'frank@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Frank', address = '987 Birch St', phone_number = '555-5566', email = 'frank@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, phone_number, email) VALUES (7, 'Grace', '135 Walnut St', '555-7788', 'grace@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Grace', address = '135 Walnut St', phone_number = '555-7788', email = 'grace@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, phone_number, email) VALUES (8, 'Henry', '246 Maple St', '555-9910', 'henry@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Henry', address = '246 Maple St', phone_number = '555-9910', email = 'henry@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, phone_number, email) VALUES (9, 'Isabel', '357 Pine St', '555-2233', 'isabel@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Isabel', address = '357 Pine St', phone_number = '555-2233', email = 'isabel@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, phone_number, email) VALUES (10, 'Jack', '468 Birch St', '555-4455', 'jack@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Jack', address = '468 Birch St', phone_number = '555-4455', email = 'jack@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, phone_number, email) VALUES (11, 'Katie', '579 Oak St', '555-6677', 'katie@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Katie', address = '579 Oak St', phone_number = '555-6677', email = 'katie@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, phone_number, email) VALUES (12, 'Liam', '690 Elm St', '555-8899', 'liam@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Liam', address = '690 Elm St', phone_number = '555-8899', email = 'liam@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, phone_number, email) VALUES (13, 'Mia', '701 Cedar St', '555-1001', 'mia@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Mia', address = '701 Cedar St', phone_number = '555-1001', email = 'mia@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, phone_number, email) VALUES (14, 'Noah', '712 Walnut St', '555-1223', 'noah@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Noah', address = '712 Walnut St', phone_number = '555-1223', email = 'noah@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, phone_number, email) VALUES (15, 'Olivia', '823 Maple St', '555-1445', 'olivia@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Olivia', address = '823 Maple St', phone_number = '555-1445', email = 'olivia@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, phone_number, email) VALUES (16, 'Peter', '934 Pine St', '555-1667', 'peter@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Peter', address = '934 Pine St', phone_number = '555-1667', email = 'peter@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, phone_number, email) VALUES (17, 'Quinn', '245 Cedar St', '555-1889', 'quinn@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Quinn', address = '245 Cedar St', phone_number = '555-1889', email = 'quinn@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, phone_number, email) VALUES (18, 'Rachel', '356 Walnut St', '555-2001', 'rachel@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Rachel', address = '356 Walnut St', phone_number = '555-2001', email = 'rachel@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, phone_number, email) VALUES (19, 'Sam', '467 Maple St', '555-2223', 'sam@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Sam', address = '467 Maple St', phone_number = '555-2223', email = 'sam@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, phone_number, email) VALUES (20, 'Tina', '578 Pine St', '555-2445', 'tina@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Tina', address = '578 Pine St', phone_number = '555-2445', email = 'tina@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, address, phone_number, email) VALUES (1, 'John Doe', '123 Main St', '555-1234', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', address = '123 Main St', phone_number = '555-1234', email = 'john.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, address, phone_number, email) VALUES (2, 'Jane Smith', '456 Elm St', '555-5678', 'jane.smith@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Jane Smith', address = '456 Elm St', phone_number = '555-5678', email = 'jane.smith@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO sales (sale_id, customer_id, sale_date, total_amount, payment_method) VALUES (1, 1, '2021-09-15', 50.00, 'Credit Card') ON DUPLICATE KEY UPDATE customer_id = 1, sale_date = '2021-09-15', total_amount = 50.00, payment_method = 'Credit Card';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO sales (sale_id, customer_id, sale_date, total_amount, payment_method) VALUES (2, 2, '2021-09-20', 75.00, 'PayPal') ON DUPLICATE KEY UPDATE customer_id = 2, sale_date = '2021-09-20', total_amount = 75.00, payment_method = 'PayPal';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO churn_prediction (customer_id, last_purchase_date, average_purchase_amount, churn_probability) VALUES (1, '2021-09-15', 50.00, 0.2) ON DUPLICATE KEY UPDATE last_purchase_date = '2021-09-15', average_purchase_amount = 50.00, churn_probability = 0.2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO churn_prediction (customer_id, last_purchase_date, average_purchase_amount, churn_probability) VALUES (2, '2021-09-20', 75.00, 0.1) ON DUPLICATE KEY UPDATE last_purchase_date = '2021-09-20', average_purchase_amount = 75.00, churn_probability = 0.1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, address, phone_number, email) VALUES (3, 'Alice Williams', '789 Oak St', '555-9012', 'alice.williams@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Alice Williams', address = '789 Oak St', phone_number = '555-9012', email = 'alice.williams@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, address, phone_number, email) VALUES (4, 'Bob Johnson', '987 Pine St', '555-3456', 'bob.johnson@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Bob Johnson', address = '987 Pine St', phone_number = '555-3456', email = 'bob.johnson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO sales (sale_id, customer_id, sale_date, total_amount, payment_method) VALUES (3, 3, '2021-09-25', 100.00, 'Cash') ON DUPLICATE KEY UPDATE customer_id = 3, sale_date = '2021-09-25', total_amount = 100.00, payment_method = 'Cash';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO sales (sale_id, customer_id, sale_date, total_amount, payment_method) VALUES (4, 4, '2021-09-30', 120.00, 'Credit Card') ON DUPLICATE KEY UPDATE customer_id = 4, sale_date = '2021-09-30', total_amount = 120.00, payment_method = 'Credit Card';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO churn_prediction (customer_id, last_purchase_date, average_purchase_amount, churn_probability) VALUES (3, '2021-09-25', 100.00, 0.3) ON DUPLICATE KEY UPDATE last_purchase_date = '2021-09-25', average_purchase_amount = 100.00, churn_probability = 0.3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO churn_prediction (customer_id, last_purchase_date, average_purchase_amount, churn_probability) VALUES (4, '2021-09-30', 120.00, 0.4) ON DUPLICATE KEY UPDATE last_purchase_date = '2021-09-30', average_purchase_amount = 120.00, churn_probability = 0.4;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, address, phone_number, email) VALUES (5, 'Eve Brown', '654 Maple St', '555-6789', 'eve.brown@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Eve Brown', address = '654 Maple St', phone_number = '555-6789', email = 'eve.brown@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, address, phone_number, email) VALUES (6, 'Charlie Davis', '357 Cedar St', '555-2345', 'charlie.davis@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Charlie Davis', address = '357 Cedar St', phone_number = '555-2345', email = 'charlie.davis@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO sales (sale_id, customer_id, sale_date, total_amount, payment_method) VALUES (5, 5, '2021-10-05', 90.00, 'PayPal') ON DUPLICATE KEY UPDATE customer_id = 5, sale_date = '2021-10-05', total_amount = 90.00, payment_method = 'PayPal';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO sales (sale_id, customer_id, sale_date, total_amount, payment_method) VALUES (6, 6, '2021-10-10', 110.00, 'Cash') ON DUPLICATE KEY UPDATE customer_id = 6, sale_date = '2021-10-10', total_amount = 110.00, payment_method = 'Cash';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO churn_prediction (customer_id, last_purchase_date, average_purchase_amount, churn_probability) VALUES (5, '2021-10-05', 90.00, 0.5) ON DUPLICATE KEY UPDATE last_purchase_date = '2021-10-05', average_purchase_amount = 90.00, churn_probability = 0.5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    phone_number VARCHAR(20),\n    email VARCHAR(50)\n);\n\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    customer_id INT,\n    sale_date DATE,\n    total_amount DECIMAL(10,2),\n    payment_method VARCHAR(20)\n);\n\n\nCREATE TABLE churn_prediction (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    average_purchase_amount DECIMAL(10,2),\n    churn_probability FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO churn_prediction (customer_id, last_purchase_date, average_purchase_amount, churn_probability) VALUES (6, '2021-10-10', 110.00, 0.6) ON DUPLICATE KEY UPDATE last_purchase_date = '2021-10-10', average_purchase_amount = 110.00, churn_probability = 0.6;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, address, total_purchases, churn_probability) VALUES ('1a2b3c4d', 'John Doe', '123 Main St', 5, 0.1) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'John Doe', address = '123 Main St', total_purchases = 5, churn_probability = 0.1",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, address, total_purchases, churn_probability) VALUES ('5e6f7g8h', 'Jane Smith', '456 Elm St', 10, 0.2) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Jane Smith', address = '456 Elm St', total_purchases = 10, churn_probability = 0.2",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, address, total_purchases, churn_probability) VALUES ('9i0j1k2l', 'Alice Johnson', '789 Oak St', 15, 0.3) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Alice Johnson', address = '789 Oak St', total_purchases = 15, churn_probability = 0.3",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, address, total_purchases, churn_probability) VALUES ('3m4n5o6p', 'Bob Brown', '321 Pine St', 20, 0.4) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Bob Brown', address = '321 Pine St', total_purchases = 20, churn_probability = 0.4",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, address, total_purchases, churn_probability) VALUES ('7q8r9s0t', 'Mary Davis', '654 Birch St', 25, 0.5) ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Mary Davis', address = '654 Birch St', total_purchases = 25, churn_probability = 0.5",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nUPSERT INTO sales_orders (order_id, customer_id, order_date, total_amount, payment_method) VALUES ('a1b2c3d4', '1a2b3c4d', '2023-01-15', 100.50, 'Credit Card') ON CONFLICT (order_id) DO UPDATE SET customer_id = '1a2b3c4d', order_date = '2023-01-15', total_amount = 100.50, payment_method = 'Credit Card'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nUPSERT INTO sales_orders (order_id, customer_id, order_date, total_amount, payment_method) VALUES ('e5f6g7h8', '5e6f7g8h', '2023-02-25', 150.75, 'PayPal') ON CONFLICT (order_id) DO UPDATE SET customer_id = '5e6f7g8h', order_date = '2023-02-25', total_amount = 150.75, payment_method = 'PayPal'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nUPSERT INTO sales_orders (order_id, customer_id, order_date, total_amount, payment_method) VALUES ('i9j0k1l2', '9i0j1k2l', '2023-03-10', 200.20, 'Cash') ON CONFLICT (order_id) DO UPDATE SET customer_id = '9i0j1k2l', order_date = '2023-03-10', total_amount = 200.20, payment_method = 'Cash'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nUPSERT INTO sales_orders (order_id, customer_id, order_date, total_amount, payment_method) VALUES ('3m4n5o6p', '3m4n5o6p', '2023-04-05', 250.90, 'Check') ON CONFLICT (order_id) DO UPDATE SET customer_id = '3m4n5o6p', order_date = '2023-04-05', total_amount = 250.90, payment_method = 'Check'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nUPSERT INTO sales_orders (order_id, customer_id, order_date, total_amount, payment_method) VALUES ('7q8r9s0t', '7q8r9s0t', '2023-05-20', 300.30, 'Credit Card') ON CONFLICT (order_id) DO UPDATE SET customer_id = '7q8r9s0t', order_date = '2023-05-20', total_amount = 300.30, payment_method = 'Credit Card'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, category, unit_price) VALUES ('a1b2c3d4', 'Product1', 'Electronics', 49.99) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product1', category = 'Electronics', unit_price = 49.99",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, category, unit_price) VALUES ('e5f6g7h8', 'Product2', 'Clothing', 29.99) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product2', category = 'Clothing', unit_price = 29.99",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, category, unit_price) VALUES ('i9j0k1l2', 'Product3', 'Home Goods', 39.99) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product3', category = 'Home Goods', unit_price = 39.99",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, category, unit_price) VALUES ('3m4n5o6p', 'Product4', 'Beauty', 19.99) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product4', category = 'Beauty', unit_price = 19.99",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, category, unit_price) VALUES ('7q8r9s0t', 'Product5', 'Sports', 59.99) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product5', category = 'Sports', unit_price = 59.99",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nUPSERT INTO churn_predictions (prediction_id, customer_id, predicted_churn_date, predicted_churn_probability) VALUES ('a1b2c3d4', '1a2b3c4d', '2023-01-15', 0.10) ON CONFLICT (prediction_id) DO UPDATE SET customer_id = '1a2b3c4d', predicted_churn_date = '2023-01-15', predicted_churn_probability = 0.10",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nUPSERT INTO churn_predictions (prediction_id, customer_id, predicted_churn_date, predicted_churn_probability) VALUES ('e5f6g7h8', '5e6f7g8h', '2023-02-25', 0.20) ON CONFLICT (prediction_id) DO UPDATE SET customer_id = '5e6f7g8h', predicted_churn_date = '2023-02-25', predicted_churn_probability = 0.20",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nUPSERT INTO churn_predictions (prediction_id, customer_id, predicted_churn_date, predicted_churn_probability) VALUES ('i9j0k1l2', '9i0j1k2l', '2023-03-10', 0.30) ON CONFLICT (prediction_id) DO UPDATE SET customer_id = '9i0j1k2l', predicted_churn_date = '2023-03-10', predicted_churn_probability = 0.30",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nUPSERT INTO churn_predictions (prediction_id, customer_id, predicted_churn_date, predicted_churn_probability) VALUES ('3m4n5o6p', '3m4n5o6p', '2023-04-05', 0.40) ON CONFLICT (prediction_id) DO UPDATE SET customer_id = '3m4n5o6p', predicted_churn_date = '2023-04-05', predicted_churn_probability = 0.40",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nUPSERT INTO churn_predictions (prediction_id, customer_id, predicted_churn_date, predicted_churn_probability) VALUES ('7q8r9s0t', '7q8r9s0t', '2023-05-20', 0.50) ON CONFLICT (prediction_id) DO UPDATE SET customer_id = '7q8r9s0t', predicted_churn_date = '2023-05-20', predicted_churn_probability = 0.50",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, total_purchases, churn_probability) VALUES ('c1', 'John Doe', '123 Main St', 5, 0.02) ON CONFLICT (customer_id) DO UPDATE SET total_purchases = 5, churn_probability = 0.02;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO sales_orders (order_id, customer_id, order_date, total_amount, payment_method) VALUES ('o1', 'c1', '2022-01-01', 100.50, 'Credit Card') ON CONFLICT (order_id) DO UPDATE SET total_amount = 100.50, payment_method = 'Credit Card';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, category, unit_price) VALUES ('p1', 'Product A', 'Electronics', 49.99) ON CONFLICT (product_id) DO UPDATE SET unit_price = 49.99;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO churn_predictions (prediction_id, customer_id, predicted_churn_date, predicted_churn_probability) VALUES ('cp1', 'c1', '2023-01-01', 0.05) ON CONFLICT (prediction_id) DO UPDATE SET predicted_churn_probability = 0.05;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, total_purchases, churn_probability) VALUES ('c2', 'Jane Smith', '456 Elm St', 8, 0.03) ON CONFLICT (customer_id) DO UPDATE SET total_purchases = 8, churn_probability = 0.03;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO sales_orders (order_id, customer_id, order_date, total_amount, payment_method) VALUES ('o2', 'c2', '2022-01-02', 150.75, 'PayPal') ON CONFLICT (order_id) DO UPDATE SET total_amount = 150.75, payment_method = 'PayPal';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, category, unit_price) VALUES ('p2', 'Product B', 'Clothing', 29.99) ON CONFLICT (product_id) DO UPDATE SET unit_price = 29.99;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO churn_predictions (prediction_id, customer_id, predicted_churn_date, predicted_churn_probability) VALUES ('cp2', 'c2', '2023-01-02', 0.04) ON CONFLICT (prediction_id) DO UPDATE SET predicted_churn_probability = 0.04;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, total_purchases, churn_probability) VALUES ('c3', 'Alice Johnson', '789 Oak St', 10, 0.01) ON CONFLICT (customer_id) DO UPDATE SET total_purchases = 10, churn_probability = 0.01;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO sales_orders (order_id, customer_id, order_date, total_amount, payment_method) VALUES ('o3', 'c3', '2022-01-03', 200.99, 'Cash') ON CONFLICT (order_id) DO UPDATE SET total_amount = 200.99, payment_method = 'Cash';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, category, unit_price) VALUES ('p3', 'Product C', 'Home & Garden', 39.99) ON CONFLICT (product_id) DO UPDATE SET unit_price = 39.99;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO churn_predictions (prediction_id, customer_id, predicted_churn_date, predicted_churn_probability) VALUES ('cp3', 'c3', '2023-01-03', 0.06) ON CONFLICT (prediction_id) DO UPDATE SET predicted_churn_probability = 0.06;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, total_purchases, churn_probability) VALUES ('c4', 'Bob Williams', '101 Pine St', 15, 0.05) ON CONFLICT (customer_id) DO UPDATE SET total_purchases = 15, churn_probability = 0.05;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO sales_orders (order_id, customer_id, order_date, total_amount, payment_method) VALUES ('o4', 'c4', '2022-01-04', 300.50, 'Debit Card') ON CONFLICT (order_id) DO UPDATE SET total_amount = 300.50, payment_method = 'Debit Card';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, category, unit_price) VALUES ('p4', 'Product D', 'Books', 19.99) ON CONFLICT (product_id) DO UPDATE SET unit_price = 19.99;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO churn_predictions (prediction_id, customer_id, predicted_churn_date, predicted_churn_probability) VALUES ('cp4', 'c4', '2023-01-04', 0.03) ON CONFLICT (prediction_id) DO UPDATE SET predicted_churn_probability = 0.03;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, total_purchases, churn_probability) VALUES ('c5', 'Eve Anderson', '202 Elm St', 20, 0.04) ON CONFLICT (customer_id) DO UPDATE SET total_purchases = 20, churn_probability = 0.04;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO sales_orders (order_id, customer_id, order_date, total_amount, payment_method) VALUES ('o5', 'c5', '2022-01-05', 250.75, 'Bank Transfer') ON CONFLICT (order_id) DO UPDATE SET total_amount = 250.75, payment_method = 'Bank Transfer';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, category, unit_price) VALUES ('p5', 'Product E', 'Toys', 9.99) ON CONFLICT (product_id) DO UPDATE SET unit_price = 9.99;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    total_purchases INT,\n    churn_probability FLOAT\n)\n\nCREATE TABLE sales_orders (\n    order_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL,\n    payment_method STRING\n)\n\nCREATE TABLE products (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    category STRING,\n    unit_price DECIMAL\n)\n\nCREATE TABLE churn_predictions (\n    prediction_id UUID PRIMARY KEY,\n    customer_id UUID REFERENCES customers(customer_id),\n    predicted_churn_date DATE,\n    predicted_churn_probability FLOAT\n)\n\n### STATEMENT\n\nINSERT INTO churn_predictions (prediction_id, customer_id, predicted_churn_date, predicted_churn_probability) VALUES ('cp5', 'c5', '2023-01-05', 0.07) ON CONFLICT (prediction_id) DO UPDATE SET predicted_churn_probability = 0.07;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, email, phone_number, address) VALUES ('John Doe', 'john.doe@example.com', '123-456-7890', '123 Main St');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (customer_id, order_date, total_amount) VALUES (1, '2023-10-15', 100.50);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name, category, price) VALUES ('Shoes', 'Footwear', 50.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO sales (order_id, product_id, quantity, sale_amount) VALUES (1, 1, 2, 100.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO churn_predictions (customer_id, prediction_date, likelihood) VALUES (1, '2023-10-20', 0.75);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, email, phone_number, address) VALUES ('Jane Smith', 'jane.smith@example.com', '987-654-3210', '456 Elm St');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (customer_id, order_date, total_amount) VALUES (2, '2023-10-16', 75.25);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name, category, price) VALUES ('T-shirt', 'Apparel', 25.50);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO sales (order_id, product_id, quantity, sale_amount) VALUES (2, 2, 3, 75.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO churn_predictions (customer_id, prediction_date, likelihood) VALUES (2, '2023-10-21', 0.85);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, email, phone_number, address) VALUES ('Alice Johnson', 'alice.johnson@example.com', '555-123-4567', '789 Oak St');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (customer_id, order_date, total_amount) VALUES (3, '2023-10-17', 120.75);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name, category, price) VALUES ('Jeans', 'Apparel', 45.75);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO sales (order_id, product_id, quantity, sale_amount) VALUES (3, 3, 2, 91.50);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO churn_predictions (customer_id, prediction_date, likelihood) VALUES (3, '2023-10-22', 0.65);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, email, phone_number, address) VALUES ('Michael Brown', 'michael.brown@example.com', '333-999-4444', '234 Pine St');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (customer_id, order_date, total_amount) VALUES (4, '2023-10-18', 150.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name, category, price) VALUES ('Watch', 'Accessories', 75.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO sales (order_id, product_id, quantity, sale_amount) VALUES (4, 4, 1, 75.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO churn_predictions (customer_id, prediction_date, likelihood) VALUES (4, '2023-10-23', 0.70);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, email, phone_number, address) VALUES ('John Doe', 'john.doe@example.com', '123-456-7890', '123 Main St, City');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (customer_id, order_date, total_amount) VALUES (1, '2022-01-01', 100.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name, category, price) VALUES ('Product A', 'Category A', 50.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO sales (order_id, product_id, quantity, sale_amount) VALUES (1, 1, 2, 100.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO churn_predictions (customer_id, prediction_date, likelihood) VALUES (1, '2022-01-01', 0.8);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, email, phone_number, address) VALUES ('Jane Smith', 'jane.smith@example.com', '456-789-0123', '456 Oak St, Town');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (customer_id, order_date, total_amount) VALUES (2, '2022-01-15', 150.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name, category, price) VALUES ('Product B', 'Category B', 75.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO sales (order_id, product_id, quantity, sale_amount) VALUES (2, 2, 3, 225.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO churn_predictions (customer_id, prediction_date, likelihood) VALUES (2, '2022-01-15', 0.6);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, email, phone_number, address) VALUES ('Alice Johnson', 'alice.johnson@example.com', '789-012-3456', '789 Pine St, Village');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (customer_id, order_date, total_amount) VALUES (3, '2022-02-01', 200.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name, category, price) VALUES ('Product C', 'Category C', 100.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO sales (order_id, product_id, quantity, sale_amount) VALUES (3, 3, 1, 100.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO churn_predictions (customer_id, prediction_date, likelihood) VALUES (3, '2022-02-01', 0.3);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_name, email, phone_number, address) VALUES ('Mark Wilson', 'mark.wilson@example.com', '012-345-6789', '012 Elm St, Hamlet');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO orders (customer_id, order_date, total_amount) VALUES (4, '2022-02-15', 250.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO products (product_name, category, price) VALUES ('Product D', 'Category D', 125.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO sales (order_id, product_id, quantity, sale_amount) VALUES (4, 4, 2, 250.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE orders (\n    order_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    order_date DATE NOT NULL,\n    total_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE products (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(255) NOT NULL,\n    category VARCHAR(50),\n    price DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE sales (\n    sale_id SERIAL PRIMARY KEY,\n    order_id INT REFERENCES orders(order_id),\n    product_id INT REFERENCES products(product_id),\n    quantity INT NOT NULL,\n    sale_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE churn_predictions (\n    prediction_id SERIAL PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    prediction_date DATE NOT NULL,\n    likelihood DECIMAL(5, 2) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO churn_predictions (customer_id, prediction_date, likelihood) VALUES (4, '2022-02-15', 0.2);"
]