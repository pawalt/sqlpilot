[
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerBehaviorAnalysis WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name FROM CustomerBehaviorAnalysis WHERE last_interaction > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, purchase_history FROM CustomerBehaviorAnalysis WHERE customer_id BETWEEN 1 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerBehaviorAnalysis WHERE customer_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, last_interaction FROM CustomerBehaviorAnalysis WHERE purchase_history->'$.total_purchases' > 10;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerBehaviorAnalysis ORDER BY last_interaction DESC;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT customer_id FROM CustomerBehaviorAnalysis;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM CustomerBehaviorAnalysis;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(purchase_history->'$.total_purchases') FROM CustomerBehaviorAnalysis;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(last_interaction) FROM CustomerBehaviorAnalysis;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MIN(last_interaction) FROM CustomerBehaviorAnalysis;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(customer_id) AS total_interactions FROM CustomerBehaviorAnalysis GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, SUM(purchase_history->'$.total_amount') AS total_amount_spent FROM CustomerBehaviorAnalysis GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, AVG(purchase_history->'$.average_purchase_amount') AS average_purchase_amount FROM CustomerBehaviorAnalysis GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(last_interaction) AS latest_interaction FROM CustomerBehaviorAnalysis GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, MIN(last_interaction) AS earliest_interaction FROM CustomerBehaviorAnalysis GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(*) AS total_records FROM CustomerBehaviorAnalysis GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, MAX(last_interaction) AS latest_interaction FROM CustomerBehaviorAnalysis GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, MIN(last_interaction) AS earliest_interaction FROM CustomerBehaviorAnalysis GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, purchase_history->'$.last_purchase_date' AS last_purchase_date FROM CustomerBehaviorAnalysis WHERE purchase_history->'$.total_purchases' < 5;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerBehaviorAnalysis WHERE EXTRACT(MONTH FROM last_interaction) = 10;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerBehaviorAnalysis WHERE customer_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, last_interaction FROM CustomerBehaviorAnalysis WHERE purchase_history->>'$.total_purchases' > 50;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM CustomerBehaviorAnalysis WHERE last_interaction > NOW() - INTERVAL '7 days';",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, purchase_history->>'$.favorite_product' AS favorite_product FROM CustomerBehaviorAnalysis;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerBehaviorAnalysis WHERE purchase_history @> '[{\"purchase_date\": \"2022-01-10\"}]';",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, purchase_history FROM CustomerBehaviorAnalysis WHERE purchase_history IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT customer_name FROM CustomerBehaviorAnalysis;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, count(*) AS total_interactions FROM CustomerBehaviorAnalysis GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerBehaviorAnalysis WHERE customer_name LIKE '%Doe%';",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, SUM(cast(purchase_history->>'$.total_amount' AS INT)) AS total_spent FROM CustomerBehaviorAnalysis GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, JSON_ARRAY_LENGTH(purchase_history) AS total_purchases FROM CustomerBehaviorAnalysis;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, JSON_OBJECT_KEYS(purchase_history->>'$') AS product_categories FROM CustomerBehaviorAnalysis;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM CustomerBehaviorAnalysis ORDER BY last_interaction DESC;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_name, JSON_ARRAY_ELEMENTS_TEXT(purchase_history) AS purchase_items FROM CustomerBehaviorAnalysis;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(last_interaction) AS last_interaction FROM CustomerBehaviorAnalysis GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM CustomerBehaviorAnalysis WHERE extract(hour from last_interaction) between 8 and 18;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, count(*) AS total_purchases FROM CustomerBehaviorAnalysis WHERE purchase_history @> '[{\"product\": \"Shoes\"}]' GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, count(*) AS inactive_days FROM CustomerBehaviorAnalysis WHERE last_interaction < NOW() - INTERVAL '30 days' GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, purchase_history->>'$.last_purchase_date' AS last_purchase_date FROM CustomerBehaviorAnalysis;",
  "### TABLEDATA\n\nCREATE TABLE CustomerBehaviorAnalysis (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  purchase_history JSON,\n  last_interaction TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM CustomerBehaviorAnalysis WHERE customer_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM customer_behavior;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, last_purchase_date FROM customer_behavior;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_name, category FROM personalized_products;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, total_spent FROM customer_behavior WHERE total_spent > 100;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM personalized_products WHERE category='Electronics';",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM customer_behavior WHERE last_purchase_date > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, total_spent FROM customer_behavior WHERE last_purchase_date >= '2021-01-01' AND last_purchase_date <= '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, total_spent FROM customer_behavior ORDER BY total_spent DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_customers FROM customer_behavior;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT AVG(total_spent) AS average_spent FROM customer_behavior;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, total_spent FROM customer_behavior WHERE total_spent BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM personalized_products WHERE price < 50;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, total_spent FROM customer_behavior WHERE last_purchase_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, total_spent FROM customer_behavior WHERE last_purchase_date IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT product_name, category FROM personalized_products WHERE category IN ('Electronics', 'Clothing');",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, last_purchase_date, total_spent FROM customer_behavior LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, total_spent FROM customer_behavior OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, last_purchase_date, total_spent FROM customer_behavior LIMIT 10 OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT MAX(total_spent) AS max_spent FROM customer_behavior;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT MIN(total_spent) AS min_spent FROM customer_behavior;",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM customer_behavior WHERE total_spent > 1000",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, last_purchase_date FROM customer_behavior WHERE last_purchase_date >= '2021-01-01' AND last_purchase_date <= '2021-12-31'",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, total_spent FROM customer_behavior WHERE customer_id IN (SELECT customer_id FROM personalized_products WHERE category = 'Electronics')",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.total_spent, p.price FROM customer_behavior c JOIN personalized_products p ON c.customer_id = p.product_id WHERE p.price > c.total_spent",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.total_spent, p.product_name FROM customer_behavior c JOIN personalized_products p ON c.customer_id = p.product_id ORDER BY c.total_spent DESC",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_purchases FROM customer_behavior GROUP BY customer_id HAVING total_purchases > 5",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT category, AVG(price) AS avg_price FROM personalized_products GROUP BY category",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(total_spent) AS max_spent FROM customer_behavior",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, MIN(total_spent) AS min_spent FROM customer_behavior",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, last_purchase_date FROM customer_behavior WHERE DATEDIFF(CURDATE(), last_purchase_date) > 30",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, SUM(total_spent) AS total_spent FROM customer_behavior GROUP BY customer_id ORDER BY total_spent DESC",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, last_purchase_date FROM customer_behavior WHERE MONTH(last_purchase_date) = 10 AND YEAR(last_purchase_date) = 2021",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, total_spent FROM customer_behavior UNION SELECT product_id, price FROM personalized_products",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, total_spent FROM customer_behavior WHERE customer_id NOT IN (SELECT customer_id FROM personalized_products)",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, total_spent FROM customer_behavior WHERE total_spent BETWEEN 500 AND 1000",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM customer_behavior INNER JOIN personalized_products ON customer_behavior.customer_id = personalized_products.product_id",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.total_spent, p.category FROM customer_behavior c JOIN personalized_products p ON c.customer_id = p.product_id",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.total_spent, p.price FROM customer_behavior c JOIN personalized_products p ON c.customer_id = p.product_id WHERE c.total_spent > (SELECT AVG(total_spent) FROM customer_behavior)",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.total_spent, p.product_name FROM customer_behavior c LEFT JOIN personalized_products p ON c.customer_id = p.product_id",
  "### TABLEDATA\n\nCREATE TABLE customer_behavior (\n    customer_id INT PRIMARY KEY,\n    last_purchase_date DATE,\n    total_spent DECIMAL(10, 2)\n);\n\n\nCREATE TABLE personalized_products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    price DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, total_spent FROM customer_behavior WHERE customer_id IN (SELECT customer_id FROM personalized_products WHERE price > 100)",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT customer_name, email, phone_number FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT * FROM products;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM products WHERE category = 'Electronics';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT * FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT t.transaction_id, t.transaction_date, c.customer_name, p.product_name, t.quantity FROM transactions t JOIN customers c ON t.customer_id = c.customer_id JOIN products p ON t.product_id = p.product_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT c.customer_name, SUM(quantity) AS total_quantity FROM transactions t JOIN customers c ON t.customer_id = c.customer_id GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT p.product_name, AVG(price) AS avg_price FROM transactions t JOIN products p ON t.product_id = p.product_id GROUP BY p.product_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS total_transactions FROM transactions GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT c.customer_id, c.customer_name, COUNT(*) AS total_transactions FROM transactions t JOIN customers c ON t.customer_id = c.customer_id GROUP BY c.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT * FROM customers ORDER BY customer_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT * FROM products ORDER BY price ASC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT * FROM transactions ORDER BY transaction_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT c.customer_name, p.product_name, t.quantity FROM transactions t JOIN customers c ON t.customer_id = c.customer_id JOIN products p ON t.product_id = p.product_id WHERE t.quantity > 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT AVG(price) AS avg_price, COUNT(*) AS total_transactions FROM transactions t JOIN products p ON t.product_id = p.product_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT c.customer_name, SUM(price * quantity) AS total_spent FROM transactions t JOIN customers c ON t.customer_id = c.customer_id JOIN products p ON t.product_id = p.product_id GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(price) AS max_price FROM transactions t JOIN products p ON t.product_id = p.product_id GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT t.transaction_id, t.transaction_date, c.customer_name, p.product_name, t.quantity FROM transactions t JOIN customers c ON t.customer_id = c.customer_id JOIN products p ON t.product_id = p.product_id WHERE t.quantity > 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT customer_name, email, phone_number FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE category = 'Electronics' ORDER BY price DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT customer_name, products.product_name, transactions.quantity FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id JOIN products ON transactions.product_id = products.product_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT MAX(price) AS max_price, MIN(price) AS min_price, AVG(price) AS avg_price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(price * quantity) AS total_spent FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id JOIN products ON transactions.product_id = products.product_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(DISTINCT product_id) AS unique_products FROM transactions GROUP BY customer_id HAVING COUNT(DISTINCT product_id) > 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(quantity) AS avg_quantity, SUM(price * quantity) AS total_spent FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id JOIN products ON transactions.product_id = products.product_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT category, AVG(price) AS avg_price, COUNT(product_id) AS num_products_sold FROM transactions JOIN products ON transactions.product_id = products.product_id GROUP BY category ORDER BY num_products_sold DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(*) AS num_transactions FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id GROUP BY customer_name HAVING COUNT(*) >= 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT customer_name, product_name, quantity, transaction_date FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id JOIN products ON transactions.product_id = products.product_id WHERE transaction_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(price * quantity) AS total_spent FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id JOIN products ON transactions.product_id = products.product_id WHERE category = 'Clothing' GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT product_name, COUNT(*) AS num_transactions FROM products JOIN transactions ON products.product_id = transactions.product_id GROUP BY product_name HAVING COUNT(*) >= 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT customer_name, product_name, quantity, transaction_date FROM customers JOIN transactions ON customers.customer_id = transactions.customer_id JOIN products ON transactions.product_id = products.product_id WHERE customer_name = 'Alice' AND category = 'Electronics';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS num_transactions FROM transactions WHERE transaction_date >= '2022-01-01' AND transaction_date <= '2022-06-30' GROUP BY customer_id HAVING COUNT(*) >= 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT customer_name, product_name, quantity, transaction_date FROM customers JOIN transactions ON customers.customer_id=transactions.customer_id JOIN products ON transactions.product_id=products.product_id WHERE customer_name LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT customer_name, category, SUM(price * quantity) AS total_spent FROM customers JOIN transactions ON customers.customer_id=transactions.customer_id JOIN products ON transactions.product_id=products.product_id WHERE customer_name IN ('Alice', 'Bob') GROUP BY customer_name, category;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(price) AS avg_price FROM customers JOIN transactions ON customers.customer_id=transactions.customer_id JOIN products ON transactions.product_id=products.product_id WHERE transaction_date >= '2022-01-01' AND transaction_date <= '2022-12-31' GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS num_transactions FROM transactions WHERE customer_id IN (SELECT customer_id FROM customers WHERE customer_name = 'Alice') GROUP BY customer_id HAVING COUNT(*) >= 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT customer_name, product_name, quantity, transaction_date FROM customers JOIN transactions ON customers.customer_id=transactions.customer_id JOIN products ON transactions.product_id=products.product_id WHERE product_name LIKE '%MacBook%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    price DECIMAL(10,2),\n    category VARCHAR(50)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    transaction_date TIMESTAMP,\n    quantity INT\n);\n\n### STATEMENT\n\nSELECT customer_name, category, SUM(price * quantity) AS total_spent FROM customers JOIN transactions ON customers.customer_id=transactions.customer_id JOIN products ON transactions.product_id=products.product_id GROUP BY customer_name, category HAVING total_spent > 1000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, email, age FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM purchases;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, product_id, purchase_date FROM purchases;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM products;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, category, price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM recommendations;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, product_id, recommendation_date FROM recommendations;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, email FROM customers WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, email FROM customers WHERE address LIKE '%Street%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, category FROM products WHERE price < 50.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, product_id, purchase_date FROM purchases WHERE quantity > 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, email FROM customers WHERE age < 25 AND address LIKE '%Avenue%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, category, price FROM products WHERE category = 'Electronics';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, email FROM customers ORDER BY age ASC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, product_id, purchase_date FROM purchases ORDER BY purchase_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, category, price FROM products ORDER BY price DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, email FROM customers LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, product_id, purchase_date FROM purchases LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, category, price FROM products LIMIT 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, email, age FROM customers WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, name, email, address FROM customers WHERE address LIKE 'New%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, name, email, age FROM customers WHERE age BETWEEN 25 AND 40;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers INNER JOIN purchases ON customers.customer_id = purchases.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.name, p.name, pr.price FROM customers c INNER JOIN purchases pur ON c.customer_id = pur.customer_id INNER JOIN products p ON pur.product_id = p.product_id INNER JOIN recommendations r ON c.customer_id = r.customer_id INNER JOIN products pr ON r.product_id = pr.product_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT c.customer_id, c.name, pr.category FROM customers c INNER JOIN purchases pur ON c.customer_id = pur.customer_id INNER JOIN products pr ON pur.product_id = pr.product_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.name AS customer_name, p.name AS product_name, pur.purchase_date FROM customers c INNER JOIN purchases pur ON c.customer_id = pur.customer_id INNER JOIN products p ON pur.product_id = p.product_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.name, SUM(p.price * pur.quantity) AS total_spent FROM customers c INNER JOIN purchases pur ON c.customer_id = pur.customer_id INNER JOIN products p ON pur.product_id = p.product_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.name, AVG(p.price) AS avg_price FROM customers c INNER JOIN purchases pur ON c.customer_id = pur.customer_id INNER JOIN products p ON pur.product_id = p.product_id GROUP BY c.name HAVING AVG(p.price) > 50;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.name, COUNT(*) AS total_purchases, MAX(pur.purchase_date) AS last_purchase FROM customers c INNER JOIN purchases pur ON c.customer_id = pur.customer_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT pr.category, COUNT(pur.product_id) AS total_products FROM purchases pur INNER JOIN products pr ON pur.product_id = pr.product_id GROUP BY pr.category ORDER BY total_products DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.name, COUNT(DISTINCT pur.product_id) AS unique_products FROM customers c INNER JOIN purchases pur ON c.customer_id = pur.customer_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.name, pr.category, SUM(p.price * pur.quantity) AS total_spent FROM customers c INNER JOIN purchases pur ON c.customer_id = pur.customer_id INNER JOIN products p ON pur.product_id = p.product_id INNER JOIN products pr ON p.product_id = pr.product_id GROUP BY c.name, pr.category;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.name, AVG(pr.price) AS avg_price, MAX(pur.quantity) AS max_quantity FROM customers c INNER JOIN purchases pur ON c.customer_id = pur.customer_id INNER JOIN products pr ON pur.product_id = pr.product_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.name, pr.name, pur.purchase_date, r.recommendation_date FROM customers c INNER JOIN purchases pur ON c.customer_id = pur.customer_id INNER JOIN products pr ON pur.product_id = pr.product_id INNER JOIN recommendations r ON c.customer_id = r.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_id IN (SELECT DISTINCT customer_id FROM purchases);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.name, (SELECT COUNT(*) FROM purchases pur WHERE pur.customer_id = c.customer_id) AS total_purchases FROM customers c;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.name, p.name, pr.price FROM customers c INNER JOIN purchases pur ON c.customer_id = pur.customer_id INNER JOIN products p ON pur.product_id = p.product_id WHERE pr.price > 100;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    email VARCHAR(255),\n    age INT,\n    address VARCHAR(255)\n);\n\nCREATE TABLE purchases (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    purchase_date TIMESTAMP,\n    quantity INT\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    name VARCHAR(255),\n    category VARCHAR(255),\n    price NUMERIC(10, 2),\n    description TEXT\n);\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    product_id INT,\n    recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT c.name, p.name, pur.purchase_date FROM customers c INNER JOIN purchases pur ON c.customer_id = pur.customer_id INNER JOIN products p ON pur.product_id = p.product_id WHERE pur.quantity > 5;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE customer_id = 1",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM Customers WHERE birthdate > '1990-01-01'",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE total_amount < 100.00",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT order_date FROM Orders WHERE customer_id = 2",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT product_name, category FROM Products WHERE price > 50.00",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Purchases WHERE customer_id = 3",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Recommendations WHERE customer_id = 4",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT product_name, price FROM Products WHERE category = 'Electronics'",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Orders ORDER BY order_date DESC",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, customer_email, birthdate FROM Customers WHERE customer_id = 5",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE total_amount BETWEEN 50 AND 200",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Purchases WHERE purchase_date > '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Products WHERE price < 30.00",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Recommendations WHERE recommendation_date BETWEEN '2021-01-01' AND '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE customer_name LIKE '%Smith%'",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Products WHERE category IN ('Clothing', 'Shoes')",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE order_date BETWEEN '2022-01-01' AND '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM Customers WHERE customer_id = 6",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Purchases WHERE customer_id = 7",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Recommendations WHERE customer_id = 8",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM Customers WHERE birthdate < '1990-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, COUNT(order_id) AS total_orders FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT product_name, category, price FROM Products WHERE price > 100.00;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, product_name, purchase_date FROM Customers JOIN Purchases ON Customers.customer_id = Purchases.customer_id ORDER BY purchase_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, product_name, recommendation_date FROM Customers JOIN Recommendations ON Customers.customer_id = Recommendations.customer_id ORDER BY recommendation_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, SUM(total_amount) AS total_spent FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, product_name FROM Customers JOIN Purchases ON Customers.customer_id = Purchases.customer_id JOIN Products ON Purchases.product_id = Products.product_id;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT customer_id) AS total_customers FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(price) AS average_price, MAX(price) AS max_price, MIN(price) AS min_price FROM Products WHERE category = 'Electronics';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, product_name, recommendation_date FROM Customers JOIN Recommendations ON Customers.customer_id = Recommendations.customer_id WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, product_name, purchase_date FROM Customers JOIN Purchases ON Customers.customer_id = Purchases.customer_id WHERE customer_name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, product_name, recommendation_date FROM Customers JOIN Recommendations ON Customers.customer_id = Recommendations.customer_id WHERE recommendation_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, product_name, purchase_date FROM Customers JOIN Purchases ON Customers.customer_id = Purchases.customer_id WHERE purchase_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, product_name, purchase_date FROM Customers JOIN Purchases ON Customers.customer_id = Purchases.customer_id WHERE product_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, product_name, purchase_date FROM Customers JOIN Purchases ON Customers.customer_id = Purchases.customer_id WHERE purchase_date >= '2022-01-01' AND product_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, category, COUNT(product_name) AS total_products FROM Customers JOIN Purchases ON Customers.customer_id = Purchases.customer_id JOIN Products ON Purchases.product_id = Products.product_id GROUP BY customer_name, category HAVING COUNT(product_name) > 2;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, product_name, purchase_date FROM Customers JOIN Purchases ON Customers.customer_id = Purchases.customer_id WHERE product_id = 1 OR product_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, product_name, purchase_date FROM Customers JOIN Purchases ON Customers.customer_id = Purchases.customer_id WHERE product_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, product_name, purchase_date FROM Customers JOIN Purchases ON Customers.customer_id = Purchases.customer_id WHERE product_id = 1 AND purchase_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(255),\n  customer_email VARCHAR(255),\n  birthdate DATE\n)\n\nCREATE TABLE Orders (\n  order_id INT PRIMARY KEY,\n  customer_id INT,\n  order_date TIMESTAMP,\n  total_amount DECIMAL(10,2)\n)\n\nCREATE TABLE Products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  category VARCHAR(50),\n  price DECIMAL(10,2)\n)\n\nCREATE TABLE Purchases (\n  purchase_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  purchase_date TIMESTAMP\n)\n\nCREATE TABLE Recommendations (\n  recommendation_id INT PRIMARY KEY,\n  customer_id INT,\n  product_id INT,\n  recommendation_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, product_name, purchase_date FROM Customers JOIN Purchases ON Customers.customer_id = Purchases.customer_id WHERE product_id = 1 AND purchase_date BETWEEN '2022-01-01' AND '2022-12-31';"
]