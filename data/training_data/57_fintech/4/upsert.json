[
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (1001, '2022-01-01 10:00:00', 'Email', 'Sent promotional email');",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (1002, '2022-01-02 15:30:00', 'Phone Call', 'Followed up on inquiry');",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (1003, '2022-01-03 08:45:00', 'Meeting', 'Scheduled meeting for next week');",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (1004, '2022-01-04 11:20:00', 'Email', 'Responded to customer query');",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (1005, '2022-01-05 14:00:00', 'Phone Call', 'Resolved customer issue');",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (1006, '2022-01-06 09:30:00', 'Meeting', 'Discussed new product release');",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (1007, '2022-01-07 12:45:00', 'Email', 'Received positive feedback');",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (1008, '2022-01-08 16:10:00', 'Phone Call', 'Scheduled follow-up call');",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (1009, '2022-01-09 10:20:00', 'Meeting', 'Reviewed project progress');",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (1010, '2022-01-10 13:30:00', 'Email', 'Sent survey link');",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (1011, '2022-01-11 11:15:00', 'Phone Call', 'Followed up on support ticket');",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (1012, '2022-01-12 09:40:00', 'Meeting', 'Presented sales pitch');",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (1013, '2022-01-13 14:50:00', 'Email', 'Responded to customer inquiry');",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (1014, '2022-01-14 08:55:00', 'Phone Call', 'Rescheduled appointment');",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (1015, '2022-01-15 12:25:00', 'Meeting', 'Brainstormed new ideas');",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (1016, '2022-01-16 10:35:00', 'Email', 'Followed up on partnership request');",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (1017, '2022-01-17 15:15:00', 'Phone Call', 'Resolved technical issue');",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (1018, '2022-01-18 11:30:00', 'Meeting', 'Reviewed project roadmap');",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (1019, '2022-01-19 09:10:00', 'Email', 'Sent discount offer');",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (1020, '2022-01-20 14:40:00', 'Phone Call', 'Followed up on order status');",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (1, '2022-01-01 10:00:00', 'Email', 'Sent promotional email to customer 1') ON CONFLICT(customer_id) DO UPDATE SET interaction_details = 'Updated promotional email to customer 1';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (2, '2022-01-02 14:30:00', 'Phone', 'Called customer 2 to offer new product') ON CONFLICT(customer_id) DO UPDATE SET interaction_details = 'Updated phone call details for customer 2';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (3, '2022-01-03 09:45:00', 'Email', 'Followed up with customer 3 via email') ON CONFLICT(customer_id) DO UPDATE SET interaction_details = 'Updated follow-up email for customer 3';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (4, '2022-01-04 11:20:00', 'Chat', 'Engaged in live chat with customer 4') ON CONFLICT(customer_id) DO UPDATE SET interaction_details = 'Updated chat interaction for customer 4';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (5, '2022-01-05 15:10:00', 'Phone', 'Scheduled appointment with customer 5') ON CONFLICT(customer_id) DO UPDATE SET interaction_details = 'Updated appointment details for customer 5';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (6, '2022-01-06 08:30:00', 'Meeting', 'Met with customer 6 to discuss feedback') ON CONFLICT(customer_id) DO UPDATE SET interaction_details = 'Updated meeting notes with customer 6';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (7, '2022-01-07 16:45:00', 'Email', 'Sent follow-up email to customer 7') ON CONFLICT(customer_id) DO UPDATE SET interaction_details = 'Updated follow-up email for customer 7';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (8, '2022-01-08 13:20:00', 'Chat', 'Resolved issue via chat with customer 8') ON CONFLICT(customer_id) DO UPDATE SET interaction_details = 'Updated chat interaction for customer 8';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (9, '2022-01-09 10:40:00', 'Meeting', 'Meeting with customer 9 to discuss new products') ON CONFLICT(customer_id) DO UPDATE SET interaction_details = 'Updated meeting notes with customer 9';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (10, '2022-01-10 14:15:00', 'Phone', 'Followed up on previous call with customer 10') ON CONFLICT(customer_id) DO UPDATE SET interaction_details = 'Updated follow-up call details for customer 10';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (11, '2022-01-11 11:30:00', 'Email', 'Sent promotional email to customer 11') ON CONFLICT(customer_id) DO UPDATE SET interaction_details = 'Updated promotional email to customer 11';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (12, '2022-01-12 08:15:00', 'Chat', 'Provided customer support via chat to customer 12') ON CONFLICT(customer_id) DO UPDATE SET interaction_details = 'Updated chat support details for customer 12';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (13, '2022-01-13 09:50:00', 'Phone', 'Conducted survey over the phone with customer 13') ON CONFLICT(customer_id) DO UPDATE SET interaction_details = 'Updated survey details for customer 13';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (14, '2022-01-14 15:25:00', 'Email', 'Sent product update email to customer 14') ON CONFLICT(customer_id) DO UPDATE SET interaction_details = 'Updated product update email for customer 14';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (15, '2022-01-15 10:05:00', 'Chat', 'Resolved billing issue via chat with customer 15') ON CONFLICT(customer_id) DO UPDATE SET interaction_details = 'Updated billing interaction for customer 15';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (16, '2022-01-16 13:40:00', 'Meeting', 'Met with customer 16 to discuss service upgrades') ON CONFLICT(customer_id) DO UPDATE SET interaction_details = 'Updated meeting notes with customer 16';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (17, '2022-01-17 17:20:00', 'Email', 'Sent thank you email to customer 17') ON CONFLICT(customer_id) DO UPDATE SET interaction_details = 'Updated thank you email for customer 17';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (18, '2022-01-18 10:30:00', 'Phone', 'Scheduled follow-up call with customer 18') ON CONFLICT(customer_id) DO UPDATE SET interaction_details = 'Updated follow-up call details for customer 18';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (19, '2022-01-19 15:15:00', 'Chat', 'Assisted customer 19 with troubleshooting via chat') ON CONFLICT(customer_id) DO UPDATE SET interaction_details = 'Updated troubleshooting assistance for customer 19';",
  "### TABLEDATA\n\nCREATE TABLE customer_interactions (\n    customer_id INT PRIMARY KEY,\n    interaction_timestamp TIMESTAMP,\n    interaction_type VARCHAR,\n    interaction_details TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interactions (customer_id, interaction_timestamp, interaction_type, interaction_details) VALUES (20, '2022-01-20 08:20:00', 'Meeting', 'Scheduled meeting with customer 20 to review feedback') ON CONFLICT(customer_id) DO UPDATE SET interaction_details = 'Updated meeting schedule for customer 20';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO interactions (customer_id, interaction_id, interaction_date, interaction_type, interaction_description) VALUES ('d54750ec-7701-4b56-b612-0001e849c237', 1, '2022-10-01', 'Email', 'Sent promotional email');",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO interactions (customer_id, interaction_id, interaction_date, interaction_type, interaction_description) VALUES ('87556e3a-47cc-4aa4-b86a-38c9e4dbe5cb', 2, '2022-10-02', 'Phone Call', 'Follow-up call');",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO interactions (customer_id, interaction_id, interaction_date, interaction_type, interaction_description) VALUES ('a23620f9-3d12-4d5b-a820-1ebd1a891ea0', 3, '2022-10-03', 'Meeting', 'In-person meeting');",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO interactions (customer_id, interaction_id, interaction_date, interaction_type, interaction_description) VALUES ('cb4e2076-018b-4696-990b-10b24ddc58d7', 4, '2022-10-04', 'Webinar', 'Attended webinar');",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO interactions (customer_id, interaction_id, interaction_date, interaction_type, interaction_description) VALUES ('01557596-bbb2-451d-b877-17c885a3f0c4', 5, '2022-10-05', 'Chat', 'Online chat conversation');",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO interactions (customer_id, interaction_id, interaction_date, interaction_type, interaction_description) VALUES ('7c7c991f-1139-4aa6-b4c1-10335ef80fe2', 6, '2022-10-06', 'Email', 'Received email response');",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO interactions (customer_id, interaction_id, interaction_date, interaction_type, interaction_description) VALUES ('987d01e4-f2ce-4e41-bec5-9c0328f3b075', 7, '2022-10-07', 'Meeting', 'Scheduled next meeting');",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO interactions (customer_id, interaction_id, interaction_date, interaction_type, interaction_description) VALUES ('b2a1c79e-f489-4d29-a91b-99ff95789d51', 8, '2022-10-08', 'Phone Call', 'Left voicemail');",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO interactions (customer_id, interaction_id, interaction_date, interaction_type, interaction_description) VALUES ('fd88d14c-e50e-4b91-8286-968fa5981628', 9, '2022-10-09', 'Email', 'Responded to survey');",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO interactions (customer_id, interaction_id, interaction_date, interaction_type, interaction_description) VALUES ('9a7e98c6-33c7-4c2f-b7c3-8dede567b9fd', 10, '2022-10-10', 'Webinar', 'Participated in live Q&A');",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO interactions (customer_id, interaction_id, interaction_date, interaction_type, interaction_description) VALUES ('23113b64-6456-4712-82bc-9c879724f25a', 11, '2022-10-11', 'Chat', 'Resolved issue');",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO interactions (customer_id, interaction_id, interaction_date, interaction_type, interaction_description) VALUES ('0494f2e1-4c0c-4d8f-a2c9-32f2e4020624', 12, '2022-10-12', 'Email', 'Sent follow-up email');",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO interactions (customer_id, interaction_id, interaction_date, interaction_type, interaction_description) VALUES ('db79c265-ac42-42be-95e9-cefc65f47da3', 13, '2022-10-13', 'Phone Call', 'Received call');",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO interactions (customer_id, interaction_id, interaction_date, interaction_type, interaction_description) VALUES ('9583eb99-2087-4471-9313-07d2502dd65d', 14, '2022-10-14', 'Meeting', 'Discussed project updates');",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO interactions (customer_id, interaction_id, interaction_date, interaction_type, interaction_description) VALUES ('086fcdb0-d461-4503-a376-98f0de1e17b3', 15, '2022-10-15', 'Webinar', 'Watched presentation');",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO interactions (customer_id, interaction_id, interaction_date, interaction_type, interaction_description) VALUES ('8ba39f39-9fdb-4812-aa2d-dd15d4350b2e', 16, '2022-10-16', 'Email', 'Follow-up response');",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO interactions (customer_id, interaction_id, interaction_date, interaction_type, interaction_description) VALUES ('26309d27-e565-4184-b622-3ec15d9f3c86', 17, '2022-10-17', 'Meeting', 'Finalize details');",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO interactions (customer_id, interaction_id, interaction_date, interaction_type, interaction_description) VALUES ('611d48d3-9078-4592-a7f4-915b3557fb4b', 18, '2022-10-18', 'Phone Call', 'Brief discussion');",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO interactions (customer_id, interaction_id, interaction_date, interaction_type, interaction_description) VALUES ('f454e554-4a6c-423b-b95b-9afa88973912', 19, '2022-10-19', 'Chat', 'Product inquiry');",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO interactions (customer_id, interaction_id, interaction_date, interaction_type, interaction_description) VALUES ('9837eb92-8068-4f6f-a4b7-f95e760ed254', 20, '2022-10-20', 'Email', 'Newsletter subscription');",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO interactions (customer_id, interaction_id, interaction_date, interaction_type, interaction_description) VALUES ('123e4567-e89b-12d3-a456-426614174000', 1, '2022-01-01', 'Email', 'Sent promotional email') ON CONFLICT (customer_id) DO UPDATE SET interaction_date = '2022-01-01', interaction_type = 'Email', interaction_description = 'Sent promotional email';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO interactions (customer_id, interaction_id, interaction_date, interaction_type, interaction_description) VALUES ('223e4567-e89b-12d3-a456-426614174001', 2, '2022-01-02', 'Phone Call', 'Follow-up call') ON CONFLICT (customer_id) DO UPDATE SET interaction_date = '2022-01-02', interaction_type = 'Phone Call', interaction_description = 'Follow-up call';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO interactions (customer_id, interaction_id, interaction_date, interaction_type, interaction_description) VALUES ('323e4567-e89b-12d3-a456-426614174002', 3, '2022-01-03', 'Meeting', 'In-person meeting') ON CONFLICT (customer_id) DO UPDATE SET interaction_date = '2022-01-03', interaction_type = 'Meeting', interaction_description = 'In-person meeting';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO interactions (customer_id, interaction_id, interaction_date, interaction_type, interaction_description) VALUES ('423e4567-e89b-12d3-a456-426614174003', 4, '2022-01-04', 'Demo', 'Product demo') ON CONFLICT (customer_id) DO UPDATE SET interaction_date = '2022-01-04', interaction_type = 'Demo', interaction_description = 'Product demo';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO interactions (customer_id, interaction_id, interaction_date, interaction_type, interaction_description) VALUES ('523e4567-e89b-12d3-a456-426614174004', 5, '2022-01-05', 'Survey', 'Customer feedback survey') ON CONFLICT (customer_id) DO UPDATE SET interaction_date = '2022-01-05', interaction_type = 'Survey', interaction_description = 'Customer feedback survey';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO interactions (customer_id, interaction_id, interaction_date, interaction_type, interaction_description) VALUES ('623e4567-e89b-12d3-a456-426614174005', 6, '2022-01-06', 'Visit', 'Website visit') ON CONFLICT (customer_id) DO UPDATE SET interaction_date = '2022-01-06', interaction_type = 'Visit', interaction_description = 'Website visit';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO interactions (customer_id, interaction_id, interaction_date, interaction_type, interaction_description) VALUES ('723e4567-e89b-12d3-a456-426614174006', 7, '2022-01-07', 'Chat', 'Live chat support') ON CONFLICT (customer_id) DO UPDATE SET interaction_date = '2022-01-07', interaction_type = 'Chat', interaction_description = 'Live chat support';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO interactions (customer_id, interaction_id, interaction_date, interaction_type, interaction_description) VALUES ('823e4567-e89b-12d3-a456-426614174007', 8, '2022-01-08', 'Order', 'Placed an order') ON CONFLICT (customer_id) DO UPDATE SET interaction_date = '2022-01-08', interaction_type = 'Order', interaction_description = 'Placed an order';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO interactions (customer_id, interaction_id, interaction_date, interaction_type, interaction_description) VALUES ('923e4567-e89b-12d3-a456-426614174008', 9, '2022-01-09', 'Feedback', 'Provided feedback') ON CONFLICT (customer_id) DO UPDATE SET interaction_date = '2022-01-09', interaction_type = 'Feedback', interaction_description = 'Provided feedback';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO interactions (customer_id, interaction_id, interaction_date, interaction_type, interaction_description) VALUES ('a23e4567-e89b-12d3-a456-426614174009', 10, '2022-01-10', 'Email', 'Received email response') ON CONFLICT (customer_id) DO UPDATE SET interaction_date = '2022-01-10', interaction_type = 'Email', interaction_description = 'Received email response';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO recommendations (recommendation_id, customer_id, recommended_product_id, recommendation_date, recommendation_score) VALUES (1, '123e4567-e89b-12d3-a456-426614174000', '223e4567-e89b-12d3-a456-426614174001', '2022-01-01', 0.8) ON CONFLICT (customer_id) DO UPDATE SET recommended_product_id = '223e4567-e89b-12d3-a456-426614174001', recommendation_date = '2022-01-01', recommendation_score = 0.8;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO recommendations (recommendation_id, customer_id, recommended_product_id, recommendation_date, recommendation_score) VALUES (2, '223e4567-e89b-12d3-a456-426614174001', '323e4567-e89b-12d3-a456-426614174002', '2022-01-02', 0.7) ON CONFLICT (customer_id) DO UPDATE SET recommended_product_id = '323e4567-e89b-12d3-a456-426614174002', recommendation_date = '2022-01-02', recommendation_score = 0.7;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO recommendations (recommendation_id, customer_id, recommended_product_id, recommendation_date, recommendation_score) VALUES (3, '323e4567-e89b-12d3-a456-426614174002', '423e4567-e89b-12d3-a456-426614174003', '2022-01-03', 0.9) ON CONFLICT (customer_id) DO UPDATE SET recommended_product_id = '423e4567-e89b-12d3-a456-426614174003', recommendation_date = '2022-01-03', recommendation_score = 0.9;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO recommendations (recommendation_id, customer_id, recommended_product_id, recommendation_date, recommendation_score) VALUES (4, '423e4567-e89b-12d3-a456-426614174003', '523e4567-e89b-12d3-a456-426614174004', '2022-01-04', 0.6) ON CONFLICT (customer_id) DO UPDATE SET recommended_product_id = '523e4567-e89b-12d3-a456-426614174004', recommendation_date = '2022-01-04', recommendation_score = 0.6;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO recommendations (recommendation_id, customer_id, recommended_product_id, recommendation_date, recommendation_score) VALUES (5, '523e4567-e89b-12d3-a456-426614174004', '623e4567-e89b-12d3-a456-426614174005', '2022-01-05', 0.8) ON CONFLICT (customer_id) DO UPDATE SET recommended_product_id = '623e4567-e89b-12d3-a456-426614174005', recommendation_date = '2022-01-05', recommendation_score = 0.8;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO recommendations (recommendation_id, customer_id, recommended_product_id, recommendation_date, recommendation_score) VALUES (6, '623e4567-e89b-12d3-a456-426614174005', '723e4567-e89b-12d3-a456-426614174006', '2022-01-06', 0.7) ON CONFLICT (customer_id) DO UPDATE SET recommended_product_id = '723e4567-e89b-12d3-a456-426614174006', recommendation_date = '2022-01-06', recommendation_score = 0.7;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO recommendations (recommendation_id, customer_id, recommended_product_id, recommendation_date, recommendation_score) VALUES (7, '723e4567-e89b-12d3-a456-426614174006', '823e4567-e89b-12d3-a456-426614174007', '2022-01-07', 0.9) ON CONFLICT (customer_id) DO UPDATE SET recommended_product_id = '823e4567-e89b-12d3-a456-426614174007', recommendation_date = '2022-01-07', recommendation_score = 0.9;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO recommendations (recommendation_id, customer_id, recommended_product_id, recommendation_date, recommendation_score) VALUES (8, '823e4567-e89b-12d3-a456-426614174007', '923e4567-e89b-12d3-a456-426614174008', '2022-01-08', 0.6) ON CONFLICT (customer_id) DO UPDATE SET recommended_product_id = '923e4567-e89b-12d3-a456-426614174008', recommendation_date = '2022-01-08', recommendation_score = 0.6;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO recommendations (recommendation_id, customer_id, recommended_product_id, recommendation_date, recommendation_score) VALUES (9, '923e4567-e89b-12d3-a456-426614174008', 'a23e4567-e89b-12d3-a456-426614174009', '2022-01-09', 0.8) ON CONFLICT (customer_id) DO UPDATE SET recommended_product_id = 'a23e4567-e89b-12d3-a456-426614174009', recommendation_date = '2022-01-09', recommendation_score = 0.8;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n  customer_id UUID PRIMARY KEY,\n  interaction_id SERIAL,\n  interaction_date DATE,\n  interaction_type VARCHAR(50),\n  interaction_description TEXT\n);\n\n\nCREATE TABLE recommendations (\n  recommendation_id SERIAL PRIMARY KEY,\n  customer_id UUID,\n  recommended_product_id UUID,\n  recommendation_date DATE,\n  recommendation_score FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO recommendations (recommendation_id, customer_id, recommended_product_id, recommendation_date, recommendation_score) VALUES (10, 'a23e4567-e89b-12d3-a456-426614174009', '123e4567-e89b-12d3-a456-426614174000', '2022-01-10', 0.7) ON CONFLICT (customer_id) DO UPDATE SET recommended_product_id = '123e4567-e89b-12d3-a456-426614174000', recommendation_date = '2022-01-10', recommendation_score = 0.7;",
  "### TABLEDATA\n\nCREATE TABLE customer_interaction (\n  interaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  interaction_date TIMESTAMP,\n  interaction_type VARCHAR,\n  interaction_details TEXT\n);\n\nCREATE TABLE customer_profile (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n);\n\nCREATE TABLE recommendation (\n  recommendation_id UUID PRIMARY KEY,\n  customer_id UUID,\n  product_id INT,\n  recommendation_score FLOAT,\n  recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_interaction (interaction_id, customer_id, interaction_date, interaction_type, interaction_details) VALUES ('1', '1', '2022-01-01 10:00:00', 'call', 'Call with customer 1') ON CONFLICT (interaction_id) DO UPDATE SET interaction_type = 'call', interaction_details = 'Updated call with customer 1';",
  "### TABLEDATA\n\nCREATE TABLE customer_interaction (\n  interaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  interaction_date TIMESTAMP,\n  interaction_type VARCHAR,\n  interaction_details TEXT\n);\n\nCREATE TABLE customer_profile (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n);\n\nCREATE TABLE recommendation (\n  recommendation_id UUID PRIMARY KEY,\n  customer_id UUID,\n  product_id INT,\n  recommendation_score FLOAT,\n  recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_profile (customer_id, first_name, last_name, email, phone_number) VALUES ('1', 'John', 'Doe', 'john.doe@example.com', '+1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '+1234567890';",
  "### TABLEDATA\n\nCREATE TABLE customer_interaction (\n  interaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  interaction_date TIMESTAMP,\n  interaction_type VARCHAR,\n  interaction_details TEXT\n);\n\nCREATE TABLE customer_profile (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n);\n\nCREATE TABLE recommendation (\n  recommendation_id UUID PRIMARY KEY,\n  customer_id UUID,\n  product_id INT,\n  recommendation_score FLOAT,\n  recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO recommendation (recommendation_id, customer_id, product_id, recommendation_score, recommendation_date) VALUES ('1', '1', 1001, 0.95, '2022-01-01 12:00:00') ON CONFLICT (recommendation_id) DO UPDATE SET customer_id = '1', product_id = 1001, recommendation_score = 0.95, recommendation_date = '2022-01-01 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_interaction (\n  interaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  interaction_date TIMESTAMP,\n  interaction_type VARCHAR,\n  interaction_details TEXT\n);\n\nCREATE TABLE customer_profile (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n);\n\nCREATE TABLE recommendation (\n  recommendation_id UUID PRIMARY KEY,\n  customer_id UUID,\n  product_id INT,\n  recommendation_score FLOAT,\n  recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_interaction (interaction_id, customer_id, interaction_date, interaction_type, interaction_details) VALUES ('2', '2', '2022-02-01 09:00:00', 'email', 'Email sent to customer 2') ON CONFLICT (interaction_id) DO UPDATE SET interaction_type = 'email', interaction_details = 'Updated email sent to customer 2';",
  "### TABLEDATA\n\nCREATE TABLE customer_interaction (\n  interaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  interaction_date TIMESTAMP,\n  interaction_type VARCHAR,\n  interaction_details TEXT\n);\n\nCREATE TABLE customer_profile (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n);\n\nCREATE TABLE recommendation (\n  recommendation_id UUID PRIMARY KEY,\n  customer_id UUID,\n  product_id INT,\n  recommendation_score FLOAT,\n  recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_profile (customer_id, first_name, last_name, email, phone_number) VALUES ('2', 'Jane', 'Smith', 'jane.smith@example.com', '+9876543210') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Jane', last_name = 'Smith', email = 'jane.smith@example.com', phone_number = '+9876543210';",
  "### TABLEDATA\n\nCREATE TABLE customer_interaction (\n  interaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  interaction_date TIMESTAMP,\n  interaction_type VARCHAR,\n  interaction_details TEXT\n);\n\nCREATE TABLE customer_profile (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n);\n\nCREATE TABLE recommendation (\n  recommendation_id UUID PRIMARY KEY,\n  customer_id UUID,\n  product_id INT,\n  recommendation_score FLOAT,\n  recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO recommendation (recommendation_id, customer_id, product_id, recommendation_score, recommendation_date) VALUES ('2', '2', 1002, 0.85, '2022-02-01 10:00:00') ON CONFLICT (recommendation_id) DO UPDATE SET customer_id = '2', product_id = 1002, recommendation_score = 0.85, recommendation_date = '2022-02-01 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_interaction (\n  interaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  interaction_date TIMESTAMP,\n  interaction_type VARCHAR,\n  interaction_details TEXT\n);\n\nCREATE TABLE customer_profile (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n);\n\nCREATE TABLE recommendation (\n  recommendation_id UUID PRIMARY KEY,\n  customer_id UUID,\n  product_id INT,\n  recommendation_score FLOAT,\n  recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_interaction (interaction_id, customer_id, interaction_date, interaction_type, interaction_details) VALUES ('3', '3', '2022-03-01 11:00:00', 'meeting', 'Meeting with customer 3') ON CONFLICT (interaction_id) DO UPDATE SET interaction_type = 'meeting', interaction_details = 'Updated meeting with customer 3';",
  "### TABLEDATA\n\nCREATE TABLE customer_interaction (\n  interaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  interaction_date TIMESTAMP,\n  interaction_type VARCHAR,\n  interaction_details TEXT\n);\n\nCREATE TABLE customer_profile (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n);\n\nCREATE TABLE recommendation (\n  recommendation_id UUID PRIMARY KEY,\n  customer_id UUID,\n  product_id INT,\n  recommendation_score FLOAT,\n  recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_profile (customer_id, first_name, last_name, email, phone_number) VALUES ('3', 'Alice', 'Johnson', 'alice.johnson@example.com', '+1122334455') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Alice', last_name = 'Johnson', email = 'alice.johnson@example.com', phone_number = '+1122334455';",
  "### TABLEDATA\n\nCREATE TABLE customer_interaction (\n  interaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  interaction_date TIMESTAMP,\n  interaction_type VARCHAR,\n  interaction_details TEXT\n);\n\nCREATE TABLE customer_profile (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n);\n\nCREATE TABLE recommendation (\n  recommendation_id UUID PRIMARY KEY,\n  customer_id UUID,\n  product_id INT,\n  recommendation_score FLOAT,\n  recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO recommendation (recommendation_id, customer_id, product_id, recommendation_score, recommendation_date) VALUES ('3', '3', 1003, 0.75, '2022-03-01 12:00:00') ON CONFLICT (recommendation_id) DO UPDATE SET customer_id = '3', product_id = 1003, recommendation_score = 0.75, recommendation_date = '2022-03-01 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_interaction (\n  interaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  interaction_date TIMESTAMP,\n  interaction_type VARCHAR,\n  interaction_details TEXT\n);\n\nCREATE TABLE customer_profile (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n);\n\nCREATE TABLE recommendation (\n  recommendation_id UUID PRIMARY KEY,\n  customer_id UUID,\n  product_id INT,\n  recommendation_score FLOAT,\n  recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_interaction (interaction_id, customer_id, interaction_date, interaction_type, interaction_details) VALUES ('4', '1', '2022-04-01 14:00:00', 'call', 'Call with customer 1 again') ON CONFLICT (interaction_id) DO UPDATE SET interaction_type = 'call', interaction_details = 'Updated call with customer 1 again';",
  "### TABLEDATA\n\nCREATE TABLE customer_interaction (\n  interaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  interaction_date TIMESTAMP,\n  interaction_type VARCHAR,\n  interaction_details TEXT\n);\n\nCREATE TABLE customer_profile (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n);\n\nCREATE TABLE recommendation (\n  recommendation_id UUID PRIMARY KEY,\n  customer_id UUID,\n  product_id INT,\n  recommendation_score FLOAT,\n  recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_profile (customer_id, first_name, last_name, email, phone_number) VALUES ('4', 'John', 'Doe', 'john.doe@example.com', '+1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '+1234567890';",
  "### TABLEDATA\n\nCREATE TABLE customer_interaction (\n  interaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  interaction_date TIMESTAMP,\n  interaction_type VARCHAR,\n  interaction_details TEXT\n);\n\nCREATE TABLE customer_profile (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n);\n\nCREATE TABLE recommendation (\n  recommendation_id UUID PRIMARY KEY,\n  customer_id UUID,\n  product_id INT,\n  recommendation_score FLOAT,\n  recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO recommendation (recommendation_id, customer_id, product_id, recommendation_score, recommendation_date) VALUES ('4', '1', 1004, 0.80, '2022-04-01 15:00:00') ON CONFLICT (recommendation_id) DO UPDATE SET customer_id = '1', product_id = 1004, recommendation_score = 0.80, recommendation_date = '2022-04-01 15:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_interaction (\n  interaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  interaction_date TIMESTAMP,\n  interaction_type VARCHAR,\n  interaction_details TEXT\n);\n\nCREATE TABLE customer_profile (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n);\n\nCREATE TABLE recommendation (\n  recommendation_id UUID PRIMARY KEY,\n  customer_id UUID,\n  product_id INT,\n  recommendation_score FLOAT,\n  recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_interaction (interaction_id, customer_id, interaction_date, interaction_type, interaction_details) VALUES ('5', '2', '2022-05-01 08:00:00', 'email', 'Another email sent to customer 2') ON CONFLICT (interaction_id) DO UPDATE SET interaction_type = 'email', interaction_details = 'Updated email sent to customer 2';",
  "### TABLEDATA\n\nCREATE TABLE customer_interaction (\n  interaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  interaction_date TIMESTAMP,\n  interaction_type VARCHAR,\n  interaction_details TEXT\n);\n\nCREATE TABLE customer_profile (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n);\n\nCREATE TABLE recommendation (\n  recommendation_id UUID PRIMARY KEY,\n  customer_id UUID,\n  product_id INT,\n  recommendation_score FLOAT,\n  recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_profile (customer_id, first_name, last_name, email, phone_number) VALUES ('5', 'Jane', 'Smith', 'jane.smith@example.com', '+9876543210') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Jane', last_name = 'Smith', email = 'jane.smith@example.com', phone_number = '+9876543210';",
  "### TABLEDATA\n\nCREATE TABLE customer_interaction (\n  interaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  interaction_date TIMESTAMP,\n  interaction_type VARCHAR,\n  interaction_details TEXT\n);\n\nCREATE TABLE customer_profile (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n);\n\nCREATE TABLE recommendation (\n  recommendation_id UUID PRIMARY KEY,\n  customer_id UUID,\n  product_id INT,\n  recommendation_score FLOAT,\n  recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO recommendation (recommendation_id, customer_id, product_id, recommendation_score, recommendation_date) VALUES ('5', '2', 1005, 0.90, '2022-05-01 09:00:00') ON CONFLICT (recommendation_id) DO UPDATE SET customer_id = '2', product_id = 1005, recommendation_score = 0.90, recommendation_date = '2022-05-01 09:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_interaction (\n  interaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  interaction_date TIMESTAMP,\n  interaction_type VARCHAR,\n  interaction_details TEXT\n);\n\nCREATE TABLE customer_profile (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n);\n\nCREATE TABLE recommendation (\n  recommendation_id UUID PRIMARY KEY,\n  customer_id UUID,\n  product_id INT,\n  recommendation_score FLOAT,\n  recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_interaction (interaction_id, customer_id, interaction_date, interaction_type, interaction_details) VALUES ('6', '3', '2022-06-01 10:00:00', 'meeting', 'Meeting with customer 3 again') ON CONFLICT (interaction_id) DO UPDATE SET interaction_type = 'meeting', interaction_details = 'Updated meeting with customer 3 again';",
  "### TABLEDATA\n\nCREATE TABLE customer_interaction (\n  interaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  interaction_date TIMESTAMP,\n  interaction_type VARCHAR,\n  interaction_details TEXT\n);\n\nCREATE TABLE customer_profile (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n);\n\nCREATE TABLE recommendation (\n  recommendation_id UUID PRIMARY KEY,\n  customer_id UUID,\n  product_id INT,\n  recommendation_score FLOAT,\n  recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_profile (customer_id, first_name, last_name, email, phone_number) VALUES ('6', 'Alice', 'Johnson', 'alice.johnson@example.com', '+1122334455') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Alice', last_name = 'Johnson', email = 'alice.johnson@example.com', phone_number = '+1122334455';",
  "### TABLEDATA\n\nCREATE TABLE customer_interaction (\n  interaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  interaction_date TIMESTAMP,\n  interaction_type VARCHAR,\n  interaction_details TEXT\n);\n\nCREATE TABLE customer_profile (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n);\n\nCREATE TABLE recommendation (\n  recommendation_id UUID PRIMARY KEY,\n  customer_id UUID,\n  product_id INT,\n  recommendation_score FLOAT,\n  recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO recommendation (recommendation_id, customer_id, product_id, recommendation_score, recommendation_date) VALUES ('6', '3', 1006, 0.70, '2022-06-01 11:00:00') ON CONFLICT (recommendation_id) DO UPDATE SET customer_id = '3', product_id = 1006, recommendation_score = 0.70, recommendation_date = '2022-06-01 11:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_interaction (\n  interaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  interaction_date TIMESTAMP,\n  interaction_type VARCHAR,\n  interaction_details TEXT\n);\n\nCREATE TABLE customer_profile (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n);\n\nCREATE TABLE recommendation (\n  recommendation_id UUID PRIMARY KEY,\n  customer_id UUID,\n  product_id INT,\n  recommendation_score FLOAT,\n  recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_interaction (interaction_id, customer_id, interaction_date, interaction_type, interaction_details) VALUES ('7', '1', '2022-07-01 13:00:00', 'call', 'Call with customer 1 third time') ON CONFLICT (interaction_id) DO UPDATE SET interaction_type = 'call', interaction_details = 'Updated call with customer 1 third time';",
  "### TABLEDATA\n\nCREATE TABLE customer_interaction (\n  interaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  interaction_date TIMESTAMP,\n  interaction_type VARCHAR,\n  interaction_details TEXT\n);\n\nCREATE TABLE customer_profile (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n);\n\nCREATE TABLE recommendation (\n  recommendation_id UUID PRIMARY KEY,\n  customer_id UUID,\n  product_id INT,\n  recommendation_score FLOAT,\n  recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_profile (customer_id, first_name, last_name, email, phone_number) VALUES ('7', 'John', 'Doe', 'john.doe@example.com', '+1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '+1234567890';",
  "### TABLEDATA\n\nCREATE TABLE customer_interaction (\n  interaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  interaction_date TIMESTAMP,\n  interaction_type VARCHAR,\n  interaction_details TEXT\n);\n\nCREATE TABLE customer_profile (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n);\n\nCREATE TABLE recommendation (\n  recommendation_id UUID PRIMARY KEY,\n  customer_id UUID,\n  product_id INT,\n  recommendation_score FLOAT,\n  recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO recommendation (recommendation_id, customer_id, product_id, recommendation_score, recommendation_date) VALUES ('7', '1', 1007, 0.85, '2022-07-01 14:00:00') ON CONFLICT (recommendation_id) DO UPDATE SET customer_id = '1', product_id = 1007, recommendation_score = 0.85, recommendation_date = '2022-07-01 14:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_interaction (\n  interaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  interaction_date TIMESTAMP,\n  interaction_type VARCHAR,\n  interaction_details TEXT\n);\n\nCREATE TABLE customer_profile (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n);\n\nCREATE TABLE recommendation (\n  recommendation_id UUID PRIMARY KEY,\n  customer_id UUID,\n  product_id INT,\n  recommendation_score FLOAT,\n  recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_interaction (interaction_id, customer_id, interaction_date, interaction_type, interaction_details) VALUES ('8', '2', '2022-08-01 07:00:00', 'email', 'Email sent to customer 2 again') ON CONFLICT (interaction_id) DO UPDATE SET interaction_type = 'email', interaction_details = 'Updated email sent to customer 2 again';",
  "### TABLEDATA\n\nCREATE TABLE customer_interaction (\n  interaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  interaction_date TIMESTAMP,\n  interaction_type VARCHAR,\n  interaction_details TEXT\n);\n\nCREATE TABLE customer_profile (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n);\n\nCREATE TABLE recommendation (\n  recommendation_id UUID PRIMARY KEY,\n  customer_id UUID,\n  product_id INT,\n  recommendation_score FLOAT,\n  recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO customer_profile (customer_id, first_name, last_name, email, phone_number) VALUES ('8', 'Jane', 'Smith', 'jane.smith@example.com', '+9876543210') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'Jane', last_name = 'Smith', email = 'jane.smith@example.com', phone_number = '+9876543210';",
  "### TABLEDATA\n\nCREATE TABLE customer_interaction (\n  interaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  interaction_date TIMESTAMP,\n  interaction_type VARCHAR,\n  interaction_details TEXT\n);\n\nCREATE TABLE customer_profile (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n);\n\nCREATE TABLE recommendation (\n  recommendation_id UUID PRIMARY KEY,\n  customer_id UUID,\n  product_id INT,\n  recommendation_score FLOAT,\n  recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO recommendation (recommendation_id, customer_id, product_id, recommendation_score, recommendation_date) VALUES ('8', '2', 1008, 0.80, '2022-08-01 08:00:00') ON CONFLICT (recommendation_id) DO UPDATE SET customer_id = '2', product_id = 1008, recommendation_score = 0.80, recommendation_date = '2022-08-01 08:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customer_interaction (\n  interaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  interaction_date TIMESTAMP,\n  interaction_type VARCHAR,\n  interaction_details TEXT\n);\n\nCREATE TABLE customer_profile (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n);\n\nCREATE TABLE recommendation (\n  recommendation_id UUID PRIMARY KEY,\n  customer_id UUID,\n  product_id INT,\n  recommendation_score FLOAT,\n  recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customer_interaction (interaction_id, customer_id, interaction_date, interaction_type, interaction_details) VALUES ('f7c94828-9e3b-4d34-b1cd-94d1d18b2f4b', '8e46d1d2-21d6-4b7e-80d1-4e9f0722ecc6', '2022-11-15 08:30:00', 'Purchase', 'Customer made a purchase of product X.'), ('bc0d5a18-9a70-4e16-b720-32b38891191d', '6a2e4fc0-3c23-4ecc-8943-2f53c9e38a4a', '2022-11-12 10:45:00', 'Support', 'Customer called for technical support.')",
  "### TABLEDATA\n\nCREATE TABLE customer_interaction (\n  interaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  interaction_date TIMESTAMP,\n  interaction_type VARCHAR,\n  interaction_details TEXT\n);\n\nCREATE TABLE customer_profile (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n);\n\nCREATE TABLE recommendation (\n  recommendation_id UUID PRIMARY KEY,\n  customer_id UUID,\n  product_id INT,\n  recommendation_score FLOAT,\n  recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO customer_profile (customer_id, first_name, last_name, email, phone_number) VALUES ('8e46d1d2-21d6-4b7e-80d1-4e9f0722ecc6', 'John', 'Doe', 'johndoe@example.com', '123-456-7890'), ('6a2e4fc0-3c23-4ecc-8943-2f53c9e38a4a', 'Jane', 'Smith', 'janesmith@example.com', '987-654-3210')",
  "### TABLEDATA\n\nCREATE TABLE customer_interaction (\n  interaction_id UUID PRIMARY KEY,\n  customer_id UUID,\n  interaction_date TIMESTAMP,\n  interaction_type VARCHAR,\n  interaction_details TEXT\n);\n\nCREATE TABLE customer_profile (\n  customer_id UUID PRIMARY KEY,\n  first_name VARCHAR,\n  last_name VARCHAR,\n  email VARCHAR,\n  phone_number VARCHAR\n);\n\nCREATE TABLE recommendation (\n  recommendation_id UUID PRIMARY KEY,\n  customer_id UUID,\n  product_id INT,\n  recommendation_score FLOAT,\n  recommendation_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO recommendation (recommendation_id, customer_id, product_id, recommendation_score, recommendation_date) VALUES ('d75f4a6d-3f40-48dd-9d74-0d6299d5727e', '8e46d1d2-21d6-4b7e-80d1-4e9f0722ecc6', 101, 0.85, '2022-11-10 15:30:00'), ('babe4a1d-ed2b-4bfc-8434-16d5d4a80f20', '6a2e4fc0-3c23-4ecc-8943-2f53c9e38a4a', 202, 0.92, '2022-11-14 09:15:00')",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO CustomerInteractions (customer_id, interaction_date, interaction_type, interaction_description) VALUES (1, '2022-01-01', 'Email', 'Sent promotional email');",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO CustomerInteractions (customer_id, interaction_date, interaction_type, interaction_description) VALUES (2, '2022-01-02', 'SMS', 'Reminder message sent');",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Recommendations (recommendation_id, customer_id, recommendation_text, recommendation_date) VALUES (1, 1, 'Great deals on new products!', '2022-01-03');",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Recommendations (recommendation_id, customer_id, recommendation_text, recommendation_date) VALUES (2, 2, 'Exclusive discounts just for you!', '2022-01-04');",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO PurchaseHistory (purchase_id, customer_id, purchase_date, purchase_amount) VALUES (1, 1, '2022-01-05', 50.00);",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO PurchaseHistory (purchase_id, customer_id, purchase_date, purchase_amount) VALUES (2, 2, '2022-01-06', 75.00);",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO CustomerProfile (customer_id, customer_name, email_address, phone_number, join_date) VALUES (1, 'Alice', 'alice@example.com', '123-456-7890', '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO CustomerProfile (customer_id, customer_name, email_address, phone_number, join_date) VALUES (2, 'Bob', 'bob@example.com', '987-654-3210', '2022-01-02');",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO CustomerInteractions (customer_id, interaction_date, interaction_type, interaction_description) VALUES (3, '2022-01-03', 'Phone call', 'Follow-up call made');",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Recommendations (recommendation_id, customer_id, recommendation_text, recommendation_date) VALUES (3, 3, 'New arrivals you might like!', '2022-01-07');",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO PurchaseHistory (purchase_id, customer_id, purchase_date, purchase_amount) VALUES (3, 3, '2022-01-08', 100.00);",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO CustomerProfile (customer_id, customer_name, email_address, phone_number, join_date) VALUES (3, 'Carol', 'carol@example.com', '456-789-0123', '2022-01-03');",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO CustomerInteractions (customer_id, interaction_date, interaction_type, interaction_description) VALUES (4, '2022-01-04', 'Email', 'Newsletter subscription confirmation');",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Recommendations (recommendation_id, customer_id, recommendation_text, recommendation_date) VALUES (4, 4, 'Limited time offer for loyal customers!', '2022-01-09');",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO PurchaseHistory (purchase_id, customer_id, purchase_date, purchase_amount) VALUES (4, 4, '2022-01-10', 120.00);",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO CustomerProfile (customer_id, customer_name, email_address, phone_number, join_date) VALUES (4, 'David', 'david@example.com', '789-012-3456', '2022-01-04');",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO CustomerInteractions (customer_id, interaction_date, interaction_type, interaction_description) VALUES (5, '2022-01-05', 'SMS', 'Discount code shared');",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Recommendations (recommendation_id, customer_id, recommendation_text, recommendation_date) VALUES (5, 5, 'Personalized product recommendations for you!', '2022-01-11');",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO PurchaseHistory (purchase_id, customer_id, purchase_date, purchase_amount) VALUES (5, 5, '2022-01-12', 150.00);",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO CustomerProfile (customer_id, customer_name, email_address, phone_number, join_date) VALUES (5, 'Eve', 'eve@example.com', '012-345-6789', '2022-01-05');",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO CustomerInteractions (customer_id, interaction_date, interaction_type, interaction_description) VALUES (1, '2022-10-01', 'call', 'Called customer for feedback') ON CONFLICT (customer_id) DO UPDATE SET interaction_date = EXCLUDED.interaction_date, interaction_type = EXCLUDED.interaction_type, interaction_description = EXCLUDED.interaction_description;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Recommendations (recommendation_id, customer_id, recommendation_text, recommendation_date) VALUES (1, 1, 'Highly recommend product A', '2022-09-15') ON CONFLICT (recommendation_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO PurchaseHistory (purchase_id, customer_id, purchase_date, purchase_amount) VALUES (1, 1, '2022-08-20', 50.00) ON CONFLICT (purchase_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO CustomerProfile (customer_id, customer_name, email_address, phone_number, join_date) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890', '2022-07-01') ON CONFLICT (customer_id) DO UPDATE SET customer_name = EXCLUDED.customer_name, email_address = EXCLUDED.email_address, phone_number = EXCLUDED.phone_number, join_date = EXCLUDED.join_date;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO CustomerInteractions (customer_id, interaction_date, interaction_type, interaction_description) VALUES (2, '2022-10-02', 'email', 'Sent follow-up email to customer') ON CONFLICT (customer_id) DO UPDATE SET interaction_date = EXCLUDED.interaction_date, interaction_type = EXCLUDED.interaction_type, interaction_description = EXCLUDED.interaction_description;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Recommendations (recommendation_id, customer_id, recommendation_text, recommendation_date) VALUES (2, 2, 'New product launched, check it out', '2022-09-25') ON CONFLICT (recommendation_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO PurchaseHistory (purchase_id, customer_id, purchase_date, purchase_amount) VALUES (2, 2, '2022-08-25', 100.00) ON CONFLICT (purchase_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO CustomerProfile (customer_id, customer_name, email_address, phone_number, join_date) VALUES (2, 'Jane Smith', 'jane.smith@example.com', '987-654-3210', '2022-07-05') ON CONFLICT (customer_id) DO UPDATE SET customer_name = EXCLUDED.customer_name, email_address = EXCLUDED.email_address, phone_number = EXCLUDED.phone_number, join_date = EXCLUDED.join_date;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO CustomerInteractions (customer_id, interaction_date, interaction_type, interaction_description) VALUES (3, '2022-10-03', 'call', 'Scheduled a follow-up call with customer') ON CONFLICT (customer_id) DO UPDATE SET interaction_date = EXCLUDED.interaction_date, interaction_type = EXCLUDED.interaction_type, interaction_description = EXCLUDED.interaction_description;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Recommendations (recommendation_id, customer_id, recommendation_text, recommendation_date) VALUES (3, 3, 'Best deals of the season', '2022-09-20') ON CONFLICT (recommendation_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO PurchaseHistory (purchase_id, customer_id, purchase_date, purchase_amount) VALUES (3, 3, '2022-08-30', 75.00) ON CONFLICT (purchase_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO CustomerProfile (customer_id, customer_name, email_address, phone_number, join_date) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com', '555-123-4567', '2022-07-10') ON CONFLICT (customer_id) DO UPDATE SET customer_name = EXCLUDED.customer_name, email_address = EXCLUDED.email_address, phone_number = EXCLUDED.phone_number, join_date = EXCLUDED.join_date;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO CustomerInteractions (customer_id, interaction_date, interaction_type, interaction_description) VALUES (4, '2022-10-04', 'email', 'Sent promotional email to customer') ON CONFLICT (customer_id) DO UPDATE SET interaction_date = EXCLUDED.interaction_date, interaction_type = EXCLUDED.interaction_type, interaction_description = EXCLUDED.interaction_description;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Recommendations (recommendation_id, customer_id, recommendation_text, recommendation_date) VALUES (4, 4, 'Limited time offer, don't miss out', '2022-09-30') ON CONFLICT (recommendation_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO PurchaseHistory (purchase_id, customer_id, purchase_date, purchase_amount) VALUES (4, 4, '2022-09-05', 120.00) ON CONFLICT (purchase_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO CustomerProfile (customer_id, customer_name, email_address, phone_number, join_date) VALUES (4, 'Michael Brown', 'michael.brown@example.com', '222-333-4444', '2022-07-15') ON CONFLICT (customer_id) DO UPDATE SET customer_name = EXCLUDED.customer_name, email_address = EXCLUDED.email_address, phone_number = EXCLUDED.phone_number, join_date = EXCLUDED.join_date;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO CustomerInteractions (customer_id, interaction_date, interaction_type, interaction_description) VALUES (5, '2022-10-05', 'meeting', 'Scheduled meeting with the customer') ON CONFLICT (customer_id) DO UPDATE SET interaction_date = EXCLUDED.interaction_date, interaction_type = EXCLUDED.interaction_type, interaction_description = EXCLUDED.interaction_description;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Recommendations (recommendation_id, customer_id, recommendation_text, recommendation_date) VALUES (5, 5, 'Top picks for you', '2022-10-01') ON CONFLICT (recommendation_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO PurchaseHistory (purchase_id, customer_id, purchase_date, purchase_amount) VALUES (5, 5, '2022-09-10', 90.00) ON CONFLICT (purchase_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInteractions (\n    customer_id INT PRIMARY KEY,\n    interaction_date DATE,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n);\n\n\nCREATE TABLE Recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE PurchaseHistory (\n    purchase_id INT PRIMARY KEY,\n    customer_id INT,\n    purchase_date DATE,\n    purchase_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES CustomerInteractions(customer_id)\n);\n\n\nCREATE TABLE CustomerProfile (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email_address VARCHAR(100),\n    phone_number VARCHAR(20),\n    join_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO CustomerProfile (customer_id, customer_name, email_address, phone_number, join_date) VALUES (5, 'Sarah Wilson', 'sarah.wilson@example.com', '999-888-7777', '2022-07-20') ON CONFLICT (customer_id) DO UPDATE SET customer_name = EXCLUDED.customer_name, email_address = EXCLUDED.email_address, phone_number = EXCLUDED.phone_number, join_date = EXCLUDED.join_date;",
  "### TABLEDATA\n\nCREATE TABLE customers(customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), address VARCHAR(100))\n\nCREATE TABLE interactions(interaction_id INT PRIMARY KEY, customer_id INT, interaction_date DATE, interaction_type VARCHAR(20), notes TEXT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE products(product_id INT PRIMARY KEY, product_name VARCHAR(50), category VARCHAR(50), price FLOAT, description TEXT)\n\nCREATE TABLE orders(order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount FLOAT, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE recommendations(recommendation_id INT PRIMARY KEY, customer_id INT, product_id INT, recommendation_date DATE, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (product_id) REFERENCES products(product_id))\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890', '123 Main St') ON DUPLICATE KEY UPDATE customer_name='John Doe', email='john.doe@example.com', phone_number='123-456-7890', address='123 Main St';",
  "### TABLEDATA\n\nCREATE TABLE customers(customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), address VARCHAR(100))\n\nCREATE TABLE interactions(interaction_id INT PRIMARY KEY, customer_id INT, interaction_date DATE, interaction_type VARCHAR(20), notes TEXT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE products(product_id INT PRIMARY KEY, product_name VARCHAR(50), category VARCHAR(50), price FLOAT, description TEXT)\n\nCREATE TABLE orders(order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount FLOAT, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE recommendations(recommendation_id INT PRIMARY KEY, customer_id INT, product_id INT, recommendation_date DATE, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (product_id) REFERENCES products(product_id))\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (2, 'Jane Smith', 'jane.smith@example.com', '987-654-3210', '456 Elm St') ON DUPLICATE KEY UPDATE customer_name='Jane Smith', email='jane.smith@example.com', phone_number='987-654-3210', address='456 Elm St';",
  "### TABLEDATA\n\nCREATE TABLE customers(customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), address VARCHAR(100))\n\nCREATE TABLE interactions(interaction_id INT PRIMARY KEY, customer_id INT, interaction_date DATE, interaction_type VARCHAR(20), notes TEXT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE products(product_id INT PRIMARY KEY, product_name VARCHAR(50), category VARCHAR(50), price FLOAT, description TEXT)\n\nCREATE TABLE orders(order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount FLOAT, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE recommendations(recommendation_id INT PRIMARY KEY, customer_id INT, product_id INT, recommendation_date DATE, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (product_id) REFERENCES products(product_id))\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com', '555-123-4567', '789 Oak St') ON DUPLICATE KEY UPDATE customer_name='Alice Johnson', email='alice.johnson@example.com', phone_number='555-123-4567', address='789 Oak St';",
  "### TABLEDATA\n\nCREATE TABLE customers(customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), address VARCHAR(100))\n\nCREATE TABLE interactions(interaction_id INT PRIMARY KEY, customer_id INT, interaction_date DATE, interaction_type VARCHAR(20), notes TEXT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE products(product_id INT PRIMARY KEY, product_name VARCHAR(50), category VARCHAR(50), price FLOAT, description TEXT)\n\nCREATE TABLE orders(order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount FLOAT, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE recommendations(recommendation_id INT PRIMARY KEY, customer_id INT, product_id INT, recommendation_date DATE, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (product_id) REFERENCES products(product_id))\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (4, 'Bob Williams', 'bob.williams@example.com', '777-888-9999', '321 Pine St') ON DUPLICATE KEY UPDATE customer_name='Bob Williams', email='bob.williams@example.com', phone_number='777-888-9999', address='321 Pine St';",
  "### TABLEDATA\n\nCREATE TABLE customers(customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), address VARCHAR(100))\n\nCREATE TABLE interactions(interaction_id INT PRIMARY KEY, customer_id INT, interaction_date DATE, interaction_type VARCHAR(20), notes TEXT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE products(product_id INT PRIMARY KEY, product_name VARCHAR(50), category VARCHAR(50), price FLOAT, description TEXT)\n\nCREATE TABLE orders(order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount FLOAT, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE recommendations(recommendation_id INT PRIMARY KEY, customer_id INT, product_id INT, recommendation_date DATE, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (product_id) REFERENCES products(product_id))\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (5, 'Elena Rodriguez', 'elena.rodriguez@example.com', '222-333-4444', '456 Walnut St') ON DUPLICATE KEY UPDATE customer_name='Elena Rodriguez', email='elena.rodriguez@example.com', phone_number='222-333-4444', address='456 Walnut St';",
  "### TABLEDATA\n\nCREATE TABLE customers(customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), address VARCHAR(100))\n\nCREATE TABLE interactions(interaction_id INT PRIMARY KEY, customer_id INT, interaction_date DATE, interaction_type VARCHAR(20), notes TEXT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE products(product_id INT PRIMARY KEY, product_name VARCHAR(50), category VARCHAR(50), price FLOAT, description TEXT)\n\nCREATE TABLE orders(order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount FLOAT, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE recommendations(recommendation_id INT PRIMARY KEY, customer_id INT, product_id INT, recommendation_date DATE, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (product_id) REFERENCES products(product_id))\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (6, 'Michael Brown', 'michael.brown@example.com', '666-777-8888', '789 Maple St') ON DUPLICATE KEY UPDATE customer_name='Michael Brown', email='michael.brown@example.com', phone_number='666-777-8888', address='789 Maple St';",
  "### TABLEDATA\n\nCREATE TABLE customers(customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), address VARCHAR(100))\n\nCREATE TABLE interactions(interaction_id INT PRIMARY KEY, customer_id INT, interaction_date DATE, interaction_type VARCHAR(20), notes TEXT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE products(product_id INT PRIMARY KEY, product_name VARCHAR(50), category VARCHAR(50), price FLOAT, description TEXT)\n\nCREATE TABLE orders(order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount FLOAT, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE recommendations(recommendation_id INT PRIMARY KEY, customer_id INT, product_id INT, recommendation_date DATE, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (product_id) REFERENCES products(product_id))\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (7, 'Sarah Lee', 'sarah.lee@example.com', '999-000-1111', '123 Cedar St') ON DUPLICATE KEY UPDATE customer_name='Sarah Lee', email='sarah.lee@example.com', phone_number='999-000-1111', address='123 Cedar St';",
  "### TABLEDATA\n\nCREATE TABLE customers(customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), address VARCHAR(100))\n\nCREATE TABLE interactions(interaction_id INT PRIMARY KEY, customer_id INT, interaction_date DATE, interaction_type VARCHAR(20), notes TEXT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE products(product_id INT PRIMARY KEY, product_name VARCHAR(50), category VARCHAR(50), price FLOAT, description TEXT)\n\nCREATE TABLE orders(order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount FLOAT, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE recommendations(recommendation_id INT PRIMARY KEY, customer_id INT, product_id INT, recommendation_date DATE, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (product_id) REFERENCES products(product_id))\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (8, 'David Clark', 'david.clark@example.com', '444-555-6666', '456 Oak St') ON DUPLICATE KEY UPDATE customer_name='David Clark', email='david.clark@example.com', phone_number='444-555-6666', address='456 Oak St';",
  "### TABLEDATA\n\nCREATE TABLE customers(customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), address VARCHAR(100))\n\nCREATE TABLE interactions(interaction_id INT PRIMARY KEY, customer_id INT, interaction_date DATE, interaction_type VARCHAR(20), notes TEXT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE products(product_id INT PRIMARY KEY, product_name VARCHAR(50), category VARCHAR(50), price FLOAT, description TEXT)\n\nCREATE TABLE orders(order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount FLOAT, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE recommendations(recommendation_id INT PRIMARY KEY, customer_id INT, product_id INT, recommendation_date DATE, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (product_id) REFERENCES products(product_id))\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (9, 'Laura Martinez', 'laura.martinez@example.com', '111-222-3333', '789 Elm St') ON DUPLICATE KEY UPDATE customer_name='Laura Martinez', email='laura.martinez@example.com', phone_number='111-222-3333', address='789 Elm St';",
  "### TABLEDATA\n\nCREATE TABLE customers(customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), address VARCHAR(100))\n\nCREATE TABLE interactions(interaction_id INT PRIMARY KEY, customer_id INT, interaction_date DATE, interaction_type VARCHAR(20), notes TEXT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE products(product_id INT PRIMARY KEY, product_name VARCHAR(50), category VARCHAR(50), price FLOAT, description TEXT)\n\nCREATE TABLE orders(order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount FLOAT, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE recommendations(recommendation_id INT PRIMARY KEY, customer_id INT, product_id INT, recommendation_date DATE, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (product_id) REFERENCES products(product_id))\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (10, 'Mark Wilson', 'mark.wilson@example.com', '888-999-0000', '321 Cedar St') ON DUPLICATE KEY UPDATE customer_name='Mark Wilson', email='mark.wilson@example.com', phone_number='888-999-0000', address='321 Cedar St';",
  "### TABLEDATA\n\nCREATE TABLE customers(customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), address VARCHAR(100))\n\nCREATE TABLE interactions(interaction_id INT PRIMARY KEY, customer_id INT, interaction_date DATE, interaction_type VARCHAR(20), notes TEXT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE products(product_id INT PRIMARY KEY, product_name VARCHAR(50), category VARCHAR(50), price FLOAT, description TEXT)\n\nCREATE TABLE orders(order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount FLOAT, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE recommendations(recommendation_id INT PRIMARY KEY, customer_id INT, product_id INT, recommendation_date DATE, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (product_id) REFERENCES products(product_id))\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (11, 'Anna Thompson', 'anna.thompson@example.com', '333-444-5555', '456 Main St') ON DUPLICATE KEY UPDATE customer_name='Anna Thompson', email='anna.thompson@example.com', phone_number='333-444-5555', address='456 Main St';",
  "### TABLEDATA\n\nCREATE TABLE customers(customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), address VARCHAR(100))\n\nCREATE TABLE interactions(interaction_id INT PRIMARY KEY, customer_id INT, interaction_date DATE, interaction_type VARCHAR(20), notes TEXT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE products(product_id INT PRIMARY KEY, product_name VARCHAR(50), category VARCHAR(50), price FLOAT, description TEXT)\n\nCREATE TABLE orders(order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount FLOAT, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE recommendations(recommendation_id INT PRIMARY KEY, customer_id INT, product_id INT, recommendation_date DATE, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (product_id) REFERENCES products(product_id))\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (12, 'Steven Moore', 'steven.moore@example.com', '222-333-4444', '789 Oak St') ON DUPLICATE KEY UPDATE customer_name='Steven Moore', email='steven.moore@example.com', phone_number='222-333-4444', address='789 Oak St';",
  "### TABLEDATA\n\nCREATE TABLE customers(customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), address VARCHAR(100))\n\nCREATE TABLE interactions(interaction_id INT PRIMARY KEY, customer_id INT, interaction_date DATE, interaction_type VARCHAR(20), notes TEXT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE products(product_id INT PRIMARY KEY, product_name VARCHAR(50), category VARCHAR(50), price FLOAT, description TEXT)\n\nCREATE TABLE orders(order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount FLOAT, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE recommendations(recommendation_id INT PRIMARY KEY, customer_id INT, product_id INT, recommendation_date DATE, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (product_id) REFERENCES products(product_id))\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (13, 'Jessica White', 'jessica.white@example.com', '999-888-7777', '321 Pine St') ON DUPLICATE KEY UPDATE customer_name='Jessica White', email='jessica.white@example.com', phone_number='999-888-7777', address='321 Pine St';",
  "### TABLEDATA\n\nCREATE TABLE customers(customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), address VARCHAR(100))\n\nCREATE TABLE interactions(interaction_id INT PRIMARY KEY, customer_id INT, interaction_date DATE, interaction_type VARCHAR(20), notes TEXT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE products(product_id INT PRIMARY KEY, product_name VARCHAR(50), category VARCHAR(50), price FLOAT, description TEXT)\n\nCREATE TABLE orders(order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount FLOAT, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE recommendations(recommendation_id INT PRIMARY KEY, customer_id INT, product_id INT, recommendation_date DATE, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (product_id) REFERENCES products(product_id))\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (14, 'Kevin Taylor', 'kevin.taylor@example.com', '777-666-5555', '456 Elm St') ON DUPLICATE KEY UPDATE customer_name='Kevin Taylor', email='kevin.taylor@example.com', phone_number='777-666-5555', address='456 Elm St';",
  "### TABLEDATA\n\nCREATE TABLE customers(customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), address VARCHAR(100))\n\nCREATE TABLE interactions(interaction_id INT PRIMARY KEY, customer_id INT, interaction_date DATE, interaction_type VARCHAR(20), notes TEXT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE products(product_id INT PRIMARY KEY, product_name VARCHAR(50), category VARCHAR(50), price FLOAT, description TEXT)\n\nCREATE TABLE orders(order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount FLOAT, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE recommendations(recommendation_id INT PRIMARY KEY, customer_id INT, product_id INT, recommendation_date DATE, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (product_id) REFERENCES products(product_id))\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (15, 'Olivia Sanchez', 'olivia.sanchez@example.com', '555-444-3333', '789 Walnut St') ON DUPLICATE KEY UPDATE customer_name='Olivia Sanchez', email='olivia.sanchez@example.com', phone_number='555-444-3333', address='789 Walnut St';",
  "### TABLEDATA\n\nCREATE TABLE customers(customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), address VARCHAR(100))\n\nCREATE TABLE interactions(interaction_id INT PRIMARY KEY, customer_id INT, interaction_date DATE, interaction_type VARCHAR(20), notes TEXT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE products(product_id INT PRIMARY KEY, product_name VARCHAR(50), category VARCHAR(50), price FLOAT, description TEXT)\n\nCREATE TABLE orders(order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount FLOAT, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE recommendations(recommendation_id INT PRIMARY KEY, customer_id INT, product_id INT, recommendation_date DATE, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (product_id) REFERENCES products(product_id))\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (16, 'Ryan Lopez', 'ryan.lopez@example.com', '222-333-4444', '123 Maple St') ON DUPLICATE KEY UPDATE customer_name='Ryan Lopez', email='ryan.lopez@example.com', phone_number='222-333-4444', address='123 Maple St';",
  "### TABLEDATA\n\nCREATE TABLE customers(customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), address VARCHAR(100))\n\nCREATE TABLE interactions(interaction_id INT PRIMARY KEY, customer_id INT, interaction_date DATE, interaction_type VARCHAR(20), notes TEXT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE products(product_id INT PRIMARY KEY, product_name VARCHAR(50), category VARCHAR(50), price FLOAT, description TEXT)\n\nCREATE TABLE orders(order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount FLOAT, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE recommendations(recommendation_id INT PRIMARY KEY, customer_id INT, product_id INT, recommendation_date DATE, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (product_id) REFERENCES products(product_id))\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (17, 'Emily Adams', 'emily.adams@example.com', '999-888-7777', '456 Oak St') ON DUPLICATE KEY UPDATE customer_name='Emily Adams', email='emily.adams@example.com', phone_number='999-888-7777', address='456 Oak St';",
  "### TABLEDATA\n\nCREATE TABLE customers(customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), address VARCHAR(100))\n\nCREATE TABLE interactions(interaction_id INT PRIMARY KEY, customer_id INT, interaction_date DATE, interaction_type VARCHAR(20), notes TEXT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE products(product_id INT PRIMARY KEY, product_name VARCHAR(50), category VARCHAR(50), price FLOAT, description TEXT)\n\nCREATE TABLE orders(order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount FLOAT, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE recommendations(recommendation_id INT PRIMARY KEY, customer_id INT, product_id INT, recommendation_date DATE, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (product_id) REFERENCES products(product_id))\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (18, 'Nathan Garcia', 'nathan.garcia@example.com', '777-666-5555', '789 Elm St') ON DUPLICATE KEY UPDATE customer_name='Nathan Garcia', email='nathan.garcia@example.com', phone_number='777-666-5555', address='789 Elm St';",
  "### TABLEDATA\n\nCREATE TABLE customers(customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), address VARCHAR(100))\n\nCREATE TABLE interactions(interaction_id INT PRIMARY KEY, customer_id INT, interaction_date DATE, interaction_type VARCHAR(20), notes TEXT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE products(product_id INT PRIMARY KEY, product_name VARCHAR(50), category VARCHAR(50), price FLOAT, description TEXT)\n\nCREATE TABLE orders(order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount FLOAT, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE recommendations(recommendation_id INT PRIMARY KEY, customer_id INT, product_id INT, recommendation_date DATE, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (product_id) REFERENCES products(product_id))\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (19, 'Hannah Lewis', 'hannah.lewis@example.com', '555-444-3333', '321 Cedar St') ON DUPLICATE KEY UPDATE customer_name='Hannah Lewis', email='hannah.lewis@example.com', phone_number='555-444-3333', address='321 Cedar St';",
  "### TABLEDATA\n\nCREATE TABLE customers(customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), address VARCHAR(100))\n\nCREATE TABLE interactions(interaction_id INT PRIMARY KEY, customer_id INT, interaction_date DATE, interaction_type VARCHAR(20), notes TEXT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE products(product_id INT PRIMARY KEY, product_name VARCHAR(50), category VARCHAR(50), price FLOAT, description TEXT)\n\nCREATE TABLE orders(order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount FLOAT, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE recommendations(recommendation_id INT PRIMARY KEY, customer_id INT, product_id INT, recommendation_date DATE, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (product_id) REFERENCES products(product_id))\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, email, phone_number, address) VALUES (20, 'Peter Cooper', 'peter.cooper@example.com', '222-333-4444', '456 Main St') ON DUPLICATE KEY UPDATE customer_name='Peter Cooper', email='peter.cooper@example.com', phone_number='222-333-4444', address='456 Main St';",
  "### TABLEDATA\n\nCREATE TABLE customers(customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), address VARCHAR(100))\n\nCREATE TABLE interactions(interaction_id INT PRIMARY KEY, customer_id INT, interaction_date DATE, interaction_type VARCHAR(20), notes TEXT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE products(product_id INT PRIMARY KEY, product_name VARCHAR(50), category VARCHAR(50), price FLOAT, description TEXT)\n\nCREATE TABLE orders(order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount FLOAT, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE recommendations(recommendation_id INT PRIMARY KEY, customer_id INT, product_id INT, recommendation_date DATE, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (product_id) REFERENCES products(product_id))\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_name, email, phone_number, address) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890', '123 Main St, City, Country') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', email = 'john.doe@example.com', phone_number = '123-456-7890', address = '123 Main St, City, Country';",
  "### TABLEDATA\n\nCREATE TABLE customers(customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), address VARCHAR(100))\n\nCREATE TABLE interactions(interaction_id INT PRIMARY KEY, customer_id INT, interaction_date DATE, interaction_type VARCHAR(20), notes TEXT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE products(product_id INT PRIMARY KEY, product_name VARCHAR(50), category VARCHAR(50), price FLOAT, description TEXT)\n\nCREATE TABLE orders(order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount FLOAT, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE recommendations(recommendation_id INT PRIMARY KEY, customer_id INT, product_id INT, recommendation_date DATE, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (product_id) REFERENCES products(product_id))\n\n### STATEMENT\n\nINSERT INTO interactions(interaction_id, customer_id, interaction_date, interaction_type, notes) VALUES (1, 1, '2022-01-01', 'Email', 'Sent follow-up email.') ON DUPLICATE KEY UPDATE interaction_id = 1, customer_id = 1, interaction_date = '2022-01-01', interaction_type = 'Email', notes = 'Sent follow-up email.';",
  "### TABLEDATA\n\nCREATE TABLE customers(customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), address VARCHAR(100))\n\nCREATE TABLE interactions(interaction_id INT PRIMARY KEY, customer_id INT, interaction_date DATE, interaction_type VARCHAR(20), notes TEXT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE products(product_id INT PRIMARY KEY, product_name VARCHAR(50), category VARCHAR(50), price FLOAT, description TEXT)\n\nCREATE TABLE orders(order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount FLOAT, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE recommendations(recommendation_id INT PRIMARY KEY, customer_id INT, product_id INT, recommendation_date DATE, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (product_id) REFERENCES products(product_id))\n\n### STATEMENT\n\nINSERT INTO products(product_id, product_name, category, price, description) VALUES (1, 'Product A', 'Category A', 50.00, 'Description of Product A.') ON DUPLICATE KEY UPDATE product_name = 'Product A', category = 'Category A', price = 50.00, description = 'Description of Product A.';",
  "### TABLEDATA\n\nCREATE TABLE customers(customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), address VARCHAR(100))\n\nCREATE TABLE interactions(interaction_id INT PRIMARY KEY, customer_id INT, interaction_date DATE, interaction_type VARCHAR(20), notes TEXT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE products(product_id INT PRIMARY KEY, product_name VARCHAR(50), category VARCHAR(50), price FLOAT, description TEXT)\n\nCREATE TABLE orders(order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount FLOAT, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE recommendations(recommendation_id INT PRIMARY KEY, customer_id INT, product_id INT, recommendation_date DATE, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (product_id) REFERENCES products(product_id))\n\n### STATEMENT\n\nINSERT INTO orders(order_id, customer_id, order_date, total_amount, status) VALUES (1, 1, '2022-01-01', 100.00, 'Pending') ON DUPLICATE KEY UPDATE order_id = 1, customer_id = 1, order_date = '2022-01-01', total_amount = 100.00, status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE customers(customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15), address VARCHAR(100))\n\nCREATE TABLE interactions(interaction_id INT PRIMARY KEY, customer_id INT, interaction_date DATE, interaction_type VARCHAR(20), notes TEXT, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE products(product_id INT PRIMARY KEY, product_name VARCHAR(50), category VARCHAR(50), price FLOAT, description TEXT)\n\nCREATE TABLE orders(order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount FLOAT, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))\n\nCREATE TABLE recommendations(recommendation_id INT PRIMARY KEY, customer_id INT, product_id INT, recommendation_date DATE, status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(customer_id), FOREIGN KEY (product_id) REFERENCES products(product_id))\n\n### STATEMENT\n\nINSERT INTO recommendations(recommendation_id, customer_id, product_id, recommendation_date, status) VALUES (1, 1, 1, '2022-01-01', 'Approved') ON DUPLICATE KEY UPDATE recommendation_id = 1, customer_id = 1, product_id = 1, recommendation_date = '2022-01-01', status = 'Approved';"
]