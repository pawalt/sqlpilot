[
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (1, 'Alice', 700, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (2, 'Bob', 650, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (3, 'Charlie', 720, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (4, 'David', 680, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (5, 'Eve', 730, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (6, 'Frank', 660, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (7, 'Grace', 710, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (8, 'Henry', 690, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (9, 'Ivy', 740, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (10, 'James', 670, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (11, 'Kate', 730, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (12, 'Leo', 680, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (13, 'Mary', 720, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (14, 'Nick', 690, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (15, 'Olivia', 750, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (16, 'Peter', 660, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (17, 'Quinn', 710, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (18, 'Rose', 680, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (19, 'Sam', 730, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (20, 'Tom', 670, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (1, 'Alice', 750, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (2, 'Bob', 700, FALSE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (3, 'Charlie', 680, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (4, 'David', 720, FALSE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (5, 'Eve', 800, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (6, 'Frank', 650, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (7, 'Grace', 730, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (8, 'Henry', 690, FALSE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (9, 'Isaac', 780, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (10, 'Jane', 710, FALSE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (11, 'Kevin', 760, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (12, 'Linda', 720, FALSE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (13, 'Mike', 690, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (14, 'Nancy', 770, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (15, 'Oscar', 710, FALSE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (16, 'Peter', 740, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (17, 'Queenie', 680, FALSE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (18, 'Roger', 750, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (19, 'Sarah', 730, FALSE);",
  "### TABLEDATA\n\nCREATE TABLE credit_and_loan_management (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    loan_eligibility BOOLEAN\n)\n\n### STATEMENT\n\nUPSERT INTO credit_and_loan_management (customer_id, customer_name, credit_score, loan_eligibility) VALUES (20, 'Tim', 760, TRUE);",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    credit_score INT\n);\n\nCREATE TABLE LoanEligibility (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    loan_amount DECIMAL(10,2),\n    eligibility_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score) VALUES (1, 'Alice', 750) ON CONFLICT (id) DO UPDATE SET customer_name = 'Alice', credit_score = 750;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    credit_score INT\n);\n\nCREATE TABLE LoanEligibility (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    loan_amount DECIMAL(10,2),\n    eligibility_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score) VALUES (2, 'Bob', 700) ON CONFLICT (id) DO UPDATE SET customer_name = 'Bob', credit_score = 700;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    credit_score INT\n);\n\nCREATE TABLE LoanEligibility (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    loan_amount DECIMAL(10,2),\n    eligibility_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score) VALUES (3, 'Charlie', 800) ON CONFLICT (id) DO UPDATE SET customer_name = 'Charlie', credit_score = 800;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    credit_score INT\n);\n\nCREATE TABLE LoanEligibility (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    loan_amount DECIMAL(10,2),\n    eligibility_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score) VALUES (4, 'David', 650) ON CONFLICT (id) DO UPDATE SET customer_name = 'David', credit_score = 650;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    credit_score INT\n);\n\nCREATE TABLE LoanEligibility (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    loan_amount DECIMAL(10,2),\n    eligibility_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score) VALUES (5, 'Emma', 720) ON CONFLICT (id) DO UPDATE SET customer_name = 'Emma', credit_score = 720;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    credit_score INT\n);\n\nCREATE TABLE LoanEligibility (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    loan_amount DECIMAL(10,2),\n    eligibility_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score) VALUES (6, 'Frank', 680) ON CONFLICT (id) DO UPDATE SET customer_name = 'Frank', credit_score = 680;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    credit_score INT\n);\n\nCREATE TABLE LoanEligibility (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    loan_amount DECIMAL(10,2),\n    eligibility_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score) VALUES (7, 'Grace', 760) ON CONFLICT (id) DO UPDATE SET customer_name = 'Grace', credit_score = 760;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    credit_score INT\n);\n\nCREATE TABLE LoanEligibility (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    loan_amount DECIMAL(10,2),\n    eligibility_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score) VALUES (8, 'Henry', 790) ON CONFLICT (id) DO UPDATE SET customer_name = 'Henry', credit_score = 790;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    credit_score INT\n);\n\nCREATE TABLE LoanEligibility (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    loan_amount DECIMAL(10,2),\n    eligibility_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score) VALUES (9, 'Ivy', 710) ON CONFLICT (id) DO UPDATE SET customer_name = 'Ivy', credit_score = 710;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    credit_score INT\n);\n\nCREATE TABLE LoanEligibility (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    loan_amount DECIMAL(10,2),\n    eligibility_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score) VALUES (10, 'Jack', 690) ON CONFLICT (id) DO UPDATE SET customer_name = 'Jack', credit_score = 690;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    credit_score INT\n);\n\nCREATE TABLE LoanEligibility (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    loan_amount DECIMAL(10,2),\n    eligibility_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score) VALUES (11, 'Katie', 730) ON CONFLICT (id) DO UPDATE SET customer_name = 'Katie', credit_score = 730;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    credit_score INT\n);\n\nCREATE TABLE LoanEligibility (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    loan_amount DECIMAL(10,2),\n    eligibility_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score) VALUES (12, 'Liam', 780) ON CONFLICT (id) DO UPDATE SET customer_name = 'Liam', credit_score = 780;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    credit_score INT\n);\n\nCREATE TABLE LoanEligibility (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    loan_amount DECIMAL(10,2),\n    eligibility_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score) VALUES (13, 'Mia', 740) ON CONFLICT (id) DO UPDATE SET customer_name = 'Mia', credit_score = 740;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    credit_score INT\n);\n\nCREATE TABLE LoanEligibility (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    loan_amount DECIMAL(10,2),\n    eligibility_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score) VALUES (14, 'Noah', 770) ON CONFLICT (id) DO UPDATE SET customer_name = 'Noah', credit_score = 770;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    credit_score INT\n);\n\nCREATE TABLE LoanEligibility (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    loan_amount DECIMAL(10,2),\n    eligibility_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score) VALUES (15, 'Olivia', 760) ON CONFLICT (id) DO UPDATE SET customer_name = 'Olivia', credit_score = 760;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    credit_score INT\n);\n\nCREATE TABLE LoanEligibility (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    loan_amount DECIMAL(10,2),\n    eligibility_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score) VALUES (16, 'Patrick', 730) ON CONFLICT (id) DO UPDATE SET customer_name = 'Patrick', credit_score = 730;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    credit_score INT\n);\n\nCREATE TABLE LoanEligibility (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    loan_amount DECIMAL(10,2),\n    eligibility_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score) VALUES (17, 'Quinn', 700) ON CONFLICT (id) DO UPDATE SET customer_name = 'Quinn', credit_score = 700;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    credit_score INT\n);\n\nCREATE TABLE LoanEligibility (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    loan_amount DECIMAL(10,2),\n    eligibility_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score) VALUES (18, 'Rachel', 720) ON CONFLICT (id) DO UPDATE SET customer_name = 'Rachel', credit_score = 720;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    credit_score INT\n);\n\nCREATE TABLE LoanEligibility (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    loan_amount DECIMAL(10,2),\n    eligibility_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score) VALUES (19, 'Sam', 710) ON CONFLICT (id) DO UPDATE SET customer_name = 'Sam', credit_score = 710;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    credit_score INT\n);\n\nCREATE TABLE LoanEligibility (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    loan_amount DECIMAL(10,2),\n    eligibility_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score) VALUES (20, 'Tom', 740) ON CONFLICT (id) DO UPDATE SET customer_name = 'Tom', credit_score = 740;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    credit_score INT\n);\n\nCREATE TABLE LoanEligibility (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    loan_amount DECIMAL(10,2),\n    eligibility_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score) VALUES (1, 'Alice', 750) ON CONFLICT (id) DO UPDATE SET credit_score = EXCLUDED.credit_score",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    credit_score INT\n);\n\nCREATE TABLE LoanEligibility (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    loan_amount DECIMAL(10,2),\n    eligibility_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score) VALUES (2, 'Bob', 700) ON CONFLICT (id) DO UPDATE SET credit_score = EXCLUDED.credit_score",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    credit_score INT\n);\n\nCREATE TABLE LoanEligibility (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    loan_amount DECIMAL(10,2),\n    eligibility_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score) VALUES (3, 'Charlie', 800) ON CONFLICT (id) DO UPDATE SET credit_score = EXCLUDED.credit_score",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    credit_score INT\n);\n\nCREATE TABLE LoanEligibility (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    loan_amount DECIMAL(10,2),\n    eligibility_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score) VALUES (4, 'David', 600) ON CONFLICT (id) DO UPDATE SET credit_score = EXCLUDED.credit_score",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    credit_score INT\n);\n\nCREATE TABLE LoanEligibility (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    loan_amount DECIMAL(10,2),\n    eligibility_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score) VALUES (5, 'Eve', 720) ON CONFLICT (id) DO UPDATE SET credit_score = EXCLUDED.credit_score",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    credit_score INT\n);\n\nCREATE TABLE LoanEligibility (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    loan_amount DECIMAL(10,2),\n    eligibility_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO LoanEligibility (id, customer_name, loan_amount, eligibility_status) VALUES (1, 'Alice', 10000.00, TRUE) ON CONFLICT (id) DO UPDATE SET loan_amount = EXCLUDED.loan_amount, eligibility_status = EXCLUDED.eligibility_status",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    credit_score INT\n);\n\nCREATE TABLE LoanEligibility (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    loan_amount DECIMAL(10,2),\n    eligibility_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO LoanEligibility (id, customer_name, loan_amount, eligibility_status) VALUES (2, 'Bob', 15000.00, TRUE) ON CONFLICT (id) DO UPDATE SET loan_amount = EXCLUDED.loan_amount, eligibility_status = EXCLUDED.eligibility_status",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    credit_score INT\n);\n\nCREATE TABLE LoanEligibility (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    loan_amount DECIMAL(10,2),\n    eligibility_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO LoanEligibility (id, customer_name, loan_amount, eligibility_status) VALUES (3, 'Charlie', 20000.00, TRUE) ON CONFLICT (id) DO UPDATE SET loan_amount = EXCLUDED.loan_amount, eligibility_status = EXCLUDED.eligibility_status",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    credit_score INT\n);\n\nCREATE TABLE LoanEligibility (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    loan_amount DECIMAL(10,2),\n    eligibility_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO LoanEligibility (id, customer_name, loan_amount, eligibility_status) VALUES (4, 'David', 8000.00, FALSE) ON CONFLICT (id) DO UPDATE SET loan_amount = EXCLUDED.loan_amount, eligibility_status = EXCLUDED.eligibility_status",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    credit_score INT\n);\n\nCREATE TABLE LoanEligibility (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    loan_amount DECIMAL(10,2),\n    eligibility_status BOOL\n);\n\n### STATEMENT\n\nINSERT INTO LoanEligibility (id, customer_name, loan_amount, eligibility_status) VALUES (5, 'Eve', 12000.00, TRUE) ON CONFLICT (id) DO UPDATE SET loan_amount = EXCLUDED.loan_amount, eligibility_status = EXCLUDED.eligibility_status",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score, assessment_date) VALUES (1, 'Alice', 750, '2022-01-01') ON CONFLICT (id) DO UPDATE SET credit_score = 750, assessment_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score, assessment_date) VALUES (2, 'Bob', 700, '2022-01-02') ON CONFLICT (id) DO UPDATE SET credit_score = 700, assessment_date = '2022-01-02';",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score, assessment_date) VALUES (3, 'Charlie', 800, '2022-01-03') ON CONFLICT (id) DO UPDATE SET credit_score = 800, assessment_date = '2022-01-03';",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score, assessment_date) VALUES (4, 'David', 680, '2022-01-04') ON CONFLICT (id) DO UPDATE SET credit_score = 680, assessment_date = '2022-01-04';",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score, assessment_date) VALUES (5, 'Eve', 720, '2022-01-05') ON CONFLICT (id) DO UPDATE SET credit_score = 720, assessment_date = '2022-01-05';",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, customer_id, loan_amount, loan_type, approval_date) VALUES (101, 1, 5000.00, 'Personal Loan', '2022-01-01') ON CONFLICT (loan_id) DO UPDATE SET loan_amount = 5000.00, loan_type = 'Personal Loan', approval_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, customer_id, loan_amount, loan_type, approval_date) VALUES (102, 2, 10000.00, 'Home Loan', '2022-01-02') ON CONFLICT (loan_id) DO UPDATE SET loan_amount = 10000.00, loan_type = 'Home Loan', approval_date = '2022-01-02';",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, customer_id, loan_amount, loan_type, approval_date) VALUES (103, 3, 7500.00, 'Car Loan', '2022-01-03') ON CONFLICT (loan_id) DO UPDATE SET loan_amount = 7500.00, loan_type = 'Car Loan', approval_date = '2022-01-03';",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, customer_id, loan_amount, loan_type, approval_date) VALUES (104, 4, 12000.00, 'Business Loan', '2022-01-04') ON CONFLICT (loan_id) DO UPDATE SET loan_amount = 12000.00, loan_type = 'Business Loan', approval_date = '2022-01-04';",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, customer_id, loan_amount, loan_type, approval_date) VALUES (105, 5, 8000.00, 'Education Loan', '2022-01-05') ON CONFLICT (loan_id) DO UPDATE SET loan_amount = 8000.00, loan_type = 'Education Loan', approval_date = '2022-01-05';",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO LoanEligibility (eligibility_id, customer_id, loan_id, is_eligible, reason) VALUES (201, 1, 101, true, 'Good credit score') ON CONFLICT (eligibility_id) DO UPDATE SET is_eligible = true, reason = 'Good credit score';",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO LoanEligibility (eligibility_id, customer_id, loan_id, is_eligible, reason) VALUES (202, 2, 102, false, 'High loan amount') ON CONFLICT (eligibility_id) DO UPDATE SET is_eligible = false, reason = 'High loan amount';",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO LoanEligibility (eligibility_id, customer_id, loan_id, is_eligible, reason) VALUES (203, 3, 103, true, 'Meets all criteria') ON CONFLICT (eligibility_id) DO UPDATE SET is_eligible = true, reason = 'Meets all criteria';",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO LoanEligibility (eligibility_id, customer_id, loan_id, is_eligible, reason) VALUES (204, 4, 104, true, 'Approved for the loan') ON CONFLICT (eligibility_id) DO UPDATE SET is_eligible = true, reason = 'Approved for the loan';",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO LoanEligibility (eligibility_id, customer_id, loan_id, is_eligible, reason) VALUES (205, 5, 105, false, 'Credit score low') ON CONFLICT (eligibility_id) DO UPDATE SET is_eligible = false, reason = 'Credit score low';",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score, assessment_date) VALUES (1, 'Alice', 780, '2022-01-15') ON CONFLICT (id) DO UPDATE SET credit_score = EXCLUDED.credit_score, assessment_date = EXCLUDED.assessment_date;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, customer_id, loan_amount, loan_type, approval_date) VALUES (101, 1, 5000.00, 'Personal Loan', '2022-02-10') ON CONFLICT (loan_id) DO UPDATE SET loan_amount = EXCLUDED.loan_amount, approval_date = EXCLUDED.approval_date;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO LoanEligibility (eligibility_id, customer_id, loan_id, is_eligible, reason) VALUES (201, 1, 101, true, 'Good credit score and stable income') ON CONFLICT (eligibility_id) DO UPDATE SET is_eligible = EXCLUDED.is_eligible, reason = EXCLUDED.reason;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score, assessment_date) VALUES (2, 'Bob', 720, '2022-01-20') ON CONFLICT (id) DO UPDATE SET credit_score = EXCLUDED.credit_score, assessment_date = EXCLUDED.assessment_date;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, customer_id, loan_amount, loan_type, approval_date) VALUES (102, 2, 8000.00, 'Home Loan', '2022-01-25') ON CONFLICT (loan_id) DO UPDATE SET loan_amount = EXCLUDED.loan_amount, approval_date = EXCLUDED.approval_date;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO LoanEligibility (eligibility_id, customer_id, loan_id, is_eligible, reason) VALUES (202, 2, 102, true, 'Sufficient collateral and high credit score') ON CONFLICT (eligibility_id) DO UPDATE SET is_eligible = EXCLUDED.is_eligible, reason = EXCLUDED.reason;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score, assessment_date) VALUES (3, 'Charlie', 700, '2022-01-18') ON CONFLICT (id) DO UPDATE SET credit_score = EXCLUDED.credit_score, assessment_date = EXCLUDED.assessment_date;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, customer_id, loan_amount, loan_type, approval_date) VALUES (103, 3, 10000.00, 'Business Loan', '2022-02-05') ON CONFLICT (loan_id) DO UPDATE SET loan_amount = EXCLUDED.loan_amount, approval_date = EXCLUDED.approval_date;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO LoanEligibility (eligibility_id, customer_id, loan_id, is_eligible, reason) VALUES (203, 3, 103, false, 'Insufficient credit history and high debt-to-income ratio') ON CONFLICT (eligibility_id) DO UPDATE SET is_eligible = EXCLUDED.is_eligible, reason = EXCLUDED.reason;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score, assessment_date) VALUES (4, 'David', 750, '2022-02-01') ON CONFLICT (id) DO UPDATE SET credit_score = EXCLUDED.credit_score, assessment_date = EXCLUDED.assessment_date;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, customer_id, loan_amount, loan_type, approval_date) VALUES (104, 4, 6000.00, 'Car Loan', '2022-01-30') ON CONFLICT (loan_id) DO UPDATE SET loan_amount = EXCLUDED.loan_amount, approval_date = EXCLUDED.approval_date;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO LoanEligibility (eligibility_id, customer_id, loan_id, is_eligible, reason) VALUES (204, 4, 104, true, 'Stable employment and good credit history') ON CONFLICT (eligibility_id) DO UPDATE SET is_eligible = EXCLUDED.is_eligible, reason = EXCLUDED.reason;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score, assessment_date) VALUES (5, 'Emily', 790, '2022-02-05') ON CONFLICT (id) DO UPDATE SET credit_score = EXCLUDED.credit_score, assessment_date = EXCLUDED.assessment_date;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, customer_id, loan_amount, loan_type, approval_date) VALUES (105, 5, 12000.00, 'Personal Loan', '2022-01-28') ON CONFLICT (loan_id) DO UPDATE SET loan_amount = EXCLUDED.loan_amount, approval_date = EXCLUDED.approval_date;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO LoanEligibility (eligibility_id, customer_id, loan_id, is_eligible, reason) VALUES (205, 5, 105, true, 'High income and excellent credit score') ON CONFLICT (eligibility_id) DO UPDATE SET is_eligible = EXCLUDED.is_eligible, reason = EXCLUDED.reason;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score, assessment_date) VALUES (6, 'Fiona', 710, '2022-02-02') ON CONFLICT (id) DO UPDATE SET credit_score = EXCLUDED.credit_score, assessment_date = EXCLUDED.assessment_date;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, customer_id, loan_amount, loan_type, approval_date) VALUES (106, 6, 9000.00, 'Home Loan', '2022-02-08') ON CONFLICT (loan_id) DO UPDATE SET loan_amount = EXCLUDED.loan_amount, approval_date = EXCLUDED.approval_date;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO LoanEligibility (eligibility_id, customer_id, loan_id, is_eligible, reason) VALUES (206, 6, 106, false, 'Low credit score and high debt') ON CONFLICT (eligibility_id) DO UPDATE SET is_eligible = EXCLUDED.is_eligible, reason = EXCLUDED.reason;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (id, customer_name, credit_score, assessment_date) VALUES (7, 'Gary', 730, '2022-01-22') ON CONFLICT (id) DO UPDATE SET credit_score = EXCLUDED.credit_score, assessment_date = EXCLUDED.assessment_date;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, customer_id, loan_amount, loan_type, approval_date) VALUES (107, 7, 8500.00, 'Business Loan', '2022-02-12') ON CONFLICT (loan_id) DO UPDATE SET loan_amount = EXCLUDED.loan_amount, approval_date = EXCLUDED.approval_date;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    credit_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE Loans (\n    loan_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_type VARCHAR(20),\n    approval_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    eligibility_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    is_eligible BOOLEAN,\n    reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO LoanEligibility (eligibility_id, customer_id, loan_id, is_eligible, reason) VALUES (207, 7, 107, true, 'Good credit score and stable income') ON CONFLICT (eligibility_id) DO UPDATE SET is_eligible = EXCLUDED.is_eligible, reason = EXCLUDED.reason;",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO credit_scores (user_id, credit_score) VALUES (1, 750)",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO loan_applications (application_id, user_id, application_date, loan_amount, status) VALUES (1001, 1, '2022-01-05', 5000.00, 'pending')",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO loan_eligibility (user_id, is_eligible) VALUES (1, true)",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO risk_assessment (application_id, assessment_date, risk_level, reason) VALUES (1001, '2022-01-05', 'low', 'Stable income')",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO credit_scores (user_id, credit_score) VALUES (2, 700)",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO loan_applications (application_id, user_id, application_date, loan_amount, status) VALUES (1002, 2, '2022-01-10', 7000.00, 'approved')",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO loan_eligibility (user_id, is_eligible) VALUES (2, false)",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO risk_assessment (application_id, assessment_date, risk_level, reason) VALUES (1002, '2022-01-10', 'medium', 'High debt-to-income ratio')",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO credit_scores (user_id, credit_score) VALUES (3, 680)",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO loan_applications (application_id, user_id, application_date, loan_amount, status) VALUES (1003, 3, '2022-01-15', 10000.00, 'pending')",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO loan_eligibility (user_id, is_eligible) VALUES (3, true)",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO risk_assessment (application_id, assessment_date, risk_level, reason) VALUES (1003, '2022-01-15', 'low', 'Good credit history')",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO credit_scores (user_id, credit_score) VALUES (4, 720)",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO loan_applications (application_id, user_id, application_date, loan_amount, status) VALUES (1004, 4, '2022-01-20', 8000.00, 'rejected')",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO loan_eligibility (user_id, is_eligible) VALUES (4, false)",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO risk_assessment (application_id, assessment_date, risk_level, reason) VALUES (1004, '2022-01-20', 'high', 'Recent bankruptcy')",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO credit_scores (user_id, credit_score) VALUES (5, 760)",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO loan_applications (application_id, user_id, application_date, loan_amount, status) VALUES (1005, 5, '2022-01-25', 12000.00, 'approved')",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO loan_eligibility (user_id, is_eligible) VALUES (5, true)",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO risk_assessment (application_id, assessment_date, risk_level, reason) VALUES (1005, '2022-01-25', 'low', 'Stable job and income')",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO credit_scores (user_id, credit_score) VALUES (1, 750) ON CONFLICT (user_id) DO UPDATE SET credit_score = EXCLUDED.credit_score;",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO loan_applications (application_id, user_id, application_date, loan_amount, status) VALUES (1, 1, '2021-10-15', 10000.00, 'Pending') ON CONFLICT (application_id) DO UPDATE SET application_date = EXCLUDED.application_date, loan_amount = EXCLUDED.loan_amount, status = EXCLUDED.status;",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO loan_eligibility (user_id, is_eligible) VALUES (1, TRUE) ON CONFLICT (user_id) DO UPDATE SET is_eligible = EXCLUDED.is_eligible;",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO risk_assessment (application_id, assessment_date, risk_level, reason) VALUES (1, '2021-10-16', 'High', 'Incomplete documentation') ON CONFLICT (application_id) DO UPDATE SET assessment_date = EXCLUDED.assessment_date, risk_level = EXCLUDED.risk_level, reason = EXCLUDED.reason;",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO credit_scores (user_id, credit_score) VALUES (2, 700) ON CONFLICT (user_id) DO UPDATE SET credit_score = EXCLUDED.credit_score;",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO loan_applications (application_id, user_id, application_date, loan_amount, status) VALUES (2, 2, '2021-10-16', 15000.00, 'Approved') ON CONFLICT (application_id) DO UPDATE SET application_date = EXCLUDED.application_date, loan_amount = EXCLUDED.loan_amount, status = EXCLUDED.status;",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO loan_eligibility (user_id, is_eligible) VALUES (2, FALSE) ON CONFLICT (user_id) DO UPDATE SET is_eligible = EXCLUDED.is_eligible;",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO risk_assessment (application_id, assessment_date, risk_level, reason) VALUES (2, '2021-10-17', 'Low', 'Satisfactory credit history') ON CONFLICT (application_id) DO UPDATE SET assessment_date = EXCLUDED.assessment_date, risk_level = EXCLUDED.risk_level, reason = EXCLUDED.reason;",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO credit_scores (user_id, credit_score) VALUES (3, 680) ON CONFLICT (user_id) DO UPDATE SET credit_score = EXCLUDED.credit_score;",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO loan_applications (application_id, user_id, application_date, loan_amount, status) VALUES (3, 3, '2021-10-17', 20000.00, 'Rejected') ON CONFLICT (application_id) DO UPDATE SET application_date = EXCLUDED.application_date, loan_amount = EXCLUDED.loan_amount, status = EXCLUDED.status;",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO loan_eligibility (user_id, is_eligible) VALUES (3, TRUE) ON CONFLICT (user_id) DO UPDATE SET is_eligible = EXCLUDED.is_eligible;",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO risk_assessment (application_id, assessment_date, risk_level, reason) VALUES (3, '2021-10-18', 'Medium', 'Insufficient income') ON CONFLICT (application_id) DO UPDATE SET assessment_date = EXCLUDED.assessment_date, risk_level = EXCLUDED.risk_level, reason = EXCLUDED.reason;",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO credit_scores (user_id, credit_score) VALUES (4, 720) ON CONFLICT (user_id) DO UPDATE SET credit_score = EXCLUDED.credit_score;",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO loan_applications (application_id, user_id, application_date, loan_amount, status) VALUES (4, 4, '2021-10-18', 12000.00, 'Pending') ON CONFLICT (application_id) DO UPDATE SET application_date = EXCLUDED.application_date, loan_amount = EXCLUDED.loan_amount, status = EXCLUDED.status;",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO loan_eligibility (user_id, is_eligible) VALUES (4, TRUE) ON CONFLICT (user_id) DO UPDATE SET is_eligible = EXCLUDED.is_eligible;",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO risk_assessment (application_id, assessment_date, risk_level, reason) VALUES (4, '2021-10-19', 'High', 'High debt-to-income ratio') ON CONFLICT (application_id) DO UPDATE SET assessment_date = EXCLUDED.assessment_date, risk_level = EXCLUDED.risk_level, reason = EXCLUDED.reason;",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO credit_scores (user_id, credit_score) VALUES (5, 770) ON CONFLICT (user_id) DO UPDATE SET credit_score = EXCLUDED.credit_score;",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO loan_applications (application_id, user_id, application_date, loan_amount, status) VALUES (5, 5, '2021-10-19', 18000.00, 'Approved') ON CONFLICT (application_id) DO UPDATE SET application_date = EXCLUDED.application_date, loan_amount = EXCLUDED.loan_amount, status = EXCLUDED.status;",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO loan_eligibility (user_id, is_eligible) VALUES (5, TRUE) ON CONFLICT (user_id) DO UPDATE SET is_eligible = EXCLUDED.is_eligible;",
  "### TABLEDATA\n\nCREATE TABLE credit_scores (\n  user_id INT,\n  credit_score INT\n);\n\n\nCREATE TABLE loan_applications (\n  application_id INT,\n  user_id INT,\n  application_date DATE,\n  loan_amount DECIMAL,\n  status VARCHAR(10)\n);\n\n\nCREATE TABLE loan_eligibility (\n  user_id INT,\n  is_eligible BOOLEAN\n);\n\n\nCREATE TABLE risk_assessment (\n  application_id INT,\n  assessment_date DATE,\n  risk_level VARCHAR(20),\n  reason TEXT\n);\n\n### STATEMENT\n\nINSERT INTO risk_assessment (application_id, assessment_date, risk_level, reason) VALUES (5, '2021-10-20', 'Low', 'Stable employment') ON CONFLICT (application_id) DO UPDATE SET assessment_date = EXCLUDED.assessment_date, risk_level = EXCLUDED.risk_level, reason = EXCLUDED.reason;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    user_id INT PRIMARY KEY,\n    credit_score INT\n);\n\nCREATE TABLE LoanApplications (\n    application_id INT PRIMARY KEY,\n    user_id INT,\n    loan_amount DECIMAL,\n    application_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    user_id INT PRIMARY KEY,\n    eligible BOOLEAN,\n    approval_date DATE\n);\n\nCREATE TABLE RiskAssessment (\n    assessment_id INT PRIMARY KEY,\n    user_id INT,\n    risk_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE UserInformation (\n    user_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (user_id, credit_score) VALUES (1, 700) ON CONFLICT (user_id) DO UPDATE SET credit_score = EXCLUDED.credit_score",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    user_id INT PRIMARY KEY,\n    credit_score INT\n);\n\nCREATE TABLE LoanApplications (\n    application_id INT PRIMARY KEY,\n    user_id INT,\n    loan_amount DECIMAL,\n    application_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    user_id INT PRIMARY KEY,\n    eligible BOOLEAN,\n    approval_date DATE\n);\n\nCREATE TABLE RiskAssessment (\n    assessment_id INT PRIMARY KEY,\n    user_id INT,\n    risk_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE UserInformation (\n    user_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (user_id, credit_score) VALUES (2, 720) ON CONFLICT (user_id) DO UPDATE SET credit_score = EXCLUDED.credit_score",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    user_id INT PRIMARY KEY,\n    credit_score INT\n);\n\nCREATE TABLE LoanApplications (\n    application_id INT PRIMARY KEY,\n    user_id INT,\n    loan_amount DECIMAL,\n    application_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    user_id INT PRIMARY KEY,\n    eligible BOOLEAN,\n    approval_date DATE\n);\n\nCREATE TABLE RiskAssessment (\n    assessment_id INT PRIMARY KEY,\n    user_id INT,\n    risk_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE UserInformation (\n    user_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (user_id, credit_score) VALUES (3, 650) ON CONFLICT (user_id) DO UPDATE SET credit_score = EXCLUDED.credit_score",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    user_id INT PRIMARY KEY,\n    credit_score INT\n);\n\nCREATE TABLE LoanApplications (\n    application_id INT PRIMARY KEY,\n    user_id INT,\n    loan_amount DECIMAL,\n    application_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    user_id INT PRIMARY KEY,\n    eligible BOOLEAN,\n    approval_date DATE\n);\n\nCREATE TABLE RiskAssessment (\n    assessment_id INT PRIMARY KEY,\n    user_id INT,\n    risk_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE UserInformation (\n    user_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (user_id, credit_score) VALUES (4, 680) ON CONFLICT (user_id) DO UPDATE SET credit_score = EXCLUDED.credit_score",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    user_id INT PRIMARY KEY,\n    credit_score INT\n);\n\nCREATE TABLE LoanApplications (\n    application_id INT PRIMARY KEY,\n    user_id INT,\n    loan_amount DECIMAL,\n    application_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    user_id INT PRIMARY KEY,\n    eligible BOOLEAN,\n    approval_date DATE\n);\n\nCREATE TABLE RiskAssessment (\n    assessment_id INT PRIMARY KEY,\n    user_id INT,\n    risk_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE UserInformation (\n    user_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (user_id, credit_score) VALUES (5, 750) ON CONFLICT (user_id) DO UPDATE SET credit_score = EXCLUDED.credit_score",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    user_id INT PRIMARY KEY,\n    credit_score INT\n);\n\nCREATE TABLE LoanApplications (\n    application_id INT PRIMARY KEY,\n    user_id INT,\n    loan_amount DECIMAL,\n    application_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    user_id INT PRIMARY KEY,\n    eligible BOOLEAN,\n    approval_date DATE\n);\n\nCREATE TABLE RiskAssessment (\n    assessment_id INT PRIMARY KEY,\n    user_id INT,\n    risk_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE UserInformation (\n    user_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO LoanApplications (application_id, user_id, loan_amount, application_date) VALUES (1, 2, 5000.00, '2022-09-15') ON CONFLICT (application_id) DO UPDATE SET user_id = EXCLUDED.user_id, loan_amount = EXCLUDED.loan_amount, application_date = EXCLUDED.application_date",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    user_id INT PRIMARY KEY,\n    credit_score INT\n);\n\nCREATE TABLE LoanApplications (\n    application_id INT PRIMARY KEY,\n    user_id INT,\n    loan_amount DECIMAL,\n    application_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    user_id INT PRIMARY KEY,\n    eligible BOOLEAN,\n    approval_date DATE\n);\n\nCREATE TABLE RiskAssessment (\n    assessment_id INT PRIMARY KEY,\n    user_id INT,\n    risk_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE UserInformation (\n    user_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO LoanApplications (application_id, user_id, loan_amount, application_date) VALUES (2, 3, 7000.00, '2022-09-20') ON CONFLICT (application_id) DO UPDATE SET user_id = EXCLUDED.user_id, loan_amount = EXCLUDED.loan_amount, application_date = EXCLUDED.application_date",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    user_id INT PRIMARY KEY,\n    credit_score INT\n);\n\nCREATE TABLE LoanApplications (\n    application_id INT PRIMARY KEY,\n    user_id INT,\n    loan_amount DECIMAL,\n    application_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    user_id INT PRIMARY KEY,\n    eligible BOOLEAN,\n    approval_date DATE\n);\n\nCREATE TABLE RiskAssessment (\n    assessment_id INT PRIMARY KEY,\n    user_id INT,\n    risk_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE UserInformation (\n    user_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO LoanApplications (application_id, user_id, loan_amount, application_date) VALUES (3, 5, 10000.00, '2022-09-10') ON CONFLICT (application_id) DO UPDATE SET user_id = EXCLUDED.user_id, loan_amount = EXCLUDED.loan_amount, application_date = EXCLUDED.application_date",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    user_id INT PRIMARY KEY,\n    credit_score INT\n);\n\nCREATE TABLE LoanApplications (\n    application_id INT PRIMARY KEY,\n    user_id INT,\n    loan_amount DECIMAL,\n    application_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    user_id INT PRIMARY KEY,\n    eligible BOOLEAN,\n    approval_date DATE\n);\n\nCREATE TABLE RiskAssessment (\n    assessment_id INT PRIMARY KEY,\n    user_id INT,\n    risk_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE UserInformation (\n    user_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO LoanApplications (application_id, user_id, loan_amount, application_date) VALUES (4, 1, 8000.00, '2022-09-25') ON CONFLICT (application_id) DO UPDATE SET user_id = EXCLUDED.user_id, loan_amount = EXCLUDED.loan_amount, application_date = EXCLUDED.application_date",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    user_id INT PRIMARY KEY,\n    credit_score INT\n);\n\nCREATE TABLE LoanApplications (\n    application_id INT PRIMARY KEY,\n    user_id INT,\n    loan_amount DECIMAL,\n    application_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    user_id INT PRIMARY KEY,\n    eligible BOOLEAN,\n    approval_date DATE\n);\n\nCREATE TABLE RiskAssessment (\n    assessment_id INT PRIMARY KEY,\n    user_id INT,\n    risk_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE UserInformation (\n    user_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO LoanApplications (application_id, user_id, loan_amount, application_date) VALUES (5, 4, 6000.00, '2022-09-12') ON CONFLICT (application_id) DO UPDATE SET user_id = EXCLUDED.user_id, loan_amount = EXCLUDED.loan_amount, application_date = EXCLUDED.application_date",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    user_id INT PRIMARY KEY,\n    credit_score INT\n);\n\nCREATE TABLE LoanApplications (\n    application_id INT PRIMARY KEY,\n    user_id INT,\n    loan_amount DECIMAL,\n    application_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    user_id INT PRIMARY KEY,\n    eligible BOOLEAN,\n    approval_date DATE\n);\n\nCREATE TABLE RiskAssessment (\n    assessment_id INT PRIMARY KEY,\n    user_id INT,\n    risk_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE UserInformation (\n    user_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO LoanEligibility (user_id, eligible, approval_date) VALUES (1, TRUE, '2022-09-20') ON CONFLICT (user_id) DO UPDATE SET eligible = EXCLUDED.eligible, approval_date = EXCLUDED.approval_date",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    user_id INT PRIMARY KEY,\n    credit_score INT\n);\n\nCREATE TABLE LoanApplications (\n    application_id INT PRIMARY KEY,\n    user_id INT,\n    loan_amount DECIMAL,\n    application_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    user_id INT PRIMARY KEY,\n    eligible BOOLEAN,\n    approval_date DATE\n);\n\nCREATE TABLE RiskAssessment (\n    assessment_id INT PRIMARY KEY,\n    user_id INT,\n    risk_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE UserInformation (\n    user_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO LoanEligibility (user_id, eligible, approval_date) VALUES (2, TRUE, '2022-09-18') ON CONFLICT (user_id) DO UPDATE SET eligible = EXCLUDED.eligible, approval_date = EXCLUDED.approval_date",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    user_id INT PRIMARY KEY,\n    credit_score INT\n);\n\nCREATE TABLE LoanApplications (\n    application_id INT PRIMARY KEY,\n    user_id INT,\n    loan_amount DECIMAL,\n    application_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    user_id INT PRIMARY KEY,\n    eligible BOOLEAN,\n    approval_date DATE\n);\n\nCREATE TABLE RiskAssessment (\n    assessment_id INT PRIMARY KEY,\n    user_id INT,\n    risk_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE UserInformation (\n    user_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO LoanEligibility (user_id, eligible, approval_date) VALUES (3, FALSE, '2022-09-22') ON CONFLICT (user_id) DO UPDATE SET eligible = EXCLUDED.eligible, approval_date = EXCLUDED.approval_date",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    user_id INT PRIMARY KEY,\n    credit_score INT\n);\n\nCREATE TABLE LoanApplications (\n    application_id INT PRIMARY KEY,\n    user_id INT,\n    loan_amount DECIMAL,\n    application_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    user_id INT PRIMARY KEY,\n    eligible BOOLEAN,\n    approval_date DATE\n);\n\nCREATE TABLE RiskAssessment (\n    assessment_id INT PRIMARY KEY,\n    user_id INT,\n    risk_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE UserInformation (\n    user_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO LoanEligibility (user_id, eligible, approval_date) VALUES (4, TRUE, '2022-09-25') ON CONFLICT (user_id) DO UPDATE SET eligible = EXCLUDED.eligible, approval_date = EXCLUDED.approval_date",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    user_id INT PRIMARY KEY,\n    credit_score INT\n);\n\nCREATE TABLE LoanApplications (\n    application_id INT PRIMARY KEY,\n    user_id INT,\n    loan_amount DECIMAL,\n    application_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    user_id INT PRIMARY KEY,\n    eligible BOOLEAN,\n    approval_date DATE\n);\n\nCREATE TABLE RiskAssessment (\n    assessment_id INT PRIMARY KEY,\n    user_id INT,\n    risk_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE UserInformation (\n    user_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO LoanEligibility (user_id, eligible, approval_date) VALUES (5, FALSE, '2022-09-30') ON CONFLICT (user_id) DO UPDATE SET eligible = EXCLUDED.eligible, approval_date = EXCLUDED.approval_date",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    user_id INT PRIMARY KEY,\n    credit_score INT\n);\n\nCREATE TABLE LoanApplications (\n    application_id INT PRIMARY KEY,\n    user_id INT,\n    loan_amount DECIMAL,\n    application_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    user_id INT PRIMARY KEY,\n    eligible BOOLEAN,\n    approval_date DATE\n);\n\nCREATE TABLE RiskAssessment (\n    assessment_id INT PRIMARY KEY,\n    user_id INT,\n    risk_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE UserInformation (\n    user_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO RiskAssessment (assessment_id, user_id, risk_score, assessment_date) VALUES (1, 2, 75, '2022-09-16') ON CONFLICT (assessment_id) DO UPDATE SET user_id = EXCLUDED.user_id, risk_score = EXCLUDED.risk_score, assessment_date = EXCLUDED.assessment_date",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    user_id INT PRIMARY KEY,\n    credit_score INT\n);\n\nCREATE TABLE LoanApplications (\n    application_id INT PRIMARY KEY,\n    user_id INT,\n    loan_amount DECIMAL,\n    application_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    user_id INT PRIMARY KEY,\n    eligible BOOLEAN,\n    approval_date DATE\n);\n\nCREATE TABLE RiskAssessment (\n    assessment_id INT PRIMARY KEY,\n    user_id INT,\n    risk_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE UserInformation (\n    user_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO RiskAssessment (assessment_id, user_id, risk_score, assessment_date) VALUES (2, 3, 60, '2022-09-18') ON CONFLICT (assessment_id) DO UPDATE SET user_id = EXCLUDED.user_id, risk_score = EXCLUDED.risk_score, assessment_date = EXCLUDED.assessment_date",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    user_id INT PRIMARY KEY,\n    credit_score INT\n);\n\nCREATE TABLE LoanApplications (\n    application_id INT PRIMARY KEY,\n    user_id INT,\n    loan_amount DECIMAL,\n    application_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    user_id INT PRIMARY KEY,\n    eligible BOOLEAN,\n    approval_date DATE\n);\n\nCREATE TABLE RiskAssessment (\n    assessment_id INT PRIMARY KEY,\n    user_id INT,\n    risk_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE UserInformation (\n    user_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO RiskAssessment (assessment_id, user_id, risk_score, assessment_date) VALUES (3, 5, 80, '2022-09-12') ON CONFLICT (assessment_id) DO UPDATE SET user_id = EXCLUDED.user_id, risk_score = EXCLUDED.risk_score, assessment_date = EXCLUDED.assessment_date",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    user_id INT PRIMARY KEY,\n    credit_score INT\n);\n\nCREATE TABLE LoanApplications (\n    application_id INT PRIMARY KEY,\n    user_id INT,\n    loan_amount DECIMAL,\n    application_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    user_id INT PRIMARY KEY,\n    eligible BOOLEAN,\n    approval_date DATE\n);\n\nCREATE TABLE RiskAssessment (\n    assessment_id INT PRIMARY KEY,\n    user_id INT,\n    risk_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE UserInformation (\n    user_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO RiskAssessment (assessment_id, user_id, risk_score, assessment_date) VALUES (4, 1, 70, '2022-09-20') ON CONFLICT (assessment_id) DO UPDATE SET user_id = EXCLUDED.user_id, risk_score = EXCLUDED.risk_score, assessment_date = EXCLUDED.assessment_date",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    user_id INT PRIMARY KEY,\n    credit_score INT\n);\n\nCREATE TABLE LoanApplications (\n    application_id INT PRIMARY KEY,\n    user_id INT,\n    loan_amount DECIMAL,\n    application_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    user_id INT PRIMARY KEY,\n    eligible BOOLEAN,\n    approval_date DATE\n);\n\nCREATE TABLE RiskAssessment (\n    assessment_id INT PRIMARY KEY,\n    user_id INT,\n    risk_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE UserInformation (\n    user_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO RiskAssessment (assessment_id, user_id, risk_score, assessment_date) VALUES (5, 4, 65, '2022-09-25') ON CONFLICT (assessment_id) DO UPDATE SET user_id = EXCLUDED.user_id, risk_score = EXCLUDED.risk_score, assessment_date = EXCLUDED.assessment_date",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    user_id INT PRIMARY KEY,\n    credit_score INT\n);\n\nCREATE TABLE LoanApplications (\n    application_id INT PRIMARY KEY,\n    user_id INT,\n    loan_amount DECIMAL,\n    application_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    user_id INT PRIMARY KEY,\n    eligible BOOLEAN,\n    approval_date DATE\n);\n\nCREATE TABLE RiskAssessment (\n    assessment_id INT PRIMARY KEY,\n    user_id INT,\n    risk_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE UserInformation (\n    user_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO UserInformation (user_id, first_name, last_name, email, phone_number, address) VALUES (1, 'John', 'Doe', 'johndoe@example.com', '123-456-7890', '123 Main St') ON CONFLICT (user_id) DO UPDATE SET first_name = EXCLUDED.first_name, last_name = EXCLUDED.last_name, email = EXCLUDED.email, phone_number = EXCLUDED.phone_number, address = EXCLUDED.address",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    user_id INT PRIMARY KEY,\n    credit_score INT\n);\n\nCREATE TABLE LoanApplications (\n    application_id INT PRIMARY KEY,\n    user_id INT,\n    loan_amount DECIMAL,\n    application_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    user_id INT PRIMARY KEY,\n    eligible BOOLEAN,\n    approval_date DATE\n);\n\nCREATE TABLE RiskAssessment (\n    assessment_id INT PRIMARY KEY,\n    user_id INT,\n    risk_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE UserInformation (\n    user_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO UserInformation (user_id, first_name, last_name, email, phone_number, address) VALUES (2, 'Jane', 'Smith', 'janesmith@example.com', '456-789-0123', '456 Elm St') ON CONFLICT (user_id) DO UPDATE SET first_name = EXCLUDED.first_name, last_name = EXCLUDED.last_name, email = EXCLUDED.email, phone_number = EXCLUDED.phone_number, address = EXCLUDED.address",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    user_id INT PRIMARY KEY,\n    credit_score INT\n);\n\nCREATE TABLE LoanApplications (\n    application_id INT PRIMARY KEY,\n    user_id INT,\n    loan_amount DECIMAL,\n    application_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    user_id INT PRIMARY KEY,\n    eligible BOOLEAN,\n    approval_date DATE\n);\n\nCREATE TABLE RiskAssessment (\n    assessment_id INT PRIMARY KEY,\n    user_id INT,\n    risk_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE UserInformation (\n    user_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO UserInformation (user_id, first_name, last_name, email, phone_number, address) VALUES (3, 'Alice', 'Johnson', 'alicejohnson@example.com', '789-012-3456', '789 Oak St') ON CONFLICT (user_id) DO UPDATE SET first_name = EXC...",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    user_id INT PRIMARY KEY,\n    credit_score INT\n);\n\nCREATE TABLE LoanApplications (\n    application_id INT PRIMARY KEY,\n    user_id INT,\n    loan_amount DECIMAL,\n    application_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    user_id INT PRIMARY KEY,\n    eligible BOOLEAN,\n    approval_date DATE\n);\n\nCREATE TABLE RiskAssessment (\n    assessment_id INT PRIMARY KEY,\n    user_id INT,\n    risk_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE UserInformation (\n    user_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO CreditScores (user_id, credit_score) VALUES (1, 750) ON DUPLICATE KEY UPDATE credit_score = 750;",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    user_id INT PRIMARY KEY,\n    credit_score INT\n);\n\nCREATE TABLE LoanApplications (\n    application_id INT PRIMARY KEY,\n    user_id INT,\n    loan_amount DECIMAL,\n    application_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    user_id INT PRIMARY KEY,\n    eligible BOOLEAN,\n    approval_date DATE\n);\n\nCREATE TABLE RiskAssessment (\n    assessment_id INT PRIMARY KEY,\n    user_id INT,\n    risk_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE UserInformation (\n    user_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO LoanApplications (application_id, user_id, loan_amount, application_date) VALUES (1, 1, 10000, '2022-05-10') ON DUPLICATE KEY UPDATE loan_amount = 10000, application_date = '2022-05-10';",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    user_id INT PRIMARY KEY,\n    credit_score INT\n);\n\nCREATE TABLE LoanApplications (\n    application_id INT PRIMARY KEY,\n    user_id INT,\n    loan_amount DECIMAL,\n    application_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    user_id INT PRIMARY KEY,\n    eligible BOOLEAN,\n    approval_date DATE\n);\n\nCREATE TABLE RiskAssessment (\n    assessment_id INT PRIMARY KEY,\n    user_id INT,\n    risk_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE UserInformation (\n    user_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO LoanEligibility (user_id, eligible, approval_date) VALUES (1, true, '2022-05-12') ON DUPLICATE KEY UPDATE eligible = true, approval_date = '2022-05-12';",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    user_id INT PRIMARY KEY,\n    credit_score INT\n);\n\nCREATE TABLE LoanApplications (\n    application_id INT PRIMARY KEY,\n    user_id INT,\n    loan_amount DECIMAL,\n    application_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    user_id INT PRIMARY KEY,\n    eligible BOOLEAN,\n    approval_date DATE\n);\n\nCREATE TABLE RiskAssessment (\n    assessment_id INT PRIMARY KEY,\n    user_id INT,\n    risk_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE UserInformation (\n    user_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO RiskAssessment (assessment_id, user_id, risk_score, assessment_date) VALUES (1, 1, 80, '2022-05-15') ON DUPLICATE KEY UPDATE risk_score = 80, assessment_date = '2022-05-15';",
  "### TABLEDATA\n\nCREATE TABLE CreditScores (\n    user_id INT PRIMARY KEY,\n    credit_score INT\n);\n\nCREATE TABLE LoanApplications (\n    application_id INT PRIMARY KEY,\n    user_id INT,\n    loan_amount DECIMAL,\n    application_date DATE\n);\n\nCREATE TABLE LoanEligibility (\n    user_id INT PRIMARY KEY,\n    eligible BOOLEAN,\n    approval_date DATE\n);\n\nCREATE TABLE RiskAssessment (\n    assessment_id INT PRIMARY KEY,\n    user_id INT,\n    risk_score INT,\n    assessment_date DATE\n);\n\nCREATE TABLE UserInformation (\n    user_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15),\n    address VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO UserInformation (user_id, first_name, last_name, email, phone_number, address) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '123-456-7890', '123 Main St') ON DUPLICATE KEY UPDATE first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', phone_number = '123-456-7890', address = '123 Main St';"
]