[
  "### TABLEDATA\n\nCREATE TABLE Financial_Statements (\n    id SERIAL PRIMARY KEY,\n    statement_date DATE,\n    statement_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    reconciled BOOLEAN\n)\n\n### STATEMENT\n\nUPDATE Financial_Statements SET amount = 5000.00 WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Statements (\n    id SERIAL PRIMARY KEY,\n    statement_date DATE,\n    statement_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    reconciled BOOLEAN\n)\n\n### STATEMENT\n\nUPDATE Financial_Statements SET reconciled = TRUE WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Statements (\n    id SERIAL PRIMARY KEY,\n    statement_date DATE,\n    statement_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    reconciled BOOLEAN\n)\n\n### STATEMENT\n\nUPDATE Financial_Statements SET statement_type = 'Balance Sheet' WHERE id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Statements (\n    id SERIAL PRIMARY KEY,\n    statement_date DATE,\n    statement_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    reconciled BOOLEAN\n)\n\n### STATEMENT\n\nUPDATE Financial_Statements SET amount = amount + 100 WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Statements (\n    id SERIAL PRIMARY KEY,\n    statement_date DATE,\n    statement_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    reconciled BOOLEAN\n)\n\n### STATEMENT\n\nUPDATE Financial_Statements SET statement_type = 'Income' WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Financial_Statements (\n    id SERIAL PRIMARY KEY,\n    statement_date DATE,\n    statement_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    reconciled BOOLEAN\n)\n\n### STATEMENT\n\nUPDATE Financial_Statements SET reconciled = TRUE WHERE statement_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE financial_statements (\n  statement_id INT PRIMARY KEY,\n  statement_date DATE,\n  statement_amount DECIMAL\n);\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  statement_id INT,\n  action_performed VARCHAR(255),\n  logged_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE financial_statements SET statement_amount = 100.50 WHERE statement_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE financial_statements (\n  statement_id INT PRIMARY KEY,\n  statement_date DATE,\n  statement_amount DECIMAL\n);\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  statement_id INT,\n  action_performed VARCHAR(255),\n  logged_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE financial_statements SET statement_date = '2022-08-15' WHERE statement_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE financial_statements (\n  statement_id INT PRIMARY KEY,\n  statement_date DATE,\n  statement_amount DECIMAL\n);\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  statement_id INT,\n  action_performed VARCHAR(255),\n  logged_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE audit_logs SET action_performed = 'Updated statement' WHERE log_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE financial_statements (\n  statement_id INT PRIMARY KEY,\n  statement_date DATE,\n  statement_amount DECIMAL\n);\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  statement_id INT,\n  action_performed VARCHAR(255),\n  logged_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE financial_statements SET statement_amount = statement_amount + 100 WHERE statement_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE financial_statements (\n  statement_id INT PRIMARY KEY,\n  statement_date DATE,\n  statement_amount DECIMAL\n);\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  statement_id INT,\n  action_performed VARCHAR(255),\n  logged_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE financial_statements SET statement_amount = statement_amount - 50 WHERE statement_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE financial_statements (\n  statement_id INT PRIMARY KEY,\n  statement_date DATE,\n  statement_amount DECIMAL\n);\n\nCREATE TABLE audit_logs (\n  log_id INT PRIMARY KEY,\n  statement_id INT,\n  action_performed VARCHAR(255),\n  logged_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE audit_logs SET action_performed = 'Statement updated' WHERE log_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE financial_statements (\n  id SERIAL PRIMARY KEY,\n  statement_name TEXT NOT NULL,\n  statement_date DATE NOT NULL,\n  total_amount DECIMAL NOT NULL\n);\n\nCREATE TABLE audit_logs (\n  log_id SERIAL PRIMARY KEY,\n  statement_id INT NOT NULL REFERENCES financial_statements(id),\n  action TEXT NOT NULL,\n  action_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE reconciliation_records (\n  record_id SERIAL PRIMARY KEY,\n  statement_id INT NOT NULL REFERENCES financial_statements(id),\n  status TEXT NOT NULL,\n  reconciled_amount DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nUPDATE financial_statements SET total_amount = total_amount + 100 WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE financial_statements (\n  id SERIAL PRIMARY KEY,\n  statement_name TEXT NOT NULL,\n  statement_date DATE NOT NULL,\n  total_amount DECIMAL NOT NULL\n);\n\nCREATE TABLE audit_logs (\n  log_id SERIAL PRIMARY KEY,\n  statement_id INT NOT NULL REFERENCES financial_statements(id),\n  action TEXT NOT NULL,\n  action_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE reconciliation_records (\n  record_id SERIAL PRIMARY KEY,\n  statement_id INT NOT NULL REFERENCES financial_statements(id),\n  status TEXT NOT NULL,\n  reconciled_amount DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nUPDATE audit_logs SET action = 'Approved' WHERE log_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE financial_statements (\n  id SERIAL PRIMARY KEY,\n  statement_name TEXT NOT NULL,\n  statement_date DATE NOT NULL,\n  total_amount DECIMAL NOT NULL\n);\n\nCREATE TABLE audit_logs (\n  log_id SERIAL PRIMARY KEY,\n  statement_id INT NOT NULL REFERENCES financial_statements(id),\n  action TEXT NOT NULL,\n  action_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE reconciliation_records (\n  record_id SERIAL PRIMARY KEY,\n  statement_id INT NOT NULL REFERENCES financial_statements(id),\n  status TEXT NOT NULL,\n  reconciled_amount DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nUPDATE reconciliation_records SET status = 'Reconciled' WHERE record_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE financial_statements (\n  id SERIAL PRIMARY KEY,\n  statement_name TEXT NOT NULL,\n  statement_date DATE NOT NULL,\n  total_amount DECIMAL NOT NULL\n);\n\nCREATE TABLE audit_logs (\n  log_id SERIAL PRIMARY KEY,\n  statement_id INT NOT NULL REFERENCES financial_statements(id),\n  action TEXT NOT NULL,\n  action_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE reconciliation_records (\n  record_id SERIAL PRIMARY KEY,\n  statement_id INT NOT NULL REFERENCES financial_statements(id),\n  status TEXT NOT NULL,\n  reconciled_amount DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nUPDATE financial_statements SET total_amount = total_amount + 100 WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE financial_statements (\n  id SERIAL PRIMARY KEY,\n  statement_name TEXT NOT NULL,\n  statement_date DATE NOT NULL,\n  total_amount DECIMAL NOT NULL\n);\n\nCREATE TABLE audit_logs (\n  log_id SERIAL PRIMARY KEY,\n  statement_id INT NOT NULL REFERENCES financial_statements(id),\n  action TEXT NOT NULL,\n  action_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE reconciliation_records (\n  record_id SERIAL PRIMARY KEY,\n  statement_id INT NOT NULL REFERENCES financial_statements(id),\n  status TEXT NOT NULL,\n  reconciled_amount DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nUPDATE audit_logs SET action = 'Reviewed and approved' WHERE log_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE financial_statements (\n  id SERIAL PRIMARY KEY,\n  statement_name TEXT NOT NULL,\n  statement_date DATE NOT NULL,\n  total_amount DECIMAL NOT NULL\n);\n\nCREATE TABLE audit_logs (\n  log_id SERIAL PRIMARY KEY,\n  statement_id INT NOT NULL REFERENCES financial_statements(id),\n  action TEXT NOT NULL,\n  action_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE reconciliation_records (\n  record_id SERIAL PRIMARY KEY,\n  statement_id INT NOT NULL REFERENCES financial_statements(id),\n  status TEXT NOT NULL,\n  reconciled_amount DECIMAL NOT NULL\n);\n\n### STATEMENT\n\nUPDATE reconciliation_records SET status = 'Reconciled', reconciled_amount = 5000 WHERE record_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE financial_statement (id INT PRIMARY KEY,\n statement_date DATE,\n amount DECIMAL);\n\nCREATE TABLE auditor (id INT PRIMARY KEY,\n name VARCHAR(50),\n email VARCHAR(50));\n\nCREATE TABLE audit_log (id INT PRIMARY KEY,\n audit_date DATE,\n auditor_id INT,\n action VARCHAR(50));\n\nCREATE TABLE reconciliation (id INT PRIMARY KEY,\n start_date DATE,\n end_date DATE,\n status VARCHAR(50));\n\n### STATEMENT\n\nUPDATE financial_statement SET amount = 1000 WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE financial_statement (id INT PRIMARY KEY,\n statement_date DATE,\n amount DECIMAL);\n\nCREATE TABLE auditor (id INT PRIMARY KEY,\n name VARCHAR(50),\n email VARCHAR(50));\n\nCREATE TABLE audit_log (id INT PRIMARY KEY,\n audit_date DATE,\n auditor_id INT,\n action VARCHAR(50));\n\nCREATE TABLE reconciliation (id INT PRIMARY KEY,\n start_date DATE,\n end_date DATE,\n status VARCHAR(50));\n\n### STATEMENT\n\nUPDATE auditor SET email = 'newemail@example.com' WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE financial_statement (id INT PRIMARY KEY,\n statement_date DATE,\n amount DECIMAL);\n\nCREATE TABLE auditor (id INT PRIMARY KEY,\n name VARCHAR(50),\n email VARCHAR(50));\n\nCREATE TABLE audit_log (id INT PRIMARY KEY,\n audit_date DATE,\n auditor_id INT,\n action VARCHAR(50));\n\nCREATE TABLE reconciliation (id INT PRIMARY KEY,\n start_date DATE,\n end_date DATE,\n status VARCHAR(50));\n\n### STATEMENT\n\nUPDATE audit_log SET action = 'verified' WHERE id = 3;",
  "### TABLEDATA\n\nCREATE TABLE financial_statement (id INT PRIMARY KEY,\n statement_date DATE,\n amount DECIMAL);\n\nCREATE TABLE auditor (id INT PRIMARY KEY,\n name VARCHAR(50),\n email VARCHAR(50));\n\nCREATE TABLE audit_log (id INT PRIMARY KEY,\n audit_date DATE,\n auditor_id INT,\n action VARCHAR(50));\n\nCREATE TABLE reconciliation (id INT PRIMARY KEY,\n start_date DATE,\n end_date DATE,\n status VARCHAR(50));\n\n### STATEMENT\n\nUPDATE financial_statement SET amount = amount * 1.05 WHERE statement_date = '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE financial_statement (id INT PRIMARY KEY,\n statement_date DATE,\n amount DECIMAL);\n\nCREATE TABLE auditor (id INT PRIMARY KEY,\n name VARCHAR(50),\n email VARCHAR(50));\n\nCREATE TABLE audit_log (id INT PRIMARY KEY,\n audit_date DATE,\n auditor_id INT,\n action VARCHAR(50));\n\nCREATE TABLE reconciliation (id INT PRIMARY KEY,\n start_date DATE,\n end_date DATE,\n status VARCHAR(50));\n\n### STATEMENT\n\nUPDATE auditor SET email = CONCAT(name, '@example.com') WHERE id = 101;",
  "### TABLEDATA\n\nCREATE TABLE financial_statement (id INT PRIMARY KEY,\n statement_date DATE,\n amount DECIMAL);\n\nCREATE TABLE auditor (id INT PRIMARY KEY,\n name VARCHAR(50),\n email VARCHAR(50));\n\nCREATE TABLE audit_log (id INT PRIMARY KEY,\n audit_date DATE,\n auditor_id INT,\n action VARCHAR(50));\n\nCREATE TABLE reconciliation (id INT PRIMARY KEY,\n start_date DATE,\n end_date DATE,\n status VARCHAR(50));\n\n### STATEMENT\n\nUPDATE audit_log SET action = 'Reviewed' WHERE audit_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE financial_statements (\n    id INT,\n    statement_date DATE,\n    statement_details TEXT,\n    PRIMARY KEY (id)\n)\n\nCREATE TABLE auditors (\n    auditor_id INT,\n    auditor_name TEXT,\n    audit_hours DECIMAL,\n    audit_fee DECIMAL,\n    PRIMARY KEY (auditor_id)\n)\n\nCREATE TABLE clients (\n    client_id INT,\n    client_name TEXT,\n    client_contact TEXT,\n    PRIMARY KEY (client_id)\n)\n\nCREATE TABLE reconciliations (\n    reconciliation_id INT,\n    statement_id INT,\n    auditor_id INT,\n    reconciliation_status TEXT,\n    PRIMARY KEY (reconciliation_id),\n    FOREIGN KEY (statement_id) REFERENCES financial_statements(id),\n    FOREIGN KEY (auditor_id) REFERENCES auditors(auditor_id)\n)\n\nCREATE TABLE payments (\n    payment_id INT,\n    client_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    PRIMARY KEY (payment_id),\n    FOREIGN KEY (client_id) REFERENCES clients(client_id)\n)\n\n### STATEMENT\n\nUPDATE financial_statements SET statement_details = 'Updated statement details' WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE financial_statements (\n    id INT,\n    statement_date DATE,\n    statement_details TEXT,\n    PRIMARY KEY (id)\n)\n\nCREATE TABLE auditors (\n    auditor_id INT,\n    auditor_name TEXT,\n    audit_hours DECIMAL,\n    audit_fee DECIMAL,\n    PRIMARY KEY (auditor_id)\n)\n\nCREATE TABLE clients (\n    client_id INT,\n    client_name TEXT,\n    client_contact TEXT,\n    PRIMARY KEY (client_id)\n)\n\nCREATE TABLE reconciliations (\n    reconciliation_id INT,\n    statement_id INT,\n    auditor_id INT,\n    reconciliation_status TEXT,\n    PRIMARY KEY (reconciliation_id),\n    FOREIGN KEY (statement_id) REFERENCES financial_statements(id),\n    FOREIGN KEY (auditor_id) REFERENCES auditors(auditor_id)\n)\n\nCREATE TABLE payments (\n    payment_id INT,\n    client_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    PRIMARY KEY (payment_id),\n    FOREIGN KEY (client_id) REFERENCES clients(client_id)\n)\n\n### STATEMENT\n\nUPDATE auditors SET audit_hours = 40 WHERE auditor_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE financial_statements (\n    id INT,\n    statement_date DATE,\n    statement_details TEXT,\n    PRIMARY KEY (id)\n)\n\nCREATE TABLE auditors (\n    auditor_id INT,\n    auditor_name TEXT,\n    audit_hours DECIMAL,\n    audit_fee DECIMAL,\n    PRIMARY KEY (auditor_id)\n)\n\nCREATE TABLE clients (\n    client_id INT,\n    client_name TEXT,\n    client_contact TEXT,\n    PRIMARY KEY (client_id)\n)\n\nCREATE TABLE reconciliations (\n    reconciliation_id INT,\n    statement_id INT,\n    auditor_id INT,\n    reconciliation_status TEXT,\n    PRIMARY KEY (reconciliation_id),\n    FOREIGN KEY (statement_id) REFERENCES financial_statements(id),\n    FOREIGN KEY (auditor_id) REFERENCES auditors(auditor_id)\n)\n\nCREATE TABLE payments (\n    payment_id INT,\n    client_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    PRIMARY KEY (payment_id),\n    FOREIGN KEY (client_id) REFERENCES clients(client_id)\n)\n\n### STATEMENT\n\nUPDATE clients SET client_contact = 'updated@example.com' WHERE client_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE financial_statements (\n    id INT,\n    statement_date DATE,\n    statement_details TEXT,\n    PRIMARY KEY (id)\n)\n\nCREATE TABLE auditors (\n    auditor_id INT,\n    auditor_name TEXT,\n    audit_hours DECIMAL,\n    audit_fee DECIMAL,\n    PRIMARY KEY (auditor_id)\n)\n\nCREATE TABLE clients (\n    client_id INT,\n    client_name TEXT,\n    client_contact TEXT,\n    PRIMARY KEY (client_id)\n)\n\nCREATE TABLE reconciliations (\n    reconciliation_id INT,\n    statement_id INT,\n    auditor_id INT,\n    reconciliation_status TEXT,\n    PRIMARY KEY (reconciliation_id),\n    FOREIGN KEY (statement_id) REFERENCES financial_statements(id),\n    FOREIGN KEY (auditor_id) REFERENCES auditors(auditor_id)\n)\n\nCREATE TABLE payments (\n    payment_id INT,\n    client_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    PRIMARY KEY (payment_id),\n    FOREIGN KEY (client_id) REFERENCES clients(client_id)\n)\n\n### STATEMENT\n\nUPDATE financial_statements SET statement_date = '2022-01-31' WHERE id = 1",
  "### TABLEDATA\n\nCREATE TABLE financial_statements (\n    id INT,\n    statement_date DATE,\n    statement_details TEXT,\n    PRIMARY KEY (id)\n)\n\nCREATE TABLE auditors (\n    auditor_id INT,\n    auditor_name TEXT,\n    audit_hours DECIMAL,\n    audit_fee DECIMAL,\n    PRIMARY KEY (auditor_id)\n)\n\nCREATE TABLE clients (\n    client_id INT,\n    client_name TEXT,\n    client_contact TEXT,\n    PRIMARY KEY (client_id)\n)\n\nCREATE TABLE reconciliations (\n    reconciliation_id INT,\n    statement_id INT,\n    auditor_id INT,\n    reconciliation_status TEXT,\n    PRIMARY KEY (reconciliation_id),\n    FOREIGN KEY (statement_id) REFERENCES financial_statements(id),\n    FOREIGN KEY (auditor_id) REFERENCES auditors(auditor_id)\n)\n\nCREATE TABLE payments (\n    payment_id INT,\n    client_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    PRIMARY KEY (payment_id),\n    FOREIGN KEY (client_id) REFERENCES clients(client_id)\n)\n\n### STATEMENT\n\nUPDATE auditors SET audit_hours = 40.5, audit_fee = 4500.00 WHERE auditor_id = 1",
  "### TABLEDATA\n\nCREATE TABLE financial_statements (\n    id INT,\n    statement_date DATE,\n    statement_details TEXT,\n    PRIMARY KEY (id)\n)\n\nCREATE TABLE auditors (\n    auditor_id INT,\n    auditor_name TEXT,\n    audit_hours DECIMAL,\n    audit_fee DECIMAL,\n    PRIMARY KEY (auditor_id)\n)\n\nCREATE TABLE clients (\n    client_id INT,\n    client_name TEXT,\n    client_contact TEXT,\n    PRIMARY KEY (client_id)\n)\n\nCREATE TABLE reconciliations (\n    reconciliation_id INT,\n    statement_id INT,\n    auditor_id INT,\n    reconciliation_status TEXT,\n    PRIMARY KEY (reconciliation_id),\n    FOREIGN KEY (statement_id) REFERENCES financial_statements(id),\n    FOREIGN KEY (auditor_id) REFERENCES auditors(auditor_id)\n)\n\nCREATE TABLE payments (\n    payment_id INT,\n    client_id INT,\n    payment_amount DECIMAL,\n    payment_date DATE,\n    PRIMARY KEY (payment_id),\n    FOREIGN KEY (client_id) REFERENCES clients(client_id)\n)\n\n### STATEMENT\n\nUPDATE clients SET client_contact = 'client@company.com' WHERE client_id = 5"
]