[
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipment_id, shipment_status, delivery_time FROM shipment_tracking;",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT * FROM shipment_tracking WHERE shipment_status = 'Delivered';",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT COUNT(shipment_id) FROM shipment_tracking;",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT MAX(delivery_time) FROM shipment_tracking;",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipment_id, COUNT(*) FROM shipment_tracking GROUP BY shipment_id;",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT * FROM shipment_tracking ORDER BY delivery_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipment_id, shipment_status FROM shipment_tracking WHERE shipment_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT * FROM shipment_tracking WHERE delivery_time > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipment_id, shipment_status FROM shipment_tracking WHERE delivery_time BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT AVG(shipment_id) FROM shipment_tracking;",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipment_id, shipment_status FROM shipment_tracking WHERE shipment_status LIKE '%Processing%';",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT MIN(delivery_time) FROM shipment_tracking;",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipment_id, shipment_status FROM shipment_tracking WHERE shipment_status IN ('Processing', 'In Transit');",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT * FROM shipment_tracking WHERE shipment_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipment_id, shipment_status, COUNT(*) as total_shipments FROM shipment_tracking GROUP BY shipment_id, shipment_status;",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT DISTINCT shipment_status FROM shipment_tracking;",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipment_id, DATE(delivery_time) as delivery_date FROM shipment_tracking;",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipment_id, TIMESTAMPADD(DAY, 1, delivery_time) as tomorrow_delivery FROM shipment_tracking;",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipment_id, shipment_status FROM shipment_tracking WHERE delivery_time IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipment_id, shipment_status FROM shipment_tracking WHERE shipment_id > 100;",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT * FROM shipment_tracking WHERE shipment_status='In Transit';",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipment_id, shipment_status FROM shipment_tracking WHERE delivery_time >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_shipments FROM shipment_tracking;",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipment_id, MAX(delivery_time) AS last_delivery FROM shipment_tracking GROUP BY shipment_id;",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT * FROM shipment_tracking ORDER BY delivery_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipment_id, shipment_status FROM shipment_tracking WHERE delivery_time BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT * FROM shipment_tracking WHERE shipment_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT DISTINCT shipment_status FROM shipment_tracking;",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT shipment_status) AS unique_statuses FROM shipment_tracking;",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT AVG(TIMESTAMPDIFF(HOUR, delivery_time, NOW())) AS avg_delivery_time FROM shipment_tracking;",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipment_id, shipment_status, YEAR(delivery_time) AS delivery_year FROM shipment_tracking;",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipment_id, shipment_status FROM shipment_tracking WHERE YEAR(delivery_time) = YEAR(NOW());",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipment_id, shipment_status FROM shipment_tracking WHERE MONTH(delivery_time) = 6;",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipment_id, shipment_status, DAY(delivery_time) AS delivery_day FROM shipment_tracking;",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipment_id, shipment_status, HOUR(delivery_time) AS delivery_hour FROM shipment_tracking;",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipment_id, shipment_status, MINUTE(delivery_time) AS delivery_minute FROM shipment_tracking;",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipment_id, shipment_status, SECOND(delivery_time) AS delivery_second FROM shipment_tracking;",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipment_status, COUNT(*) AS total_shipments FROM shipment_tracking GROUP BY shipment_status;",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipment_id, shipment_status, delivery_time FROM shipment_tracking WHERE shipment_status LIKE 'Delivered%';",
  "### TABLEDATA\n\nCREATE TABLE shipment_tracking ( \n\tshipment_id INT PRIMARY KEY, \n\tshipment_status VARCHAR(50), \n\tdelivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT * FROM shipment_tracking WHERE shipment_id < 20;",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM shipment_status;",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, status FROM shipment_status WHERE shipment_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT status, delivery_time FROM shipment_status WHERE status = 'Delivered';",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM delivery_times;",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT delivery_id, delivery_date FROM delivery_times WHERE shipment_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM shipment_status INNER JOIN delivery_times ON shipment_status.shipment_id = delivery_times.shipment_id;",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_status.shipment_id, shipment_status.status, delivery_times.delivery_date, delivery_times.delivery_slot FROM shipment_status LEFT JOIN delivery_times ON shipment_status.shipment_id = delivery_times.shipment_id;",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM shipment_status WHERE delivery_time < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, status FROM shipment_status WHERE status = 'In Transit';",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, delivery_date FROM delivery_times WHERE delivery_slot = 'Morning';",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM shipment_status ORDER BY delivery_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, status FROM shipment_status WHERE delivery_time IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, delivery_date FROM delivery_times WHERE delivery_slot = 'Afternoon';",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_shipments FROM shipment_status;",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(shipment_id) AS avg_shipment_id FROM shipment_status;",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_deliveries FROM delivery_times;",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(delivery_id) AS avg_delivery_id FROM delivery_times;",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, status, delivery_time FROM shipment_status WHERE shipment_id IN (101, 102, 103);",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, delivery_slot FROM delivery_times WHERE delivery_date = '2022-02-15';",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT SUM(shipment_id) AS total_shipment_ids FROM shipment_status;",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM shipment_status WHERE status = 'Delivered';",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, status FROM shipment_status WHERE shipment_id = 12345;",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, delivery_time FROM shipment_status WHERE delivery_time BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, status, delivery_date FROM shipment_status s JOIN delivery_times d ON s.shipment_id = d.shipment_id WHERE d.delivery_date = '2022-10-15';",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, status, delivery_date FROM shipment_status s LEFT JOIN delivery_times d ON s.shipment_id = d.shipment_id WHERE d.delivery_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, delivery_time FROM shipment_status ORDER BY shipment_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, status FROM shipment_status WHERE status LIKE '%Processing%';",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MAX(shipment_id) AS max_shipment_id FROM shipment_status;",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, delivery_time FROM shipment_status WHERE delivery_time >= CURRENT_TIMESTAMP;",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, status, delivery_slot FROM shipment_status s JOIN delivery_times d ON s.shipment_id = d.shipment_id WHERE d.delivery_slot = 'Morning';",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, status, delivery_date FROM shipment_status s JOIN delivery_times d ON s.shipment_id = d.shipment_id WHERE d.delivery_slot = 'Evening' ORDER BY d.delivery_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT DISTINCT status FROM shipment_status;",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, status FROM shipment_status UNION SELECT delivery_id AS shipment_id, delivery_slot AS status FROM delivery_times;",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, status, delivery_date FROM shipment_status WHERE status = 'Shipped' UNION SELECT shipment_id, status, delivery_date FROM shipment_status WHERE status = 'Delivered';",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, COUNT(*) AS delivery_count FROM delivery_times GROUP BY shipment_id HAVING delivery_count > 1;",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(shipment_id) AS avg_shipment_id FROM delivery_times;",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, MIN(delivery_date) AS first_delivery_date FROM delivery_times GROUP BY shipment_id;",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, delivery_date FROM delivery_times WHERE delivery_date <= '2022-12-31' AND delivery_slot IN ('Morning', 'Afternoon');",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, status, delivery_slot FROM shipment_status s JOIN delivery_times d ON s.shipment_id = d.shipment_id WHERE delivery_slot LIKE '%fternoon%' ORDER BY shipment_id;",
  "### TABLEDATA\n\nCREATE TABLE shipment_status (\n  shipment_id INT PRIMARY KEY,\n  status VARCHAR(50) NOT NULL,\n  delivery_time TIMESTAMP\n);\n\nCREATE TABLE delivery_times (\n  delivery_id INT PRIMARY KEY,\n  shipment_id INT,\n  delivery_date DATE,\n  delivery_slot VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, COUNT(delivery_date) AS delivery_count FROM delivery_times GROUP BY shipment_id ORDER BY delivery_count DESC;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM shipments;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, customer_id, product_name FROM shipments;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, delivery_date FROM shipments;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_email FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM delivery_times;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT delivery_id, shipment_id FROM delivery_times;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT delivery_id, delivery_time FROM delivery_times;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, estimated_delivery_time FROM delivery_times;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM shipments WHERE shipment_status='Delivered';",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM shipments WHERE delivery_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM shipments JOIN customers ON shipments.customer_id = customers.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM shipments JOIN delivery_times ON shipments.shipment_id = delivery_times.shipment_id;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipments.shipment_id, delivery_times.delivery_time FROM shipments JOIN delivery_times ON shipments.shipment_id = delivery_times.shipment_id;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, product_name, delivery_time FROM shipments JOIN customers ON shipments.customer_id = customers.customer_id JOIN delivery_times ON shipments.shipment_id = delivery_times.shipment_id;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipments.shipment_id, delivery_times.delivery_time, delivery_times.delivery_status FROM shipments JOIN delivery_times ON shipments.shipment_id = delivery_times.shipment_id WHERE delivery_times.delivery_status='In Transit';",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, delivery_time, estimated_delivery_time FROM shipments JOIN customers ON shipments.customer_id = customers.customer_id JOIN delivery_times ON shipments.shipment_id = delivery_times.shipment_id WHERE estimated_delivery_time < delivery_time;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, product_name, shipment_status, delivery_date FROM shipments JOIN customers ON shipments.customer_id = customers.customer_id WHERE shipment_status='Shipped';",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM shipments;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, customer_id, product_name FROM shipments WHERE shipment_status='Shipped';",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email, customer_phone FROM customers WHERE customer_id=123;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, delivery_date FROM shipments WHERE delivery_date>'2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, product_name, delivery_time FROM shipments INNER JOIN delivery_times ON shipments.shipment_id=delivery_times.shipment_id;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, product_name, delivery_time FROM customers INNER JOIN shipments ON customers.customer_id=shipments.customer_id INNER JOIN delivery_times ON shipments.shipment_id=delivery_times.shipment_id;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, customer_name, delivery_time FROM shipments INNER JOIN customers ON shipments.customer_id=customers.customer_id INNER JOIN delivery_times ON shipments.shipment_id=delivery_times.shipment_id;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT shipment_id, delivery_time, estimated_delivery_time FROM delivery_times WHERE delivery_status='In Transit';",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, product_name, delivery_status FROM customers INNER JOIN shipments ON customers.customer_id=shipments.customer_id INNER JOIN delivery_times ON shipments.shipment_id=delivery_times.shipment_id WHERE delivery_status='Delayed';",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, s.product_name, dt.delivery_time FROM customers c INNER JOIN shipments s ON c.customer_id=s.customer_id INNER JOIN delivery_times dt ON s.shipment_id=dt.shipment_id WHERE dt.delivery_status='Delivered';",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT s.shipment_id, s.product_name, dt.delivery_time FROM shipments s INNER JOIN delivery_times dt ON s.shipment_id=dt.shipment_id WHERE dt.estimated_delivery_time>'2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, s.product_name, dt.estimated_delivery_time FROM customers c INNER JOIN shipments s ON c.customer_id=s.customer_id INNER JOIN delivery_times dt ON s.shipment_id=dt.shipment_id WHERE c.customer_name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT s.shipment_id, s.product_name, dt.delivery_time FROM shipments s LEFT JOIN delivery_times dt ON s.shipment_id=dt.shipment_id WHERE dt.delivery_time IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, s.product_name, dt.delivery_time FROM customers c RIGHT JOIN shipments s ON c.customer_id=s.customer_id LEFT JOIN delivery_times dt ON s.shipment_id=dt.shipment_id WHERE s.shipment_id<100;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, COUNT(s.shipment_id) AS total_shipments FROM customers c LEFT JOIN shipments s ON c.customer_id=s.customer_id GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, COUNT(s.shipment_id) AS total_shipments FROM customers c LEFT JOIN shipments s ON c.customer_id=s.customer_id WHERE s.delivery_date>'2022-07-01' GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(DATEDIFF(dt.delivery_time, dt.estimated_delivery_time)) AS avg_delay FROM customers c INNER JOIN shipments s ON c.customer_id=s.customer_id INNER JOIN delivery_times dt ON s.shipment_id=dt.shipment_id GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, MAX(DATEDIFF(dt.delivery_time, dt.estimated_delivery_time)) AS max_delay FROM customers c INNER JOIN shipments s ON c.customer_id=s.customer_id INNER JOIN delivery_times dt ON s.shipment_id=dt.shipment_id GROUP BY c.customer_name HAVING max_delay > 5;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, MIN(DATEDIFF(dt.delivery_time, dt.estimated_delivery_time)) AS min_delay FROM customers c INNER JOIN shipments s ON c.customer_id=s.customer_id INNER JOIN delivery_times dt ON s.shipment_id=dt.shipment_id GROUP BY c.customer_name HAVING min_delay < 0;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n    shipment_id INT PRIMARY KEY,\n    customer_id INT,\n    product_name VARCHAR(255),\n    shipment_status VARCHAR(50),\n    delivery_date DATE\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE delivery_times (\n    delivery_id INT PRIMARY KEY,\n    shipment_id INT,\n    delivery_time TIMESTAMP,\n    estimated_delivery_time TIMESTAMP,\n    delivery_status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, s.product_name, COUNT(dt.delivery_id) AS total_deliveries FROM customers c INNER JOIN shipments s ON c.customer_id=s.customer_id INNER JOIN delivery_times dt ON s.shipment_id=dt.shipment_id WHERE dt.delivery_status='Delivered' GROUP BY c.customer_name, s.product_name;",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT * FROM shipments;",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipment_id, status FROM shipments;",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipment_id, status, delivery_time FROM shipments WHERE status='Delivered';",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT tracking_number FROM shipments WHERE status='In Progress';",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT product_id, product_name FROM products;",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT * FROM warehouses;",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT warehouse_id, location FROM warehouses WHERE capacity > 100;",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT * FROM deliveries;",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT delivery_id, shipment_id, product_id, warehouse_id FROM deliveries;",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT delivery_id, delivery_time FROM deliveries WHERE warehouse_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipment_id, tracking_number, status FROM shipments WHERE status='Delayed';",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT product_name, weight FROM products WHERE category='Electronics';",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT * FROM shipments WHERE delivery_time > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT warehouse_id, manager_name FROM warehouses WHERE manager_name IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipment_id, status, delivery_time FROM shipments ORDER BY delivery_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT product_id, product_name, weight FROM products WHERE weight < 5;",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT * FROM deliveries WHERE delivery_time BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipment_id, tracking_number, status FROM shipments WHERE status='Shipped' OR status='Out for Delivery';",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE category IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT warehouse_id, location, capacity FROM warehouses WHERE location LIKE '%New York%';",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT * FROM shipments INNER JOIN deliveries ON shipments.shipment_id = deliveries.shipment_id",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipments.tracking_number, shipments.status, products.product_name FROM shipments INNER JOIN deliveries ON shipments.shipment_id = deliveries.shipment_id INNER JOIN products ON deliveries.product_id = products.product_id",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipments.shipment_id, shipments.status, deliveries.delivery_time FROM shipments INNER JOIN deliveries ON shipments.shipment_id = deliveries.shipment_id WHERE deliveries.warehouse_id = 1",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM shipments",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT warehouse_id, location, COUNT(*) AS num_deliveries FROM warehouses INNER JOIN deliveries ON warehouses.warehouse_id = deliveries.warehouse_id GROUP BY warehouse_id, location ORDER BY num_deliveries DESC",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT products.product_name, SUM(products.weight) AS total_weight FROM products INNER JOIN deliveries ON products.product_id = deliveries.product_id GROUP BY products.product_name",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT DISTINCT location FROM warehouses",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipment_id, tracking_number, delivery_time FROM shipments WHERE status = 'delivered' ORDER BY delivery_time DESC",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT DISTINCT category FROM products",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS num_deliveries, warehouse_id FROM deliveries GROUP BY warehouse_id HAVING num_deliveries > 10",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT MAX(weight) AS max_weight FROM products",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT product_name, SUM(weight) AS total_weight FROM products GROUP BY product_name HAVING total_weight > 100",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT AVG(capacity) AS avg_capacity FROM warehouses",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT * FROM shipments WHERE delivery_time > '2022-01-01' AND delivery_time < '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT products.product_name, deliveries.delivery_time FROM products INNER JOIN deliveries ON products.product_id = deliveries.product_id WHERE products.category = 'electronics'",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS num_deliveries, warehouse_id FROM deliveries GROUP BY warehouse_id HAVING num_deliveries < 5",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipments.status, COUNT(*) AS num_shipments FROM shipments INNER JOIN deliveries ON shipments.shipment_id = deliveries.shipment_id GROUP BY shipments.status ORDER BY num_shipments DESC",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT DISTINCT manager_name FROM warehouses",
  "### TABLEDATA\n\nCREATE TABLE shipments ( \n    shipment_id INT PRIMARY KEY, \n    tracking_number VARCHAR(50) NOT NULL, \n    status VARCHAR(20) NOT NULL, \n    delivery_time TIMESTAMP \n);\n\nCREATE TABLE products ( \n    product_id INT PRIMARY KEY, \n    product_name VARCHAR(50) NOT NULL, \n    weight DECIMAL(10, 2) NOT NULL, \n    category VARCHAR(50) \n);\n\nCREATE TABLE warehouses ( \n    warehouse_id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL, \n    capacity INT NOT NULL, \n    manager_name VARCHAR(50) \n);\n\nCREATE TABLE deliveries ( \n    delivery_id INT PRIMARY KEY, \n    shipment_id INT REFERENCES shipments(shipment_id), \n    product_id INT REFERENCES products(product_id), \n    warehouse_id INT REFERENCES warehouses(warehouse_id), \n    delivery_time TIMESTAMP \n);\n\n### STATEMENT\n\nSELECT shipments.status, AVG(products.weight) AS avg_weight FROM shipments INNER JOIN deliveries ON shipments.shipment_id = deliveries.shipment_id INNER JOIN products ON deliveries.product_id = products.product_id GROUP BY shipments.status",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT * FROM shipments",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT shipment_id, tracking_number, delivery_status, delivery_time FROM shipments",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT * FROM products",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT product_id, product_name, weight, price FROM products",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT * FROM warehouses",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT warehouse_id, location, capacity FROM warehouses",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT * FROM carriers",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT carrier_id, carrier_name, contact_person, contact_number FROM carriers",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT * FROM shipping_routes",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT route_id, start_location, end_location, distance, estimated_delivery_time FROM shipping_routes",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT shipment_id, tracking_number, delivery_status, delivery_time FROM shipments WHERE shipment_id = 1",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT product_id, product_name, weight, price FROM products WHERE weight > 1.0",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT warehouse_id, location, capacity FROM warehouses WHERE capacity >= 100",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT carrier_id, carrier_name, contact_person, contact_number FROM carriers WHERE carrier_name LIKE '%Express%'",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT start_location, end_location, distance, estimated_delivery_time FROM shipping_routes WHERE distance < 500",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT * FROM shipments ORDER BY delivery_time DESC",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT * FROM products ORDER BY price ASC",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT * FROM warehouses ORDER BY location ASC",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT * FROM carriers ORDER BY carrier_name DESC",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT * FROM shipping_routes ORDER BY estimated_delivery_time ASC LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT AVG(weight) AS average_weight FROM products",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT * FROM shipments;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT shipment_id, tracking_number, delivery_status FROM shipments WHERE delivery_status = 'DELIVERED';",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT delivery_time, shipment_id FROM shipments ORDER BY delivery_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_shipments FROM shipments;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_products FROM products WHERE weight > 10;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT product_name, price FROM products WHERE price BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT * FROM warehouses WHERE capacity > 1000;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT warehouse_id, location, capacity FROM warehouses WHERE location LIKE '%City';",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT * FROM carriers WHERE carrier_name LIKE 'ABC%';",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT carrier_name, contact_person FROM carriers WHERE contact_number LIKE '%123%';",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT * FROM shipping_routes WHERE distance > 500;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT route_id, start_location, end_location FROM shipping_routes WHERE estimated_delivery_time < 24;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT * FROM shipments s INNER JOIN products p ON s.shipment_id = p.product_id;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT p.product_name, w.location FROM products p JOIN warehouses w ON p.product_id = w.warehouse_id;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT c.carrier_name, sr.start_location, sr.end_location FROM carriers c JOIN shipping_routes sr ON c.carrier_id = sr.route_id;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT s.delivery_status, p.product_name, w.capacity FROM shipments s JOIN products p ON s.shipment_id = p.product_id JOIN warehouses w ON p.product_id = w.warehouse_id;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT w.location, sr.start_location, sr.end_location, sr.distance FROM warehouses w JOIN shipping_routes sr ON w.warehouse_id = sr.route_id WHERE sr.distance > 1000;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT s.shipment_id, p.product_name, w.location, c.carrier_name, sr.distance FROM shipments s JOIN products p ON s.shipment_id = p.product_id JOIN warehouses w ON p.product_id = w.warehouse_id JOIN carriers c ON w.warehouse_id = c.carrier_id JOIN shipping_routes sr ON c.carrier_id = sr.route_id;",
  "### TABLEDATA\n\nCREATE TABLE shipments (\n  shipment_id INT PRIMARY KEY,\n  tracking_number VARCHAR(10) UNIQUE,\n  delivery_status VARCHAR(20),\n  delivery_time TIMESTAMP\n)\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(50),\n  weight FLOAT,\n  price DECIMAL(10, 2)\n)\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  location VARCHAR(100),\n  capacity INT\n)\n\nCREATE TABLE carriers (\n  carrier_id INT PRIMARY KEY,\n  carrier_name VARCHAR(50),\n  contact_person VARCHAR(50),\n  contact_number VARCHAR(15)\n)\n\nCREATE TABLE shipping_routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(100),\n  end_location VARCHAR(100),\n  distance FLOAT,\n  estimated_delivery_time INT\n)\n\n### STATEMENT\n\nSELECT s.delivery_time, p.product_name, w.capacity, c.carrier_name, sr.estimated_delivery_time FROM shipments s JOIN products p ON s.shipment_id = p.product_id JOIN warehouses w ON p.product_id = w.warehouse_id JOIN carriers c ON w.warehouse_id = c.carrier_id JOIN shipping_routes sr ON c.carrier_id = sr.route_id WHERE s.delivery_time > '2022-01-01';"
]