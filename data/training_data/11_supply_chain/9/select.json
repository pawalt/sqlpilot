[
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM ProductReturns;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT return_id, product_name FROM ProductReturns;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT return_id, product_name, return_reason FROM ProductReturns;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT return_id, product_name, return_date FROM ProductReturns;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM ProductReturns WHERE return_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM ProductReturns WHERE product_name = 'example_product';",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM ProductReturns WHERE return_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM ProductReturns;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT MAX(return_id) FROM ProductReturns;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT AVG(return_id) FROM ProductReturns;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT MIN(return_id) FROM ProductReturns;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT DISTINCT product_name FROM ProductReturns;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM ProductReturns ORDER BY return_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM ProductReturns WHERE return_reason LIKE '%damage%';",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM ProductReturns WHERE return_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM ProductReturns WHERE product_name IN ('product1', 'product2');",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM ProductReturns WHERE return_reason IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM ProductReturns WHERE return_date > '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, COUNT(*) FROM ProductReturns GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, AVG(return_id) FROM ProductReturns GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM ProductReturns WHERE return_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, return_date FROM ProductReturns WHERE return_reason LIKE 'Damaged%';",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM ProductReturns;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT DISTINCT product_name FROM ProductReturns;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM ProductReturns ORDER BY return_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT AVG(return_id) FROM ProductReturns;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, return_date FROM ProductReturns WHERE return_date BETWEEN '2022-01-01' AND '2022-03-31';",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, return_date FROM ProductReturns WHERE return_reason LIKE '%late%' AND return_id > 5;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM ProductReturns WHERE return_reason IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT product_name) FROM ProductReturns;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT return_id, product_name FROM ProductReturns WHERE return_reason IN ('Damaged', 'Defective');",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, return_date FROM ProductReturns WHERE return_date > CURDATE();",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM ProductReturns WHERE return_id BETWEEN 1 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT AVG(return_id) AS avg_return_id, MAX(return_id) AS max_return_id FROM ProductReturns;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, COUNT(*) AS total_returns FROM ProductReturns GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM ProductReturns WHERE return_id = (SELECT MAX(return_id) FROM ProductReturns);",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT return_id, product_name, return_date FROM ProductReturns WHERE product_name LIKE '%keyboard%' OR return_reason LIKE '%faulty%';",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, DATE_FORMAT(return_date, '%Y-%m-%d') AS formatted_date FROM ProductReturns;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, return_date, DATEDIFF(CURDATE(), return_date) AS days_since_return FROM ProductReturns;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns (\n  return_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  return_reason TEXT,\n  return_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, MONTH(return_date) AS return_month FROM ProductReturns GROUP BY return_month;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM ProductReturns;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT return_id, product_id FROM ProductReturns;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT return_id, return_date FROM ProductReturns WHERE product_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT return_id, product_id, return_reason FROM ProductReturns WHERE return_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT return_id, product_id, return_date, return_reason FROM ProductReturns ORDER BY return_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM ProductReturns;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT analysis_id, return_id, analysis_date, analysis_result FROM ReturnAnalysis;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT analysis_id, analysis_date FROM ReturnAnalysis;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT analysis_id, analysis_result FROM ReturnAnalysis WHERE return_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT analysis_id, return_id, analysis_result FROM ReturnAnalysis WHERE analysis_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT analysis_id, return_id, analysis_date, analysis_result FROM ReturnAnalysis ORDER BY analysis_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM ReturnAnalysis;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT product_id, return_reason FROM ProductReturns WHERE return_reason LIKE '%defective%';",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT product_id, return_date FROM ProductReturns WHERE product_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT return_id, product_id, return_reason FROM ProductReturns WHERE return_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT analysis_id, analysis_result FROM ReturnAnalysis WHERE analysis_result = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT analysis_id, return_id, analysis_date, analysis_result FROM ReturnAnalysis LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT return_id, product_id, return_reason FROM ProductReturns WHERE product_id = 1 AND return_reason = 'damaged';",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT return_id, product_id, return_date, return_reason FROM ProductReturns WHERE return_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT analysis_id, return_id, analysis_result FROM ReturnAnalysis WHERE analysis_result = 'rejected';",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM ProductReturns WHERE return_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT return_id, product_id, return_date FROM ProductReturns WHERE return_reason LIKE '%defective%';",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM ProductReturns WHERE return_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT analysis_id, analysis_date FROM ReturnAnalysis WHERE analysis_date > '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT r.return_id, r.product_id, ra.analysis_result FROM ProductReturns r JOIN ReturnAnalysis ra ON r.return_id = ra.return_id;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT r.return_id, r.return_reason, ra.analysis_result FROM ProductReturns r LEFT JOIN ReturnAnalysis ra ON r.return_id = ra.return_id;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS TotalReturns FROM ProductReturns;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(product_id) AS AverageProductID FROM ProductReturns;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(return_date) AS LatestReturnDate FROM ProductReturns;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT MIN(analysis_date) AS EarliestAnalysisDate FROM ReturnAnalysis;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT return_reason FROM ProductReturns;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT return_reason) AS UniqueReturnReasons FROM ProductReturns;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT return_id, COUNT(*) AS AnalysisCount FROM ReturnAnalysis GROUP BY return_id;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT return_id, COUNT(*) AS AnalysisCount FROM ReturnAnalysis GROUP BY return_id HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT return_id, AVG(analysis_date) AS AverageAnalysisDate FROM ReturnAnalysis GROUP BY return_id;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT YEAR(return_date) AS ReturnYear, COUNT(*) AS ReturnCount FROM ProductReturns GROUP BY YEAR(return_date);",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT MONTH(return_date) AS ReturnMonth, COUNT(*) AS ReturnCount FROM ProductReturns GROUP BY MONTH(return_date);",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT analysis_result, COUNT(*) AS ResultCount FROM ReturnAnalysis GROUP BY analysis_result ORDER BY ResultCount DESC;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM ProductReturns ORDER BY return_date DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE ProductReturns(\n    return_id INT PRIMARY KEY,\n    product_id INT,\n    return_date DATE,\n    return_reason TEXT\n);\n\nCREATE TABLE ReturnAnalysis(\n    analysis_id INT PRIMARY KEY,\n    return_id INT,\n    analysis_date DATE,\n    analysis_result TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM ReturnAnalysis ORDER BY analysis_date ASC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM product_returns;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT return_id, product_name FROM product_returns WHERE customer_id = '123';",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM product_returns WHERE return_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT analysis_id, analysis_result FROM return_analysis;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT analysis_id, analysis_result FROM return_analysis WHERE analysis_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM return_analysis INNER JOIN quality_improvement ON return_analysis.analysis_id = quality_improvement.analysis_id;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM return_analysis LEFT JOIN quality_improvement ON return_analysis.analysis_id = quality_improvement.analysis_id;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM quality_improvement WHERE implementation_date < '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT product_name FROM product_returns;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT analysis_result FROM return_analysis WHERE return_id = '456';",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, return_reason FROM product_returns WHERE customer_id = '789';",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT improvement_id, improvement_plan FROM quality_improvement;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, return_date FROM product_returns ORDER BY return_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_returns FROM product_returns;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(DATE_PART('day', return_date - CURRENT_DATE)) AS avg_return_time FROM product_returns;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT return_id, product_name, return_reason FROM product_returns WHERE customer_id = '234' AND return_date >= '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, COUNT(*) AS total_returns FROM product_returns GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT return_id, analysis_result, implementation_date FROM return_analysis INNER JOIN quality_improvement ON return_analysis.analysis_id = quality_improvement.analysis_id WHERE implementation_date < '2023-03-01';",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT return_id, return_reason, return_date FROM product_returns WHERE product_name LIKE '%damaged%';",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, AVG(DATE_PART('day', return_date - CURRENT_DATE)) AS avg_return_time FROM product_returns GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM product_returns JOIN return_analysis USING (return_id) JOIN quality_improvement USING (analysis_id) WHERE product_name LIKE 'Apple%'",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT return_id, product_name, return_reason, return_date, customer_id FROM product_returns WHERE customer_id = '123456'",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT analysis_id, analysis_result, analysis_date FROM return_analysis WHERE analysis_date > '2022-01-01' ORDER BY analysis_date DESC",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT improvement_id, improvement_plan, implementation_date FROM quality_improvement WHERE implementation_date IS NULL",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM product_returns WHERE return_date > '2022-01-01' AND return_reason LIKE '%damaged%'",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, COUNT(return_id) AS return_count FROM product_returns GROUP BY product_name HAVING return_count > 5",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(return_id) AS return_count FROM product_returns GROUP BY customer_id HAVING return_count > 3",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT return_id, product_name, analysis_result, analysis_date FROM product_returns JOIN return_analysis USING (return_id)",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, return_date, analysis_result, implementation_date FROM product_returns JOIN return_analysis USING (return_id) JOIN quality_improvement USING (analysis_id)",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM product_returns JOIN quality_improvement USING (improvement_id) WHERE implementation_date < '2023-01-01'",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM return_analysis JOIN quality_improvement USING (analysis_id) WHERE improvement_plan LIKE '%improve%'",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, return_reason, analysis_result, improvement_plan FROM product_returns JOIN return_analysis USING (return_id) JOIN quality_improvement USING (analysis_id)",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, return_reason, analysis_result, implementation_date FROM product_returns JOIN return_analysis USING (return_id) JOIN quality_improvement USING (analysis_id) WHERE product_name = 'Shoes'",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM product_returns WHERE customer_id IN ('987654', '654321')",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM product_returns WHERE return_date BETWEEN '2022-01-01' AND '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, COUNT(DISTINCT customer_id) AS unique_customers FROM product_returns GROUP BY product_name HAVING unique_customers > 10",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(return_date) AS avg_return_date FROM product_returns",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, MAX(return_date) AS latest_return_date FROM product_returns GROUP BY product_name ORDER BY latest_return_date DESC",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, MIN(return_date) AS earliest_return_date FROM product_returns GROUP BY product_name ORDER BY earliest_return_date ASC",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, AVG(DATE_PART('day', return_date - implementation_date)) AS avg_processing_time FROM product_returns JOIN quality_improvement USING (analysis_id)",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n  return_id UUID PRIMARY KEY,\n  product_name VARCHAR(50),\n  return_reason TEXT,\n  return_date TIMESTAMP,\n  customer_id UUID\n);\n\nCREATE TABLE return_analysis (\n  analysis_id UUID PRIMARY KEY,\n  return_id UUID,\n  analysis_result TEXT,\n  analysis_date TIMESTAMP\n);\n\nCREATE TABLE quality_improvement (\n  improvement_id UUID PRIMARY KEY,\n  analysis_id UUID,\n  improvement_plan TEXT,\n  implementation_date TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, COUNT(*) FILTER (WHERE return_reason='damaged') AS damaged_returns, COUNT(*) FILTER (WHERE return_reason='wrong_item') AS wrong_item_returns, COUNT(*) FILTER (WHERE return_reason='late_delivery') AS late_delivery_returns FROM product_returns GROUP BY product_name",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM products_returns;",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT product_id, return_reason FROM products_returns WHERE return_quantity > 10;",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT product_id, return_reason FROM products_returns WHERE return_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM product_details;",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM product_details WHERE category = 'Electronics';",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, total_quantity FROM product_details ORDER BY total_quantity DESC;",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM return_analysis;",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT return_id, analysis_result FROM return_analysis WHERE analysis_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT return_id, return_reason FROM return_analysis WHERE analysis_result = 'Faulty';",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM quality_improvement;",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT improvement_id, improvement_description FROM quality_improvement WHERE improvement_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT analysis_id, improvement_description FROM quality_improvement WHERE improvement_description LIKE '%improve%';",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT products_returns.return_id, products_returns.product_id, product_details.product_name FROM products_returns JOIN product_details ON products_returns.product_id = product_details.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT products_returns.return_id, products_returns.return_date, return_analysis.analysis_result FROM products_returns JOIN return_analysis ON products_returns.return_id = return_analysis.return_id;",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT product_details.product_name, return_analysis.analysis_result, quality_improvement.improvement_description FROM product_details JOIN return_analysis ON product_details.product_id = return_analysis.return_id JOIN quality_improvement ON return_analysis.analysis_id = quality_improvement.analysis_id;",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM products_returns UNION ALL SELECT * FROM return_analysis;",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT product_id, category, unit_price, total_quantity FROM product_details WHERE total_quantity BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT return_id, return_reason FROM products_returns WHERE return_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT product_id, total_quantity FROM product_details WHERE category = 'Clothing' OR category = 'Accessories';",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_returns FROM products_returns;",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM products_returns;",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT product_id, return_reason FROM products_returns WHERE return_quantity > 10;",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, category FROM product_details WHERE unit_price > 50;",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM products_returns pr JOIN product_details pd ON pr.product_id = pd.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM products_returns pr JOIN product_details pd ON pr.product_id = pd.product_id WHERE pr.return_quantity > pd.total_quantity;",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT analysis_result FROM return_analysis ra JOIN quality_improvement qi ON ra.analysis_id = qi.analysis_id WHERE ra.return_reason = 'Damaged';",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, return_quantity FROM products_returns pr JOIN product_details pd ON pr.product_id = pd.product_id WHERE pr.return_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT MAX(return_quantity) AS max_quantity FROM products_returns;",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(return_quantity) AS total_returns FROM products_returns pr JOIN product_details pd ON pr.product_id = pd.product_id GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT return_reason FROM products_returns;",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM return_analysis WHERE analysis_date < '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, category, unit_price, total_quantity FROM product_details WHERE category = 'Electronics';",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(return_quantity) AS avg_quantity FROM products_returns;",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, return_date FROM products_returns WHERE return_quantity = (SELECT MAX(return_quantity) FROM products_returns);",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, count(*) AS total_returns FROM products_returns pr JOIN product_details pd ON pr.product_id = pd.product_id GROUP BY product_name HAVING total_returns > 5;",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, category FROM product_details UNION SELECT product_name, return_reason FROM products_returns;",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, category FROM product_details WHERE EXISTS (SELECT * FROM products_returns pr WHERE pr.product_id = product_details.product_id);",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, category FROM product_details WHERE NOT EXISTS (SELECT * FROM products_returns pr WHERE pr.product_id = product_details.product_id);",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, category FROM product_details WHERE NOT EXISTS (SELECT * FROM products_returns pr WHERE pr.product_id = product_details.product_id AND pr.return_date > '2022-09-30');",
  "### TABLEDATA\n\nCREATE TABLE products_returns (\n    return_id SERIAL PRIMARY KEY,\n    product_id INT NOT NULL,\n    return_reason TEXT,\n    return_date DATE,\n    return_quantity INT\n);\n\nCREATE TABLE product_details (\n    product_id SERIAL PRIMARY KEY,\n    product_name TEXT,\n    category TEXT,\n    unit_price DECIMAL,\n    total_quantity INT\n);\n\nCREATE TABLE return_analysis (\n    analysis_id SERIAL PRIMARY KEY,\n    return_id INT,\n    return_reason TEXT,\n    analysis_result TEXT,\n    analysis_date DATE\n);\n\nCREATE TABLE quality_improvement (\n    improvement_id SERIAL PRIMARY KEY,\n    analysis_id INT,\n    improvement_description TEXT,\n    improvement_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, category FROM product_details WHERE unit_price = (SELECT MAX(unit_price) FROM product_details);",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM product_returns;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT product_name, return_reason FROM product_returns;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT return_date FROM product_returns WHERE product_name = 'example';",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM return_customers;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM return_customers;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_phone FROM return_customers WHERE customer_name = 'example';",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM return_locations;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT location_name, location_address FROM return_locations;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT location_manager FROM return_locations WHERE location_name = 'example';",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM return_analysis;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT analysis_date, analyst_name FROM return_analysis;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT analysis_result FROM return_analysis WHERE analysis_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM return_statistics;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT total_returns, return_rate FROM return_statistics;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT total_returns FROM return_statistics WHERE return_rate > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT product_name, return_reason, customer_name FROM product_returns INNER JOIN return_customers ON product_returns.return_id = return_customers.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT location_name, location_manager, analysis_result FROM return_locations INNER JOIN return_analysis ON return_locations.location_id = return_analysis.return_id;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email, total_returns FROM return_customers INNER JOIN return_statistics ON return_customers.customer_id = return_statistics.statistics_id;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT product_name, return_reason FROM product_returns WHERE return_id IN (SELECT analysis_id FROM return_analysis WHERE analysis_result = 'positive');",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT location_name, location_address FROM return_locations WHERE location_manager = (SELECT analyst_name FROM return_analysis WHERE analysis_result = 'negative');",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT product_name, return_reason FROM product_returns WHERE return_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email, customer_phone FROM return_customers WHERE customer_name LIKE '%John%' AND customer_phone IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT location_name, location_address FROM return_locations WHERE location_manager = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT analysis_date, analyst_name FROM return_analysis WHERE analysis_date BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT analysis_result FROM return_analysis WHERE analysis_result LIKE '%defective%' OR analysis_result LIKE '%damaged%';",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT total_returns, return_rate FROM return_statistics WHERE total_returns > 100 AND return_rate > 0.05;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT product_name, return_reason, return_date FROM product_returns JOIN return_analysis ON product_returns.return_id = return_analysis.return_id WHERE return_analysis.analyst_name = 'Bob';",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email, location_name FROM return_customers JOIN return_locations ON return_customers.customer_id = return_locations.location_id;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT analysis_date, analysis_result, total_returns FROM return_analysis JOIN return_statistics ON return_analysis.analysis_id = return_statistics.analysis_id WHERE return_statistics.total_returns < 50;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email, location_name FROM return_customers JOIN return_locations ON return_customers.customer_id = return_locations.location_id WHERE location_address LIKE '%Main Street%';",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT analysis_date, analyst_name, total_returns FROM return_analysis JOIN return_statistics ON return_analysis.analysis_id = return_statistics.analysis_id WHERE return_statistics.return_rate < 0.1;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_phone, total_returns FROM return_customers JOIN return_statistics ON return_customers.customer_id = return_statistics.statistics_id WHERE return_statistics.total_returns > 200;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT product_name, return_reason, analysis_date, analyst_name FROM product_returns JOIN return_analysis ON product_returns.return_id = return_analysis.return_id WHERE analysis_result = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_name, location_name, analysis_date, analysis_result FROM return_customers JOIN return_locations ON return_customers.customer_id = return_locations.location_id JOIN return_analysis ON return_locations.location_id = return_analysis.analysis_id WHERE analysis_date > '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_name, location_name, analysis_result, total_returns FROM return_customers JOIN return_locations ON return_customers.customer_id = return_locations.location_id JOIN return_analysis ON return_analysis.analysis_id = return_analysis.statistics_id WHERE total_returns > 100;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_email, location_address, total_returns, return_rate FROM return_customers JOIN return_locations ON return_customers.customer_id = return_locations.location_id JOIN return_statistics ON return_locations.location_id = return_statistics.analysis_id WHERE location_manager = 'David';",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT analysis_date, analyst_name, return_rate FROM return_analysis JOIN return_statistics ON return_analysis.analysis_id = return_statistics.analysis_id WHERE analyst_name = 'Eve';",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT product_name, return_reason, total_returns, return_rate FROM product_returns JOIN return_statistics ON product_returns.return_id = return_statistics.analysis_id WHERE product_name LIKE '%phone%' AND total_returns > 50;",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email, return_date, analysis_result FROM return_customers JOIN return_analysis ON return_customers.customer_id = return_analysis.return_id WHERE return_date < '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_phone, analysis_date, analysis_result FROM return_customers JOIN return_analysis ON return_customers.customer_id = return_analysis.return_id WHERE return_date > '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE product_returns (\n    return_id UUID PRIMARY KEY,\n    product_name VARCHAR(255),\n    return_reason TEXT,\n    return_date TIMESTAMP\n);\n\nCREATE TABLE return_customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(15)\n);\n\nCREATE TABLE return_locations (\n    location_id UUID PRIMARY KEY,\n    location_name VARCHAR(255),\n    location_address TEXT,\n    location_manager VARCHAR(255)\n);\n\nCREATE TABLE return_analysis (\n    analysis_id UUID PRIMARY KEY,\n    return_id UUID,\n    analysis_date TIMESTAMP,\n    analyst_name VARCHAR(255),\n    analysis_result TEXT\n);\n\nCREATE TABLE return_statistics (\n    statistics_id UUID PRIMARY KEY,\n    analysis_id UUID,\n    total_returns INT,\n    return_rate FLOAT\n);\n\n### STATEMENT\n\nSELECT customer_name, return_reason, analysis_date, analysis_result FROM return_customers JOIN return_analysis ON return_customers.customer_id = return_analysis.return_id WHERE analysis_result = 'rejected';"
]