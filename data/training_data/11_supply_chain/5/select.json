[
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT * FROM total_landed_cost;",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT sku, cost FROM total_landed_cost;",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT * FROM total_landed_cost WHERE sku = '123';",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT * FROM total_landed_cost ORDER BY cost DESC;",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT SUM(cost) AS total_cost FROM total_landed_cost;",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT DISTINCT supplier FROM total_landed_cost;",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT * FROM total_landed_cost LIMIT 10;",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT * FROM total_landed_cost WHERE cost > 100;",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT * FROM total_landed_cost WHERE supplier = 'ABC';",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT sku, SUM(cost) AS total_cost FROM total_landed_cost GROUP BY sku;",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT supplier, AVG(cost) AS avg_cost FROM total_landed_cost GROUP BY supplier;",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT * FROM total_landed_cost WHERE cost BETWEEN 50 AND 100;",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_records FROM total_landed_cost;",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT * FROM total_landed_cost WHERE supplier LIKE 'A%';",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT sku, MAX(cost) AS max_cost FROM total_landed_cost GROUP BY sku;",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT * FROM total_landed_cost WHERE cost < 50;",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT supplier, COUNT(*) AS total_records FROM total_landed_cost GROUP BY supplier;",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT * FROM total_landed_cost WHERE sku IN ('123', '456', '789');",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT * FROM total_landed_cost WHERE supplier = 'XYZ' AND cost > 200;",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT * FROM total_landed_cost WHERE supplier = 'PQR' OR cost < 75;",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT * FROM total_landed_cost WHERE supplier_id = 1 AND cost > 1000 ORDER BY date DESC LIMIT 5",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT supplier_id, SUM(cost) AS total_cost FROM total_landed_cost GROUP BY supplier_id HAVING total_cost > 5000",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT * FROM total_landed_cost WHERE date BETWEEN '2021-01-01' AND '2021-12-31'",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT DISTINCT supplier_id FROM total_landed_cost WHERE total_cost > 10000",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT supplier_id, COUNT(DISTINCT product_id) AS unique_products FROM total_landed_cost GROUP BY supplier_id",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT * FROM total_landed_cost WHERE product_id IN (SELECT product_id FROM products WHERE category = 'Electronics')",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT * FROM total_landed_cost JOIN suppliers ON total_landed_cost.supplier_id = suppliers.id",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT supplier_id, MAX(cost) AS max_cost FROM total_landed_cost GROUP BY supplier_id",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT * FROM total_landed_cost WHERE supplier_id = (SELECT id FROM suppliers WHERE name = 'SupplierA')",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT product_id, SUM(cost) AS total_cost FROM total_landed_cost GROUP BY product_id ORDER BY total_cost DESC LIMIT 10",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT supplier_id, AVG(cost) AS average_cost FROM total_landed_cost GROUP BY supplier_id HAVING average_cost > 500",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_records FROM total_landed_cost",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT supplier_id FROM total_landed_cost WHERE cost = (SELECT MAX(cost) FROM total_landed_cost)",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT supplier_id, AVG(cost) AS average_cost FROM total_landed_cost GROUP BY supplier_id ORDER BY average_cost DESC",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT * FROM total_landed_cost WHERE supplier_id = 1 OR supplier_id = 2",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT supplier_id, COUNT(DISTINCT product_id) AS unique_products FROM total_landed_cost GROUP BY supplier_id HAVING unique_products > 5",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT supplier_id, MIN(cost) AS min_cost FROM total_landed_cost GROUP BY supplier_id HAVING min_cost < 500",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT * FROM total_landed_cost WHERE cost = (SELECT MIN(cost) FROM total_landed_cost)",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT * FROM total_landed_cost WHERE supplier_id IN (SELECT id FROM suppliers WHERE country = 'USA')",
  "### TABLEDATA\n\ntotal_landed_cost\n\n### STATEMENT\n\nSELECT supplier_id, COUNT(*) AS total_records FROM total_landed_cost GROUP BY supplier_id HAVING total_records > 10",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT * FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, product_price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT * FROM costs;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT shipping_cost, customs_cost FROM costs;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT products.product_name, costs.shipping_cost FROM products JOIN costs ON products.product_id = costs.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE product_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name FROM products WHERE product_price > 50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, shipping_cost FROM products JOIN costs ON products.product_id = costs.product_id WHERE products.product_price < 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT SUM(product_price) AS total_price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT AVG(customs_cost) AS avg_customs_cost FROM costs;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT MAX(product_price) AS max_price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT MIN(shipping_cost) AS min_shipping_cost FROM costs;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_products FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, product_price FROM products ORDER BY product_price DESC;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, product_price FROM products ORDER BY product_price ASC;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, product_price FROM products LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, product_price FROM products OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, product_price FROM products LIMIT 5 OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, product_price FROM products WHERE product_name LIKE '%shirt%';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, product_price FROM products WHERE product_name = 'Shoes';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE product_price > 100",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, product_price FROM products WHERE product_id = 5",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, product_price, shipping_cost, customs_cost FROM products JOIN costs ON products.product_id = costs.product_id",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT AVG(product_price) AS average_price FROM products",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(shipping_cost) AS total_shipping_cost FROM products JOIN costs ON products.product_id = costs.product_id GROUP BY product_id",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, product_price * 1.1 AS price_with_tax FROM products",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(shipping_cost) + SUM(customs_cost) AS total_costs FROM products JOIN costs ON products.product_id = costs.product_id",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, AVG(product_price) AS average_price FROM products GROUP BY product_name",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, MAX(product_price) AS highest_price FROM products",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, MIN(product_price) AS lowest_price FROM products",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT * FROM products ORDER BY product_price DESC",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(shipping_cost + customs_cost) AS total_costs FROM costs GROUP BY product_id HAVING total_costs > 200",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT * FROM products JOIN costs USING(product_id)",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, AVG(shipping_cost) AS average_shipping_cost FROM costs GROUP BY product_id",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, COUNT(*) AS total_records FROM products",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, STDDEV(product_price) AS standard_deviation FROM products",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, shipping_cost * 0.2 AS tax_cost FROM products JOIN costs ON products.product_id = costs.product_id",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, product_price, shipping_cost, customs_cost, shipping_cost + customs_cost AS total_cost FROM products JOIN costs ON products.product_id = costs.product_id",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, RANK() OVER (ORDER BY product_price DESC) AS price_rank FROM products",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    product_price DECIMAL(10, 2)\n);\n\nCREATE TABLE costs (\n    cost_id INT PRIMARY KEY,\n    product_id INT,\n    shipping_cost DECIMAL(10, 2),\n    customs_cost DECIMAL(10, 2),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nSELECT product_name, product_price FROM products WHERE product_name LIKE 'A%'",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT product_id, product_name FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT product_id, unit_price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM shipping;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT shipping_id, shipping_method FROM shipping;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT shipping_id, shipping_cost FROM shipping;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM customs;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT customs_id, customs_description FROM customs;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT customs_id, customs_charge FROM customs;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT shipping_method, shipping_cost FROM shipping;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT customs_description, customs_charge FROM customs;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, unit_price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT shipping_id, shipping_method, shipping_cost FROM shipping;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT customs_id, customs_description, customs_charge FROM customs;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT product_name, shipping_method FROM products, shipping;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT product_id, shipping_method, customs_description FROM products, shipping, customs;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, shipping_cost FROM products, shipping;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT shipping_id, shipping_method, unit_price FROM products, shipping;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT customs_id, customs_description, unit_price FROM products, customs;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM products INNER JOIN shipping ON products.product_id = shipping.shipping_id WHERE products.unit_price > 50",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM products WHERE product_name LIKE '%computer%'",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT shipping_method, shipping_cost FROM shipping WHERE shipping_cost < 20",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT customs_description, customs_charge FROM customs WHERE customs_charge = (SELECT MAX(customs_charge) FROM customs)",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price, shipping_method, shipping_cost FROM products JOIN shipping ON products.product_id = shipping.shipping_id JOIN customs ON shipping.shipping_id = customs.customs_id WHERE products.unit_price > 100 AND shipping_cost < 10 AND customs_charge = 5",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM products WHERE unit_price BETWEEN 50 AND 100",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(unit_price) FROM products",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT shipping.shipping_method, AVG(customs.customs_charge) FROM shipping JOIN customs ON shipping.shipping_id = customs.customs_id GROUP BY shipping.shipping_method HAVING AVG(customs.customs_charge) > 10",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(unit_price) FROM products GROUP BY product_name ORDER BY SUM(unit_price) DESC",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT product_name, COUNT(*) FROM products GROUP BY product_name HAVING COUNT(*) > 1",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT SUM(unit_price) FROM products WHERE unit_price < 50",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, unit_price FROM products UNION SELECT shipping_id, shipping_method, shipping_cost FROM shipping UNION SELECT customs_id, customs_description, customs_charge FROM customs",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE product_name = 'keyboard' UNION SELECT * FROM shipping WHERE shipping_method = 'express' UNION SELECT * FROM customs WHERE customs_description = 'duty-free'",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(unit_price) AS average_price FROM products",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price, shipping_method, shipping_cost, customs_description, customs_charge FROM products JOIN shipping ON products.product_id = shipping.shipping_id JOIN customs ON products.product_id = customs.customs_id",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    unit_price FLOAT\n);\n\n\nCREATE TABLE shipping (\n    shipping_id INT PRIMARY KEY,\n    shipping_method VARCHAR(255),\n    shipping_cost FLOAT\n);\n\n\nCREATE TABLE customs (\n    customs_id INT PRIMARY KEY,\n    customs_description VARCHAR(255),\n    customs_charge FLOAT\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM products WHERE unit_price = (SELECT MAX(unit_price) FROM products)",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, price FROM products WHERE price > 50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM products ORDER BY product_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE product_id IN (1, 3, 5);",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_id, AVG(price) AS avg_price FROM products GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM products WHERE product_name LIKE 'S%';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM products INNER JOIN landed_cost ON products.product_id = landed_cost.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_id, shipping_method, cost FROM shipping_costs JOIN landed_cost ON shipping_costs.shipping_id = landed_cost.shipping_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, country, tariff FROM customs_charges JOIN landed_cost ON customs_charges.customs_id = landed_cost.customs_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_id, shipping_method, total_cost FROM shipping_costs JOIN landed_cost ON shipping_costs.shipping_id = landed_cost.shipping_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, country, total_cost FROM customs_charges JOIN landed_cost ON customs_charges.customs_id = landed_cost.customs_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_id, shipping_method, product_name, tariff, price, total_cost FROM products JOIN shipping_costs JOIN customs_charges JOIN landed_cost ON products.product_id = landed_cost.product_id AND shipping_costs.shipping_id = landed_cost.shipping_id AND customs_charges.customs_id = landed_cost.customs_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM landed_cost WHERE total_cost BETWEEN 100 AND 200;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, total_cost FROM products JOIN landed_cost ON products.product_id = landed_cost.product_id WHERE landed_cost.total_cost > 150;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_id, MAX(price) AS max_price FROM products GROUP BY product_id HAVING MAX(price) > 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT AVG(price) AS avg_price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(total_cost) AS total_landed_cost FROM products JOIN landed_cost ON products.product_id = landed_cost.product_id GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, country, tariff, total_cost FROM customs_charges JOIN landed_cost ON customs_charges.customs_id = landed_cost.customs_id WHERE total_cost < 200;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_products FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT AVG(price) AS avg_price, MIN(price) AS min_price, MAX(price) AS max_price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE price > 50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM products WHERE product_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM products WHERE price between 20 and 50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, price, shipping_method FROM products p JOIN shipping_costs s ON p.product_id = s.shipping_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, price, country FROM products p JOIN customs_charges c ON p.product_id = c.customs_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, total_cost FROM products p JOIN landed_cost lc ON p.product_id = lc.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, price, total_cost FROM products p JOIN landed_cost lc ON p.product_id = lc.product_id JOIN shipping_costs s ON lc.shipping_id = s.shipping_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_name, price, total_cost FROM products p JOIN landed_cost lc ON p.product_id = lc.product_id JOIN shipping_costs s ON lc.shipping_id = s.shipping_id JOIN customs_charges c ON lc.customs_id = c.customs_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, price, shipping_method, country, tariff, total_cost FROM products p JOIN landed_cost lc ON p.product_id = lc.product_id JOIN shipping_costs s ON lc.shipping_id = s.shipping_id JOIN customs_charges c ON lc.customs_id = c.customs_id;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM landed_cost WHERE total_cost > 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM landed_cost WHERE total_cost < 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM landed_cost WHERE total_cost >= 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM landed_cost WHERE total_cost <= 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM landed_cost WHERE total_cost = 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM landed_cost WHERE total_cost <> 100;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM landed_cost WHERE customs_id is NULL;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM landed_cost WHERE shipping_id is NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM landed_cost WHERE product_id in (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM landed_cost WHERE product_id not in (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name STRING,\n  price DECIMAL\n);\n\nCREATE TABLE shipping_costs (\n  shipping_id INT PRIMARY KEY,\n  shipping_method STRING,\n  cost DECIMAL\n);\n\nCREATE TABLE customs_charges (\n  customs_id INT PRIMARY KEY,\n  country STRING,\n  tariff DECIMAL\n);\n\nCREATE TABLE landed_cost (\n  landed_cost_id INT PRIMARY KEY,\n  product_id INT,\n  shipping_id INT,\n  customs_id INT,\n  total_cost DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM landed_cost WHERE total_cost between 50 and 100;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT * FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM products WHERE unit_price > 50;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT * FROM customer_orders;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT customer_id, product_id, quantity FROM customer_orders;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT order_id, customer_id, product_id, quantity, order_date FROM customer_orders WHERE order_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT * FROM shipping_rates;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT shipping_method, cost FROM shipping_rates;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT shipping_method, cost FROM shipping_rates WHERE cost < 20;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT * FROM customs_charges;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT country, charge FROM customs_charges;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT country, charge FROM customs_charges WHERE charge >= 5;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT * FROM landed_costs;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT order_id, shipping_id, customs_id, total_cost FROM landed_costs;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT order_id, shipping_id, customs_id, total_cost FROM landed_costs WHERE total_cost < 1000;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT p.product_name, c.quantity, l.total_cost FROM products p INNER JOIN customer_orders c ON p.product_id = c.product_id INNER JOIN landed_costs l ON c.order_id = l.order_id;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT p.product_name, c.quantity, l.total_cost FROM products p INNER JOIN customer_orders c ON p.product_id = c.product_id INNER JOIN landed_costs l ON c.order_id = l.order_id WHERE l.total_cost < 1000;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT p.product_name, c.quantity, s.shipping_method FROM products p INNER JOIN customer_orders c ON p.product_id = c.product_id INNER JOIN shipping_rates s ON c.shipping_id = s.shipping_id;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT p.product_name, c.quantity, s.shipping_method FROM products p INNER JOIN customer_orders c ON p.product_id = c.product_id INNER JOIN shipping_rates s ON c.shipping_id = s.shipping_id WHERE s.cost > 10;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT p.product_name, c.quantity, cc.charge FROM products p INNER JOIN customer_orders c ON p.product_id = c.product_id INNER JOIN customs_charges cc ON c.customs_id = cc.customs_id;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT p.product_name, c.quantity, cc.charge FROM products p INNER JOIN customer_orders c ON p.product_id = c.product_id INNER JOIN customs_charges cc ON c.customs_id = cc.customs_id WHERE cc.country = 'USA';",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE unit_price > 1000;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM products WHERE product_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM products WHERE unit_price BETWEEN 500 AND 1000;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM products WHERE product_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT * FROM customer_orders WHERE quantity > 10 AND order_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT customer_id, SUM(quantity) AS total_quantity FROM customer_orders GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT customer_id, product_id, quantity FROM customer_orders WHERE order_date BETWEEN '2022-01-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT * FROM shipping_rates WHERE cost < 50.00;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT shipping_method, cost FROM shipping_rates WHERE shipping_method IN ('Express', 'Standard');",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT country, charge FROM customs_charges WHERE charge > 20.00;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT order_id, total_cost FROM landed_costs WHERE total_cost >= 100.00;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT product_name, unit_price, order_date FROM products JOIN customer_orders ON products.product_id = customer_orders.product_id;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT product_name, unit_price, order_date FROM products JOIN customer_orders ON products.product_id = customer_orders.product_id WHERE unit_price > 500;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT product_name, unit_price, order_date FROM products JOIN customer_orders ON products.product_id = customer_orders.product_id ORDER BY order_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT product_name, unit_price, order_date FROM products JOIN customer_orders ON products.product_id = customer_orders.product_id ORDER BY unit_price ASC;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT product_name, unit_price, order_date FROM products JOIN customer_orders ON products.product_id = customer_orders.product_id ORDER BY unit_price DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT product_name, unit_price, order_date FROM products JOIN customer_orders ON products.product_id = customer_orders.product_id WHERE order_date > '2022-03-01' AND unit_price < 1000;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT product_name, unit_price, order_date, shipping_method, cost FROM products JOIN customer_orders ON products.product_id = customer_orders.product_id JOIN shipping_rates ON customer_orders.shipping_id = shipping_rates.shipping_id;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT product_name, unit_price, order_date, shipping_method, cost FROM products JOIN customer_orders ON products.product_id = customer_orders.product_id JOIN shipping_rates ON customer_orders.shipping_id = shipping_rates.shipping_id JOIN landed_costs ON customer_orders.order_id = landed_costs.order_id;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n  product_id INT PRIMARY KEY, \n  product_name VARCHAR(255) NOT NULL, \n  unit_price DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customer_orders ( \n  order_id INT PRIMARY KEY, \n  customer_id INT NOT NULL, \n  product_id INT NOT NULL, \n  quantity INT NOT NULL, \n  order_date DATE NOT NULL \n);\n\nCREATE TABLE shipping_rates ( \n  shipping_id INT PRIMARY KEY, \n  shipping_method VARCHAR(50) NOT NULL, \n  cost DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE customs_charges ( \n  customs_id INT PRIMARY KEY, \n  country VARCHAR(50) NOT NULL, \n  charge DECIMAL(10, 2) NOT NULL \n);\n\nCREATE TABLE landed_costs ( \n  landed_cost_id INT PRIMARY KEY, \n  order_id INT NOT NULL, \n  shipping_id INT NOT NULL, \n  customs_id INT NOT NULL, \n  total_cost DECIMAL(10, 2) NOT NULL \n);\n\n### STATEMENT\n\nSELECT product_name, unit_price, order_date, shipping_method, cost FROM products JOIN customer_orders ON products.product_id = customer_orders.product_id JOIN shipping_rates ON customer_orders.shipping_id = shipping_rates.shipping_id JOIN landed_costs ON customer_orders.order_id = landed_costs.order_id WHERE landed_costs.total_cost > 500;"
]