[
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM ProductInventory;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, quantity FROM ProductInventory;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity FROM ProductInventory WHERE warehouse_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM ProductInventory WHERE quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity FROM ProductInventory WHERE last_updated > '2022-01-01 00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(product_id) AS total_products FROM ProductInventory;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(quantity) AS max_quantity FROM ProductInventory;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) AS total_quantity FROM ProductInventory GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, AVG(quantity) AS avg_quantity FROM ProductInventory GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT warehouse_id FROM ProductInventory;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM ProductInventory ORDER BY quantity DESC;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, quantity FROM ProductInventory ORDER BY last_updated ASC;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity FROM ProductInventory LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity FROM ProductInventory OFFSET 10;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, quantity FROM ProductInventory WHERE quantity BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity, last_updated FROM ProductInventory WHERE product_name LIKE '%apple%';",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, quantity FROM ProductInventory WHERE quantity IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity FROM ProductInventory WHERE warehouse_id IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, DATE(last_updated) AS date_updated FROM ProductInventory;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, EXTRACT(MONTH FROM last_updated) AS last_updated_month FROM ProductInventory;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, quantity FROM ProductInventory WHERE quantity > 100 ORDER BY last_updated DESC LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT warehouse_id, COUNT(*) as total_products FROM ProductInventory GROUP BY warehouse_id HAVING total_products > 5",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, warehouse_id, quantity, last_updated FROM ProductInventory WHERE warehouse_id = '123e4567-e89b-12d3-a456-426614174000'",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT warehouse_id FROM ProductInventory",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) as total_quantity FROM ProductInventory GROUP BY product_name",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, AVG(quantity) as avg_quantity FROM ProductInventory GROUP BY product_name",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity, last_updated FROM ProductInventory WHERE product_name LIKE '%shirt%'",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, quantity FROM ProductInventory WHERE quantity BETWEEN 50 AND 100",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_name, quantity FROM ProductInventory WHERE last_updated > '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT product_id, warehouse_id, quantity FROM ProductInventory WHERE warehouse_id IN ('123e4567-e89b-12d3-a456-426614174000', '223e4567-e89b-12d3-a456-426614174000')",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM Product;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_name, quantity FROM Product;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM Product WHERE product_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_name, quantity FROM Product WHERE warehouse_id = '123e4567-e89b-12d3-a456-426614174001';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM Warehouse;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT warehouse_name, location FROM Warehouse;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM Warehouse WHERE warehouse_id = '123e4567-e89b-12d3-a456-426614174002';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT warehouse_name FROM Warehouse WHERE location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT p.product_name, w.warehouse_name FROM Product p JOIN Warehouse w ON p.warehouse_id = w.warehouse_id;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT p.product_name, w.location FROM Product p JOIN Warehouse w ON p.warehouse_id = w.warehouse_id;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT MAX(quantity) FROM Product;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Product;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT AVG(quantity) FROM Product;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT MIN(quantity) FROM Product;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT DISTINCT warehouse_id FROM Product;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM Product ORDER BY quantity DESC;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM Product WHERE quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM Product WHERE product_name LIKE 'S%';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM Product WHERE product_name IN ('Product A','Product B');",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT SUM(quantity) FROM Product;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM Product WHERE quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_name, quantity, warehouse_name FROM Product INNER JOIN Warehouse ON Product.warehouse_id = Warehouse.warehouse_id;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name FROM Product WHERE product_name LIKE '%shoes%';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM Product WHERE warehouse_id IN (SELECT warehouse_id FROM Warehouse WHERE location = 'New York');",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, SUM(quantity) AS total_quantity FROM Product GROUP BY product_id, product_name;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) AS total_quantity FROM Product GROUP BY product_name HAVING SUM(quantity) > 500;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, warehouse_name, location FROM Product INNER JOIN Warehouse ON Product.warehouse_id = Warehouse.warehouse_id WHERE quantity < 50;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_name, quantity, warehouse_name FROM Product INNER JOIN Warehouse ON Product.warehouse_id = Warehouse.warehouse_id WHERE location = 'California';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_name, quantity, warehouse_name FROM Product INNER JOIN Warehouse ON Product.warehouse_id = Warehouse.warehouse_id ORDER BY quantity DESC;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_name, quantity, warehouse_name FROM Product INNER JOIN Warehouse ON Product.warehouse_id = Warehouse.warehouse_id ORDER BY warehouse_name ASC, quantity DESC;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT p.product_name, w.location FROM Product p, Warehouse w WHERE p.warehouse_id = w.warehouse_id;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity FROM Product WHERE quantity BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_name, quantity, warehouse_name FROM Product INNER JOIN Warehouse ON Product.warehouse_id = Warehouse.warehouse_id LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, warehouse_name FROM Product LEFT JOIN Warehouse ON Product.warehouse_id = Warehouse.warehouse_id;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) AS total_quantity FROM Product GROUP BY product_name ORDER BY total_quantity DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_name, warehouse_name FROM Product INNER JOIN Warehouse ON Product.warehouse_id = Warehouse.warehouse_id WHERE product_name ILIKE '%sh%';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT DISTINCT location FROM Warehouse;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_name, quantity, warehouse_name FROM Product INNER JOIN Warehouse ON Product.warehouse_id = Warehouse.warehouse_id WHERE warehouse_name LIKE '%warehouse%';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, warehouse_name FROM Product INNER JOIN Warehouse ON Product.warehouse_id = Warehouse.warehouse_id OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_name, quantity, warehouse_name FROM Product INNER JOIN Warehouse ON Product.warehouse_id = Warehouse.warehouse_id WHERE quantity < (SELECT AVG(quantity) FROM Product);",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT warehouse_id, warehouse_name FROM warehouses;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT warehouse_id, warehouse_name, location FROM warehouses;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT category_id, category_name FROM product_categories;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT warehouse_id, location FROM warehouses;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, warehouse_id, quantity FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM warehouses;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, warehouse_id FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT warehouse_id, warehouse_name, location FROM warehouses;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT category_id, category_name FROM product_categories;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_id, quantity FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT warehouse_id, warehouse_name FROM warehouses;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM product_categories;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT warehouse_id, location FROM warehouses;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, warehouse_id, quantity FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE quantity > 0;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM warehouses WHERE warehouse_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM inventory INNER JOIN warehouses ON inventory.warehouse_id = warehouses.warehouse_id",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_name, quantity FROM inventory WHERE quantity > 100",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT inventory.product_name, warehouses.warehouse_name FROM inventory JOIN warehouses ON inventory.warehouse_id = warehouses.warehouse_id WHERE inventory.quantity > 50",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name FROM inventory WHERE product_name LIKE 'A%'",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM warehouses WHERE location = 'New York'",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT inventory.product_name, product_categories.category_name FROM inventory JOIN product_categories ON inventory.product_id = product_categories.category_id",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT warehouse_name, COUNT(product_id) AS total_products FROM inventory JOIN warehouses ON inventory.warehouse_id = warehouses.warehouse_id GROUP BY warehouse_name",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT DISTINCT warehouse_id FROM inventory WHERE quantity < 10",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT warehouse_id, SUM(quantity) AS total_quantity FROM inventory GROUP BY warehouse_id HAVING total_quantity > 500",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT warehouse_name, location FROM warehouses ORDER BY warehouse_name ASC",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) AS total_quantity FROM inventory GROUP BY product_name HAVING total_quantity > 1000",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT warehouse_name, COUNT(product_id) AS total_products FROM inventory JOIN warehouses ON inventory.warehouse_id = warehouses.warehouse_id GROUP BY warehouse_name HAVING total_products > 5",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) AS total_quantity FROM inventory GROUP BY product_name ORDER BY total_quantity DESC",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT warehouse_name, AVG(quantity) AS avg_quantity FROM inventory JOIN warehouses ON inventory.warehouse_id = warehouses.warehouse_id GROUP BY warehouse_name HAVING avg_quantity > 50",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT warehouse_name, location FROM warehouses WHERE warehouse_id IN (SELECT warehouse_id FROM inventory WHERE quantity < 20)",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_name, MAX(quantity) AS max_quantity FROM inventory GROUP BY product_name ORDER BY max_quantity DESC",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT product_name, quantity FROM inventory WHERE quantity BETWEEN 50 AND 100",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT category_name, COUNT(product_id) AS total_products FROM inventory JOIN product_categories ON inventory.product_id = product_categories.category_id GROUP BY category_name HAVING total_products > 3",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT warehouse_name, location FROM warehouses WHERE warehouse_id IN (SELECT warehouse_id FROM inventory WHERE product_name LIKE 'B%')",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT warehouse_name, location FROM warehouses WHERE warehouse_id NOT IN (SELECT warehouse_id FROM inventory WHERE quantity > 200)",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Product;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, product_description FROM Product;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Warehouse;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT warehouse_name, location FROM Warehouse;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Inventory;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT product_id, warehouse_id, quantity FROM Inventory;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM ProductCategory;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT category_name FROM ProductCategory;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, warehouse_name, quantity FROM Product INNER JOIN Inventory ON Product.product_id = Inventory.product_id INNER JOIN Warehouse ON Inventory.warehouse_id = Warehouse.warehouse_id;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT category_name, product_name, product_description FROM Product INNER JOIN ProductCategory ON Product.product_id = ProductCategory.category_id;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, warehouse_name, quantity FROM Product INNER JOIN Inventory ON Product.product_id = Inventory.product_id INNER JOIN Warehouse ON Inventory.warehouse_id = Warehouse.warehouse_id WHERE quantity > 0;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, warehouse_name, quantity FROM Product INNER JOIN Inventory ON Product.product_id = Inventory.product_id INNER JOIN Warehouse ON Inventory.warehouse_id = Warehouse.warehouse_id WHERE location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, quantity FROM Product INNER JOIN Inventory ON Product.product_id = Inventory.product_id WHERE quantity > 10;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT warehouse_name, location FROM Warehouse WHERE location LIKE '%California%';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Product WHERE product_name LIKE '%phone%';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE quantity <= 5;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, warehouse_name, quantity FROM Product INNER JOIN Inventory ON Product.product_id = Inventory.product_id INNER JOIN Warehouse ON Inventory.warehouse_id = Warehouse.warehouse_id ORDER BY quantity DESC;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, warehouse_name, quantity FROM Product INNER JOIN Inventory ON Product.product_id = Inventory.product_id INNER JOIN Warehouse ON Inventory.warehouse_id = Warehouse.warehouse_id LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, warehouse_name, quantity FROM Product INNER JOIN Inventory ON Product.product_id = Inventory.product_id INNER JOIN Warehouse ON Inventory.warehouse_id = Warehouse.warehouse_id OFFSET 5 LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(quantity) AS average_quantity FROM Inventory;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT category_name, COUNT(product_id) AS total_products FROM ProductCategory INNER JOIN Product ON ProductCategory.category_id = Product.product_id GROUP BY category_name LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Product WHERE product_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, product_description FROM Product WHERE product_id > 10;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT p.product_name, w.warehouse_name FROM Product p JOIN Inventory i ON p.product_id = i.product_id JOIN Warehouse w ON i.warehouse_id = w.warehouse_id;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Product INNER JOIN Inventory ON Product.product_id = Inventory.product_id WHERE Inventory.quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT p.product_name, c.category_name FROM Product p JOIN ProductCategory c ON p.product_id = c.category_id;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) AS total_quantity FROM Product JOIN Inventory ON Product.product_id = Inventory.product_id GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, category_name FROM Product JOIN ProductCategory USING (category_id);",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT p.product_name, w.warehouse_name, i.quantity FROM Product p JOIN Inventory i ON p.product_id = i.product_id JOIN Warehouse w ON i.warehouse_id = w.warehouse_id;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT warehouse_name, location FROM Warehouse JOIN Inventory ON Warehouse.warehouse_id = Inventory.warehouse_id WHERE Inventory.quantity < 50;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Product WHERE product_name LIKE '%apple%';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT product_name, product_description FROM Product WHERE product_name LIKE 'A%' AND LENGTH(product_name) > 5;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT warehouse_name, COUNT(product_id) AS num_products FROM Warehouse JOIN Inventory ON Warehouse.warehouse_id = Inventory.warehouse_id GROUP BY warehouse_name;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT p.product_name, SUM(quantity) AS total_quantity FROM Product p JOIN Inventory i ON p.product_id = i.product_id WHERE i.quantity > 50 GROUP BY p.product_name HAVING total_quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT warehouse_name, location FROM Warehouse JOIN Inventory ON Warehouse.warehouse_id = Inventory.warehouse_id WHERE location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, warehouse_name, quantity FROM Product JOIN Inventory ON Product.product_id = Inventory.product_id JOIN Warehouse ON Inventory.warehouse_id = Warehouse.warehouse_id;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT p.product_name, c.category_name, w.warehouse_name, i.quantity FROM Product p JOIN ProductCategory c ON p.product_id = c.category_id JOIN Inventory i ON p.product_id = i.product_id JOIN Warehouse w ON i.warehouse_id = w.warehouse_id;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, warehouse_name, SUM(quantity) AS total_quantity FROM Product JOIN Inventory ON Product.product_id = Inventory.product_id JOIN Warehouse ON Inventory.warehouse_id = Warehouse.warehouse_id GROUP BY product_name, warehouse_name;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT p.product_name, c.category_name, COUNT(i.inventory_id) AS num_inventory FROM Product p JOIN ProductCategory c ON p.product_id = c.category_id JOIN Inventory i ON p.product_id = i.product_id GROUP BY p.product_name, c.category_name;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, warehouse_name FROM Product JOIN Inventory ON Product.product_id = Inventory.product_id JOIN Warehouse ON Inventory.warehouse_id = Warehouse.warehouse_id WHERE quantity > 0;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nSELECT p.product_name, w.warehouse_name, i.quantity FROM Product p JOIN Inventory i ON p.product_id = i.product_id JOIN Warehouse w ON i.warehouse_id = w.warehouse_id WHERE i.quantity BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT * FROM Product;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT id, name, category FROM Product WHERE price > 100;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT * FROM Warehouse;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT id, location FROM Warehouse WHERE location LIKE '%Main%';",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT * FROM Inventory;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT product_id, warehouse_id, quantity FROM Inventory WHERE quantity < 10;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT * FROM Supplier;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT id, name FROM Supplier WHERE email LIKE '%@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT * FROM ProductSupplier;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT product_id, supplier_id FROM ProductSupplier WHERE supplier_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT p.name, s.name FROM Product p JOIN ProductSupplier ps ON p.id = ps.product_id JOIN Supplier s ON ps.supplier_id = s.id;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT p.name, w.location, i.quantity FROM Product p JOIN Inventory i ON p.id = i.product_id JOIN Warehouse w ON i.warehouse_id = w.id;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT name, price FROM Product ORDER BY price DESC;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT category, AVG(price) AS avg_price FROM Product GROUP BY category;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_products FROM Product;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT s.name AS supplier_name, COUNT(ps.product_id) AS product_count FROM Supplier s JOIN ProductSupplier ps ON s.id = ps.supplier_id GROUP BY s.name;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT p.name AS product_name, SUM(i.quantity) AS total_quantity FROM Product p JOIN Inventory i ON p.id = i.product_id GROUP BY p.name;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT p.name, w.location FROM Product p LEFT JOIN Inventory i ON p.id = i.product_id LEFT JOIN Warehouse w ON i.warehouse_id = w.id;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT * FROM Product WHERE id IN (1, 3, 5, 7, 9);",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT p.name, AVG(i.quantity) AS avg_quantity FROM Product p JOIN Inventory i ON p.id = i.product_id GROUP BY p.name HAVING AVG(i.quantity) > 5;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT * FROM Product WHERE price > 1000;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT name, category FROM Product WHERE price BETWEEN 500 AND 1000;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT P.name, P.price, S.name as supplier FROM Product P JOIN ProductSupplier PS ON P.id = PS.product_id JOIN Supplier S ON PS.supplier_id = S.id;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT P.name as product_name, W.location as warehouse_location, I.quantity FROM Product P JOIN Inventory I ON P.id = I.product_id JOIN Warehouse W ON I.warehouse_id = W.id;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT DISTINCT category FROM Product;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT P.name, P.category, I.quantity, W.location FROM Product P JOIN Inventory I ON P.id = I.product_id JOIN Warehouse W ON I.warehouse_id = W.id WHERE I.quantity > 0;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT S.name as supplier_name, PS.product_id, PS.supplier_id FROM Supplier S JOIN ProductSupplier PS ON S.id = PS.supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT P.name, P.price, S.name as supplier FROM Product P JOIN ProductSupplier PS ON P.id = PS.product_id JOIN Supplier S ON PS.supplier_id = S.id WHERE S.contact_name IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT P.name, P.price, S.name as supplier FROM Product P JOIN ProductSupplier PS ON P.id = PS.product_id JOIN Supplier S ON PS.supplier_id = S.id WHERE S.email LIKE '%@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT P.name, P.price, I.quantity FROM Product P JOIN Inventory I ON P.id = I.product_id WHERE I.quantity < 10;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT W.location, SUM(I.quantity) as total_quantity FROM Warehouse W JOIN Inventory I ON W.id = I.warehouse_id GROUP BY W.location;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT P.name, P.price, W.location, I.quantity FROM Product P JOIN Inventory I ON P.id = I.product_id JOIN Warehouse W ON I.warehouse_id = W.id ORDER BY P.price DESC;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT P.name, COUNT(PS.supplier_id) as supplier_count FROM Product P JOIN ProductSupplier PS ON P.id = PS.product_id GROUP BY P.name;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT P.name, SUM(I.quantity) as total_quantity FROM Product P JOIN Inventory I ON P.id = I.product_id GROUP BY P.name HAVING SUM(I.quantity) > 100;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT P.name, P.price, W.location, I.quantity FROM Product P JOIN Inventory I ON P.id = I.product_id JOIN Warehouse W ON I.warehouse_id = W.id LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT P.name, MAX(I.quantity) as max_quantity FROM Product P JOIN Inventory I ON P.id = I.product_id GROUP BY P.name;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT P.name, P.price, W.location, I.quantity FROM Product P JOIN Inventory I ON P.id = I.product_id JOIN Warehouse W ON I.warehouse_id = W.id OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT P.name, AVG(I.quantity) as avg_quantity FROM Product P JOIN Inventory I ON P.id = I.product_id GROUP BY P.name;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT P.name, COUNT(DISTINCT PS.supplier_id) as distinct_supplier_count FROM Product P JOIN ProductSupplier PS ON P.id = PS.product_id GROUP BY P.name;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nSELECT P.name, MIN(I.quantity) as min_quantity FROM Product P JOIN Inventory I ON P.id = I.product_id GROUP BY P.name;"
]