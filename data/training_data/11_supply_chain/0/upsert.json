[
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('1', 'Product 1', '1', 100, '2022-01-01') ON CONFLICT (product_id) DO UPDATE SET product_name = excluded.product_name, warehouse_id = excluded.warehouse_id, quantity = excluded.quantity, last_updated = excluded.last_updated;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('2', 'Product 2', '1', 150, '2022-01-02') ON CONFLICT (product_id) DO UPDATE SET product_name = excluded.product_name, warehouse_id = excluded.warehouse_id, quantity = excluded.quantity, last_updated = excluded.last_updated;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('3', 'Product 3', '2', 200, '2022-01-03') ON CONFLICT (product_id) DO UPDATE SET product_name = excluded.product_name, warehouse_id = excluded.warehouse_id, quantity = excluded.quantity, last_updated = excluded.last_updated;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('4', 'Product 4', '2', 250, '2022-01-04') ON CONFLICT (product_id) DO UPDATE SET product_name = excluded.product_name, warehouse_id = excluded.warehouse_id, quantity = excluded.quantity, last_updated = excluded.last_updated;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('5', 'Product 5', '3', 300, '2022-01-05') ON CONFLICT (product_id) DO UPDATE SET product_name = excluded.product_name, warehouse_id = excluded.warehouse_id, quantity = excluded.quantity, last_updated = excluded.last_updated;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('6', 'Product 6', '3', 350, '2022-01-06') ON CONFLICT (product_id) DO UPDATE SET product_name = excluded.product_name, warehouse_id = excluded.warehouse_id, quantity = excluded.quantity, last_updated = excluded.last_updated;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('7', 'Product 7', '4', 400, '2022-01-07') ON CONFLICT (product_id) DO UPDATE SET product_name = excluded.product_name, warehouse_id = excluded.warehouse_id, quantity = excluded.quantity, last_updated = excluded.last_updated;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('8', 'Product 8', '4', 450, '2022-01-08') ON CONFLICT (product_id) DO UPDATE SET product_name = excluded.product_name, warehouse_id = excluded.warehouse_id, quantity = excluded.quantity, last_updated = excluded.last_updated;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('9', 'Product 9', '5', 500, '2022-01-09') ON CONFLICT (product_id) DO UPDATE SET product_name = excluded.product_name, warehouse_id = excluded.warehouse_id, quantity = excluded.quantity, last_updated = excluded.last_updated;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('10', 'Product 10', '5', 550, '2022-01-10') ON CONFLICT (product_id) DO UPDATE SET product_name = excluded.product_name, warehouse_id = excluded.warehouse_id, quantity = excluded.quantity, last_updated = excluded.last_updated;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('11', 'Product 11', '6', 600, '2022-01-11') ON CONFLICT (product_id) DO UPDATE SET product_name = excluded.product_name, warehouse_id = excluded.warehouse_id, quantity = excluded.quantity, last_updated = excluded.last_updated;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('12', 'Product 12', '6', 650, '2022-01-12') ON CONFLICT (product_id) DO UPDATE SET product_name = excluded.product_name, warehouse_id = excluded.warehouse_id, quantity = excluded.quantity, last_updated = excluded.last_updated;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('13', 'Product 13', '7', 700, '2022-01-13') ON CONFLICT (product_id) DO UPDATE SET product_name = excluded.product_name, warehouse_id = excluded.warehouse_id, quantity = excluded.quantity, last_updated = excluded.last_updated;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('14', 'Product 14', '7', 750, '2022-01-14') ON CONFLICT (product_id) DO UPDATE SET product_name = excluded.product_name, warehouse_id = excluded.warehouse_id, quantity = excluded.quantity, last_updated = excluded.last_updated;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('15', 'Product 15', '8', 800, '2022-01-15') ON CONFLICT (product_id) DO UPDATE SET product_name = excluded.product_name, warehouse_id = excluded.warehouse_id, quantity = excluded.quantity, last_updated = excluded.last_updated;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('16', 'Product 16', '8', 850, '2022-01-16') ON CONFLICT (product_id) DO UPDATE SET product_name = excluded.product_name, warehouse_id = excluded.warehouse_id, quantity = excluded.quantity, last_updated = excluded.last_updated;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('17', 'Product 17', '9', 900, '2022-01-17') ON CONFLICT (product_id) DO UPDATE SET product_name = excluded.product_name, warehouse_id = excluded.warehouse_id, quantity = excluded.quantity, last_updated = excluded.last_updated;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('18', 'Product 18', '9', 950, '2022-01-18') ON CONFLICT (product_id) DO UPDATE SET product_name = excluded.product_name, warehouse_id = excluded.warehouse_id, quantity = excluded.quantity, last_updated = excluded.last_updated;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('19', 'Product 19', '10', 1000, '2022-01-19') ON CONFLICT (product_id) DO UPDATE SET product_name = excluded.product_name, warehouse_id = excluded.warehouse_id, quantity = excluded.quantity, last_updated = excluded.last_updated;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('20', 'Product 20', '10', 1050, '2022-01-20') ON CONFLICT (product_id) DO UPDATE SET product_name = excluded.product_name, warehouse_id = excluded.warehouse_id, quantity = excluded.quantity, last_updated = excluded.last_updated;",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('1', 'Product A', '12345678-1234-1234-1234-123456789abc', 100, '2022-01-01 08:00:00') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product A', quantity = 150, last_updated = '2022-01-02 08:00:00';",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('2', 'Product B', '87654321-4321-4321-4321-210987654321', 200, '2022-01-03 10:00:00') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product B', quantity = 250, last_updated = '2022-01-04 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('3', 'Product C', '24681012-1212-3434-5656-781012121234', 300, '2022-01-05 12:00:00') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product C', quantity = 350, last_updated = '2022-01-06 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('4', 'Product D', '98765432-4321-2109-8765-432198765432', 400, '2022-01-07 14:00:00') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product D', quantity = 450, last_updated = '2022-01-08 14:00:00';",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('5', 'Product E', '11111111-1111-1111-1111-111111111111', 500, '2022-01-09 16:00:00') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product E', quantity = 550, last_updated = '2022-01-10 16:00:00';",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('6', 'Product F', '22222222-2222-2222-2222-222222222222', 600, '2022-01-11 18:00:00') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product F', quantity = 650, last_updated = '2022-01-12 18:00:00';",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('7', 'Product G', '33333333-3333-3333-3333-333333333333', 700, '2022-01-13 20:00:00') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product G', quantity = 750, last_updated = '2022-01-14 20:00:00';",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('8', 'Product H', '44444444-4444-4444-4444-444444444444', 800, '2022-01-15 22:00:00') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product H', quantity = 850, last_updated = '2022-01-16 22:00:00';",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('9', 'Product I', '55555555-5555-5555-5555-555555555555', 900, '2022-01-17 00:00:00') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product I', quantity = 950, last_updated = '2022-01-18 00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('10', 'Product J', '66666666-6666-6666-6666-666666666666', 1000, '2022-01-19 02:00:00') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product J', quantity = 1050, last_updated = '2022-01-20 02:00:00';",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('11', 'Product K', '77777777-7777-7777-7777-777777777777', 1100, '2022-01-21 04:00:00') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product K', quantity = 1150, last_updated = '2022-01-22 04:00:00';",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('12', 'Product L', '88888888-8888-8888-8888-888888888888', 1200, '2022-01-23 06:00:00') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product L', quantity = 1250, last_updated = '2022-01-24 06:00:00';",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('13', 'Product M', '99999999-9999-9999-9999-999999999999', 1300, '2022-01-25 08:00:00') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product M', quantity = 1350, last_updated = '2022-01-26 08:00:00';",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('14', 'Product N', '10101010-1010-1010-1010-101010101010', 1400, '2022-01-27 10:00:00') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product N', quantity = 1450, last_updated = '2022-01-28 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('15', 'Product O', '12121212-1212-1212-1212-121212121212', 1500, '2022-01-29 12:00:00') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product O', quantity = 1550, last_updated = '2022-01-30 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('16', 'Product P', '13131313-1313-1313-1313-131313131313', 1600, '2022-01-31 14:00:00') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product P', quantity = 1650, last_updated = '2022-02-01 14:00:00';",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('17', 'Product Q', '14141414-1414-1414-1414-141414141414', 1700, '2022-02-02 16:00:00') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product Q', quantity = 1750, last_updated = '2022-02-03 16:00:00';",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('18', 'Product R', '15151515-1515-1515-1515-151515151515', 1800, '2022-02-04 18:00:00') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product R', quantity = 1850, last_updated = '2022-02-05 18:00:00';",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('19', 'Product S', '16161616-1616-1616-1616-161616161616', 1900, '2022-02-06 20:00:00') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product S', quantity = 1950, last_updated = '2022-02-07 20:00:00';",
  "### TABLEDATA\n\nCREATE TABLE ProductInventory (\n    product_id UUID PRIMARY KEY,\n    product_name TEXT,\n    warehouse_id UUID,\n    quantity INTEGER,\n    last_updated TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO ProductInventory (product_id, product_name, warehouse_id, quantity, last_updated) VALUES ('20', 'Product T', '17171717-1717-1717-1717-171717171717', 2000, '2022-02-08 22:00:00') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product T', quantity = 2050, last_updated = '2022-02-09 22:00:00';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('1a2b3c4d', 'Product 1', '123abc', 100);",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('5e6f7g8h', 'Product 2', '456def', 200);",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('9i1j2k3l', 'Product 3', '789ghi', 150);",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('4m5n6o7p', 'Product 4', 'abc123', 120);",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('8q9r1s2t', 'Product 5', 'def456', 180);",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('3u4v5w6x', 'Product 6', 'ghi789', 250);",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('7y8z9a1b', 'Product 7', '123abc', 300);",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('2c3d4e5f', 'Product 8', '456def', 90);",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('6g7h8i9j', 'Product 9', '789ghi', 220);",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('1k2l3m4n', 'Product 10', 'abc123', 130);",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('5o6p7q8r', 'Product 11', 'def456', 170);",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('9s1t2u3v', 'Product 12', 'ghi789', 240);",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('4w5x6y7z', 'Product 13', '123abc', 280);",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('8a9b1c2d', 'Product 14', '456def', 110);",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('3e4f5g6h', 'Product 15', '789ghi', 200);",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('7i8j9k1l', 'Product 16', 'abc123', 150);",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('2m3n4o5p', 'Product 17', 'def456', 190);",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('6q7r8s9t', 'Product 18', 'ghi789', 260);",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('1u2v3w4x', 'Product 19', '123abc', 320);",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('5y6z7a8b', 'Product 20', '456def', 80);",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('11e78e73-f01f-4d8a-9877-8f544c79e2ac', 'Product1', '11e78e73-f01f-4d8a-9877-8f544c79e2ad', 100) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product1', quantity = 150;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('11e78e73-f01f-4d8a-9877-8f544c79e2ad', 'Product2', '11e78e73-f01f-4d8a-9877-8f544c79e2ae', 200) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product2', quantity = 250;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('11e78e73-f01f-4d8a-9877-8f544c79e2ae', 'Product3', '11e78e73-f01f-4d8a-9877-8f544c79e2af', 300) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product3', quantity = 350;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('11e78e73-f01f-4d8a-9877-8f544c79e2af', 'Product4', '11e78e73-f01f-4d8a-9877-8f544c79e2b0', 400) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product4', quantity = 450;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('11e78e73-f01f-4d8a-9877-8f544c79e2b0', 'Product5', '11e78e73-f01f-4d8a-9877-8f544c79e2b1', 500) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product5', quantity = 550;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('11e78e73-f01f-4d8a-9877-8f544c79e2b1', 'Product6', '11e78e73-f01f-4d8a-9877-8f544c79e2b2', 600) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product6', quantity = 650;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('11e78e73-f01f-4d8a-9877-8f544c79e2b2', 'Product7', '11e78e73-f01f-4d8a-9877-8f544c79e2b3', 700) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product7', quantity = 750;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('11e78e73-f01f-4d8a-9877-8f544c79e2b3', 'Product8', '11e78e73-f01f-4d8a-9877-8f544c79e2b4', 800) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product8', quantity = 850;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('11e78e73-f01f-4d8a-9877-8f544c79e2b4', 'Product9', '11e78e73-f01f-4d8a-9877-8f544c79e2b5', 900) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product9', quantity = 950;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('11e78e73-f01f-4d8a-9877-8f544c79e2b5', 'Product10', '11e78e73-f01f-4d8a-9877-8f544c79e2b6', 1000) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product10', quantity = 1050;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('11e78e73-f01f-4d8a-9877-8f544c79e2b6', 'Product11', '11e78e73-f01f-4d8a-9877-8f544c79e2b7', 1100) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product11', quantity = 1150;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('11e78e73-f01f-4d8a-9877-8f544c79e2b7', 'Product12', '11e78e73-f01f-4d8a-9877-8f544c79e2b8', 1200) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product12', quantity = 1250;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('11e78e73-f01f-4d8a-9877-8f544c79e2b8', 'Product13', '11e78e73-f01f-4d8a-9877-8f544c79e2b9', 1300) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product13', quantity = 1350;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('11e78e73-f01f-4d8a-9877-8f544c79e2b9', 'Product14', '11e78e73-f01f-4d8a-9877-8f544c79e2ba', 1400) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product14', quantity = 1450;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('11e78e73-f01f-4d8a-9877-8f544c79e2ba', 'Product15', '11e78e73-f01f-4d8a-9877-8f544c79e2bb', 1500) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product15', quantity = 1550;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('11e78e73-f01f-4d8a-9877-8f544c79e2bb', 'Product16', '11e78e73-f01f-4d8a-9877-8f544c79e2bc', 1600) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product16', quantity = 1650;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('11e78e73-f01f-4d8a-9877-8f544c79e2bc', 'Product17', '11e78e73-f01f-4d8a-9877-8f544c79e2bd', 1700) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product17', quantity = 1750;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('11e78e73-f01f-4d8a-9877-8f544c79e2bd', 'Product18', '11e78e73-f01f-4d8a-9877-8f544c79e2be', 1800) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product18', quantity = 1850;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('11e78e73-f01f-4d8a-9877-8f544c79e2be', 'Product19', '11e78e73-f01f-4d8a-9877-8f544c79e2bf', 1900) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product19', quantity = 1950;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n  product_id UUID PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  warehouse_id UUID REFERENCES Warehouse(warehouse_id),\n  quantity INT\n);\n\n\nCREATE TABLE Warehouse (\n  warehouse_id UUID PRIMARY KEY,\n  warehouse_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Product (product_id, product_name, warehouse_id, quantity) VALUES ('11e78e73-f01f-4d8a-9877-8f544c79e2bf', 'Product20', '11e78e73-f01f-4d8a-9877-8f544c79e2c0', 2000) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product20', quantity = 2050;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, warehouse_id, quantity) VALUES (1, 'Product 1', 1, 100) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 1', warehouse_id = 1, quantity = 100;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, warehouse_id, quantity) VALUES (2, 'Product 2', 2, 200) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 2', warehouse_id = 2, quantity = 200;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, warehouse_id, quantity) VALUES (3, 'Product 3', 1, 150) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 3', warehouse_id = 1, quantity = 150;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, warehouse_id, quantity) VALUES (4, 'Product 4', 3, 120) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 4', warehouse_id = 3, quantity = 120;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, warehouse_id, quantity) VALUES (5, 'Product 5', 2, 180) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 5', warehouse_id = 2, quantity = 180;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, warehouse_id, quantity) VALUES (6, 'Product 6', 1, 90...",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, warehouse_id, quantity) VALUES (1, 'Product1', 1, 100) ON DUPLICATE KEY UPDATE quantity = quantity + 100;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, warehouse_id, quantity) VALUES (2, 'Product2', 2, 200) ON DUPLICATE KEY UPDATE quantity = quantity + 200;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, warehouse_id, quantity) VALUES (3, 'Product3', 3, 300) ON DUPLICATE KEY UPDATE quantity = quantity + 300;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, warehouse_id, quantity) VALUES (4, 'Product4', 4, 400) ON DUPLICATE KEY UPDATE quantity = quantity + 400;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, warehouse_id, quantity) VALUES (5, 'Product5', 5, 500) ON DUPLICATE KEY UPDATE quantity = quantity + 500;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, warehouse_id, quantity) VALUES (6, 'Product6', 6, 600) ON DUPLICATE KEY UPDATE quantity = quantity + 600;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, warehouse_id, quantity) VALUES (7, 'Product7', 7, 700) ON DUPLICATE KEY UPDATE quantity = quantity + 700;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, warehouse_id, quantity) VALUES (8, 'Product8', 8, 800) ON DUPLICATE KEY UPDATE quantity = quantity + 800;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, warehouse_id, quantity) VALUES (9, 'Product9', 9, 900) ON DUPLICATE KEY UPDATE quantity = quantity + 900;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, warehouse_id, quantity) VALUES (10, 'Product10', 10, 1000) ON DUPLICATE KEY UPDATE quantity = quantity + 1000;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, warehouse_id, quantity) VALUES (11, 'Product11', 1, 1100) ON DUPLICATE KEY UPDATE quantity = quantity + 1100;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, warehouse_id, quantity) VALUES (12, 'Product12', 2, 1200) ON DUPLICATE KEY UPDATE quantity = quantity + 1200;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, warehouse_id, quantity) VALUES (13, 'Product13', 3, 1300) ON DUPLICATE KEY UPDATE quantity = quantity + 1300;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, warehouse_id, quantity) VALUES (14, 'Product14', 4, 1400) ON DUPLICATE KEY UPDATE quantity = quantity + 1400;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, warehouse_id, quantity) VALUES (15, 'Product15', 5, 1500) ON DUPLICATE KEY UPDATE quantity = quantity + 1500;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, warehouse_id, quantity) VALUES (16, 'Product16', 6, 1600) ON DUPLICATE KEY UPDATE quantity = quantity + 1600;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  warehouse_id INT,\n  quantity INT\n);\n\n\nCREATE TABLE warehouses (\n  warehouse_id INT PRIMARY KEY,\n  warehouse_name VARCHAR(255),\n  location VARCHAR(255)\n);\n\n\nCREATE TABLE product_categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(255)\n);\n\n### STATEMENT\n\nUPSERT INTO inventory ...",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO Product (product_id, product_name, product_description) VALUES (1, 'Product 1', 'Description 1') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product 1', product_description = 'Updated Description 1';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO Product (product_id, product_name, product_description) VALUES (2, 'Product 2', 'Description 2') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product 2', product_description = 'Updated Description 2';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO Product (product_id, product_name, product_description) VALUES (3, 'Product 3', 'Description 3') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Updated Product 3', product_description = 'Updated Description 3';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO Product (product_id, product_name, product_description) VALUES (4, 'Product 4', 'Description 4') ON...",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO Product (product_id, product_name, product_description) VALUES (1, 'Product A', 'Description A') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product A', product_description = 'Description A';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO Product (product_id, product_name, product_description) VALUES (2, 'Product B', 'Description B') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product B', product_description = 'Description B';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO Warehouse (warehouse_id, warehouse_name, location) VALUES (1, 'Warehouse X', 'Location X') ON CONFLICT (warehouse_id) DO UPDATE SET warehouse_name = 'Warehouse X', location = 'Location X';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO Warehouse (warehouse_id, warehouse_name, location) VALUES (2, 'Warehouse Y', 'Location Y') ON CONFLICT (warehouse_id) DO UPDATE SET warehouse_name = 'Warehouse Y', location = 'Location Y';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO Inventory (inventory_id, product_id, warehouse_id, quantity) VALUES (1, 1, 1, 10) ON CONFLICT (inventory_id) DO UPDATE SET product_id = 1, warehouse_id = 1, quantity = 10;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO Inventory (inventory_id, product_id, warehouse_id, quantity) VALUES (2, 2, 2, 20) ON CONFLICT (inventory_id) DO UPDATE SET product_id = 2, warehouse_id = 2, quantity = 20;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO ProductCategory (category_id, category_name) VALUES (1, 'Category A') ON CONFLICT (category_id) DO UPDATE SET category_name = 'Category A';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO ProductCategory (category_id, category_name) VALUES (2, 'Category B') ON CONFLICT (category_id) DO UPDATE SET category_name = 'Category B';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO Product (product_id, product_name, product_description) VALUES (3, 'Product C', 'Description C') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product C', product_description = 'Description C';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO Product (product_id, product_name, product_description) VALUES (4, 'Product D', 'Description D') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product D', product_description = 'Description D';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO Warehouse (warehouse_id, warehouse_name, location) VALUES (3, 'Warehouse Z', 'Location Z') ON CONFLICT (warehouse_id) DO UPDATE SET warehouse_name = 'Warehouse Z', location = 'Location Z';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO Warehouse (warehouse_id, warehouse_name, location) VALUES (4, 'Warehouse W', 'Location W') ON CONFLICT (warehouse_id) DO UPDATE SET warehouse_name = 'Warehouse W', location = 'Location W';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO Inventory (inventory_id, product_id, warehouse_id, quantity) VALUES (3, 3, 3, 30) ON CONFLICT (inventory_id) DO UPDATE SET product_id = 3, warehouse_id = 3, quantity = 30;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO Inventory (inventory_id, product_id, warehouse_id, quantity) VALUES (4, 4, 4, 40) ON CONFLICT (inventory_id) DO UPDATE SET product_id = 4, warehouse_id = 4, quantity = 40;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO ProductCategory (category_id, category_name) VALUES (3, 'Category C') ON CONFLICT (category_id) DO UPDATE SET category_name = 'Category C';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO ProductCategory (category_id, category_name) VALUES (4, 'Category D') ON CONFLICT (category_id) DO UPDATE SET category_name = 'Category D';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO Product (product_id, product_name, product_description) VALUES (5, 'Product E', 'Description E') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product E', product_description = 'Description E';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO Product (product_id, product_name, product_description) VALUES (6, 'Product F', 'Description F') ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product F', product_description = 'Description F';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO Warehouse (warehouse_id, warehouse_name, location) VALUES (5, 'Warehouse D', 'Location D') ON CONFLICT (warehouse_id) DO UPDATE SET warehouse_name = 'Warehouse D', location = 'Location D';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_description TEXT\n);\n\nCREATE TABLE Warehouse (\n    warehouse_id INT PRIMARY KEY,\n    warehouse_name TEXT,\n    location TEXT\n);\n\nCREATE TABLE Inventory (\n    inventory_id INT PRIMARY KEY,\n    product_id INT,\n    warehouse_id INT,\n    quantity INT\n);\n\nCREATE TABLE ProductCategory (\n    category_id INT PRIMARY KEY,\n    category_name TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO Warehouse (warehouse_id, warehouse_name, location) VALUES (6, 'Warehouse E', 'Location E') ON CONFLICT (warehouse_id) DO UPDATE SET warehouse_name = 'Warehouse E', location = 'Location E';",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nINSERT INTO Product (id, name, category, price) VALUES (1, 'Product 1', 'Category A', 10.99) ON CONFLICT (id) DO UPDATE SET name='Product 1', category='Category A', price=10.99;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nINSERT INTO Product (id, name, category, price) VALUES (2, 'Product 2', 'Category B', 20.50) ON CONFLICT (id) DO UPDATE SET name='Product 2', category='Category B', price=20.50;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nINSERT INTO Product (id, name, category, price) VALUES (3, 'Product 3', 'Category C', 30.75) ON CONFLICT (id) DO UPDATE SET name='Product 3', category='Category C', price=30.75;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nINSERT INTO Product (id, name, category, price) VALUES (4, 'Product 4', 'Category A', 15.25) ON CONFLICT (id) DO UPDATE SET name='Product 4', category='Category A', price=15.25;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nINSERT INTO Product (id, name, category, price) VALUES (5, 'Product 5', 'Category B', 23.99) ON CONFLICT (id) DO UPDATE SET name='Product 5', category='Category B', price=23.99;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nINSERT INTO Warehouse (id, location) VALUES (1, 'Location 1') ON CONFLICT (id) DO UPDATE SET location='Location 1';",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nINSERT INTO Warehouse (id, location) VALUES (2, 'Location 2') ON CONFLICT (id) DO UPDATE SET location='Location 2';",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nINSERT INTO Warehouse (id, location) VALUES (3, 'Location 3') ON CONFLICT (id) DO UPDATE SET location='Location 3';",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nINSERT INTO Warehouse (id, location) VALUES (4, 'Location 4') ON CONFLICT (id) DO UPDATE SET location='Location 4';",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nINSERT INTO Warehouse (id, location) VALUES (5, 'Location 5') ON CONFLICT (id) DO UPDATE SET location='Location 5';",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nINSERT INTO Inventory (product_id, warehouse_id, quantity) VALUES (1, 1, 100) ON CONFLICT (product_id, warehouse_id) DO UPDATE SET quantity=100;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nINSERT INTO Inventory (product_id, warehouse_id, quantity) VALUES (2, 2, 200) ON CONFLICT (product_id, warehouse_id) DO UPDATE SET quantity=200;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nINSERT INTO Inventory (product_id, warehouse_id, quantity) VALUES (3, 3, 150) ON CONFLICT (product_id, warehouse_id) DO UPDATE SET quantity=150;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nINSERT INTO Inventory (product_id, warehouse_id, quantity) VALUES (4, 4, 120) ON CONFLICT (product_id, warehouse_id) DO UPDATE SET quantity=120;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nINSERT INTO Inventory (product_id, warehouse_id, quantity) VALUES (5, 5, 180) ON CONFLICT (product_id, warehouse_id) DO UPDATE SET quantity=180;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nINSERT INTO Supplier (id, name, contact_name, email) VALUES (1, 'Supplier 1', 'John Doe', 'supplier1@example.com') ON CONFLICT (id) DO UPDATE SET name='Supplier 1', contact_name='John Doe', email='supplier1@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nINSERT INTO Supplier (id, name, contact_name, email) VALUES (2, 'Supplier 2', 'Jane Smith', 'supplier2@example.com') ON CONFLICT (id) DO UPDATE SET name='Supplier 2', contact_name='Jane Smith', email='supplier2@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nINSERT INTO Supplier (id, name, contact_name, email) VALUES (3, 'Supplier 3', 'Alice Johnson', 'supplier3@example.com') ON CONFLICT (id) DO UPDATE SET name='Supplier 3', contact_name='Alice Johnson', email='supplier3@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nINSERT INTO Supplier (id, name, contact_name, email) VALUES (4, 'Supplier 4', 'Bob Brown', 'supplier4@example.com') ON CONFLICT (id) DO UPDATE SET name='Supplier 4', contact_name='Bob Brown', email='supplier4@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nINSERT INTO Supplier (id, name, contact_name, email) VALUES (5, 'Supplier 5', 'Eve Wilson', 'supplier5@example.com') ON CONFLICT (id) DO UPDATE SET name='Supplier 5', contact_name='Eve Wilson', email='supplier5@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nINSERT INTO ProductSupplier (product_id, supplier_id) VALUES (1, 1) ON CONFLICT (product_id, supplier_id) DO UPDATE SET product_id=1, supplier_id=1;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nINSERT INTO ProductSupplier (product_id, supplier_id) VALUES (2, 2) ON CONFLICT (product_id, supplier_id) DO UPDATE SET product_id=2, supplier_id=2;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nINSERT INTO ProductSupplier (product_id, supplier_id) VALUES (3, 3) ON CONFLICT (product_id, supplier_id) DO UPDATE SET product_id=3, supplier_id=3;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nINSERT INTO ProductSupplier (product_id, supplier_id) VALUES (4, 4) ON CONFLICT (product_id, supplier_id) DO UPDATE SET product_id=4, supplier_id=4;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nINSERT INTO ProductSupplier (product_id, supplier_id) VALUES (5, 5) ON CONFLICT (product_id, supplier_id) DO UPDATE SET product_id=5, supplier_id=5;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nUPSERT INTO Product (id, name, category, price) VALUES (1, 'ProductA', 'CategoryA', 10.00) ON DUPLICATE KEY UPDATE name = 'ProductA', category = 'CategoryA', price = 10.00;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nUPSERT INTO Product (id, name, category, price) VALUES (2, 'ProductB', 'CategoryB', 15.00) ON DUPLICATE KEY UPDATE name = 'ProductB', category = 'CategoryB', price = 15.00;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nUPSERT INTO Product (id, name, category, price) VALUES (3, 'ProductC', 'CategoryC', 20.00) ON DUPLICATE KEY UPDATE name = 'ProductC', category = 'CategoryC', price = 20.00;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nUPSERT INTO Product (id, name, category, price) VALUES (4, 'ProductD', 'CategoryD', 25.00) ON DUPLICATE KEY UPDATE name = 'ProductD', category = 'CategoryD', price = 25.00;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nUPSERT INTO Product (id, name, category, price) VALUES (5, 'ProductE', 'CategoryE', 30.00) ON DUPLICATE KEY UPDATE name = 'ProductE', category = 'CategoryE', price = 30.00;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nUPSERT INTO Product (id, name, category, price) VALUES (6, 'ProductF', 'CategoryF', 35.00) ON DUPLICATE KEY UPDATE name = 'ProductF', category = 'CategoryF', price = 35.00;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nUPSERT INTO Product (id, name, category, price) VALUES (7, 'ProductG', 'CategoryG', 40.00) ON DUPLICATE KEY UPDATE name = 'ProductG', category = 'CategoryG', price = 40.00;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nUPSERT INTO Product (id, name, category, price) VALUES (8, 'ProductH', 'CategoryH', 45.00) ON DUPLICATE KEY UPDATE name = 'ProductH', category = 'CategoryH', price = 45.00;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nUPSERT INTO Product (id, name, category, price) VALUES (9, 'ProductI', 'CategoryI', 50.00) ON DUPLICATE KEY UPDATE name = 'ProductI', category = 'CategoryI', price = 50.00;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nUPSERT INTO Product (id, name, category, price) VALUES (10, 'ProductJ', 'CategoryJ', 55.00) ON DUPLICATE KEY UPDATE name = 'ProductJ', category = 'CategoryJ', price = 55.00;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nUPSERT INTO Product (id, name, category, price) VALUES (11, 'ProductK', 'CategoryK', 60.00) ON DUPLICATE KEY UPDATE name = 'ProductK', category = 'CategoryK', price = 60.00;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nUPSERT INTO Product (id, name, category, price) VALUES (12, 'ProductL', 'CategoryL', 65.00) ON DUPLICATE KEY UPDATE name = 'ProductL', category = 'CategoryL', price = 65.00;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nUPSERT INTO Product (id, name, category, price) VALUES (13, 'ProductM', 'CategoryM', 70.00) ON DUPLICATE KEY UPDATE name = 'ProductM', category = 'CategoryM', price = 70.00;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nUPSERT INTO Product (id, name, category, price) VALUES (14, 'ProductN', 'CategoryN', 75.00) ON DUPLICATE KEY UPDATE name = 'ProductN', category = 'CategoryN', price = 75.00;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nUPSERT INTO Product (id, name, category, price) VALUES (15, 'ProductO', 'CategoryO', 80.00) ON DUPLICATE KEY UPDATE name = 'ProductO', category = 'CategoryO', price = 80.00;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nUPSERT INTO Product (id, name, category, price) VALUES (16, 'ProductP', 'CategoryP', 85.00) ON DUPLICATE KEY UPDATE name = 'ProductP', category = 'CategoryP', price = 85.00;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nUPSERT INTO Product (id, name, category, price) VALUES (17, 'ProductQ', 'CategoryQ', 90.00) ON DUPLICATE KEY UPDATE name = 'ProductQ', category = 'CategoryQ', price = 90.00;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nUPSERT INTO Product (id, name, category, price) VALUES (18, 'ProductR', 'CategoryR', 95.00) ON DUPLICATE KEY UPDATE name = 'ProductR', category = 'CategoryR', price = 95.00;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nUPSERT INTO Product (id, name, category, price) VALUES (19, 'ProductS', 'CategoryS', 100.00) ON DUPLICATE KEY UPDATE name = 'ProductS', category = 'CategoryS', price = 100.00;",
  "### TABLEDATA\n\nCREATE TABLE Product ( \n    id INT PRIMARY KEY, \n    name VARCHAR(255) NOT NULL, \n    category VARCHAR(50), \n    price DECIMAL(10,2) NOT NULL \n);\n\nCREATE TABLE Warehouse ( \n    id INT PRIMARY KEY, \n    location VARCHAR(100) NOT NULL \n);\n\nCREATE TABLE Inventory ( \n    product_id INT REFERENCES Product(id), \n    warehouse_id INT REFERENCES Warehouse(id), \n    quantity INT NOT NULL, \n    PRIMARY KEY (product_id, warehouse_id) \n);\n\nCREATE TABLE Supplier ( \n    id INT PRIMARY KEY, \n    name VARCHAR(100) NOT NULL, \n    contact_name VARCHAR(100), \n    email VARCHAR(255) \n);\n\nCREATE TABLE ProductSupplier ( \n    product_id INT REFERENCES Product(id), \n    supplier_id INT REFERENCES Supplier(id), \n    PRIMARY KEY (product_id, supplier_id) \n);\n\n### STATEMENT\n\nUPSERT INTO Product (id, name, category, price) VALUES (20, 'ProductT', 'CategoryT', 105.00) ON DUPLICATE KEY UPDATE name = 'ProductT', category = 'CategoryT', price = 105.00;"
]