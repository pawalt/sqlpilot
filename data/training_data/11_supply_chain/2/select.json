[
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers WHERE supplier_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT supplier_name, email FROM suppliers WHERE supplier_id > 10;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers WHERE supplier_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT supplier_name, contact_person FROM suppliers WHERE email IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers WHERE phone_number LIKE '%123%';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT supplier_name FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers WHERE supplier_name IN ('Supplier A', 'Supplier B');",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT supplier_id, email FROM suppliers WHERE supplier_id < 5;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT supplier_id, supplier_name, contact_person FROM suppliers WHERE supplier_name = 'Supplier C';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT supplier_name, phone_number FROM suppliers WHERE supplier_id BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers WHERE contact_person IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT supplier_id, supplier_name FROM suppliers WHERE email LIKE '%@example.com';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers WHERE phone_number IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT supplier_id, email FROM suppliers WHERE supplier_name <> 'Supplier D';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT supplier_name, contact_person FROM suppliers WHERE supplier_id > 15;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT supplier_id, email FROM suppliers WHERE supplier_name = 'Supplier E';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers WHERE supplier_id = 3 OR supplier_id = 7;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT supplier_id, supplier_name FROM suppliers WHERE supplier_id IN (2, 4, 6);",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers WHERE supplier_id < 10;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers WHERE supplier_name='ABC Corp';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT supplier_name, email FROM suppliers WHERE contact_person='John Doe';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers WHERE email LIKE '%@example.com';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT supplier_name, phone_number FROM suppliers WHERE supplier_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers WHERE supplier_id BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT supplier_name, email FROM suppliers WHERE supplier_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers WHERE supplier_name='XYZ Ltd' OR email='xyz@example.com';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT supplier_name FROM suppliers WHERE supplier_name='Acme Co' AND phone_number IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers WHERE supplier_id NOT IN (4, 6, 8);",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers ORDER BY supplier_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT supplier_name, email FROM suppliers ORDER BY supplier_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT supplier_name, email FROM suppliers WHERE supplier_name='XYZ Corp' GROUP BY email;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(supplier_id) AS total_suppliers FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT contact_person FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers WHERE supplier_name='Acme Ltd' LIMIT 5 OFFSET 10;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(supplier_id) AS avg_id FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT supplier_name, phone_number FROM suppliers WHERE supplier_name='ABC Corp' AND contact_person IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT supplier_id, supplier_name FROM suppliers WHERE email IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers WHERE supplier_name='Sample Inc' AND phone_number LIKE '%555%';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name TEXT NOT NULL,\n  contact_person TEXT,\n  email TEXT,\n  phone_number TEXT\n);\n\n### STATEMENT\n\nSELECT supplier_name, COUNT(*) AS total_contacts FROM suppliers GROUP BY supplier_name HAVING COUNT(*) >= 2;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, supplier_address FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT contact_person_name, contact_person_email FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT * FROM contracts;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_id, contract_start_date, contract_end_date FROM contracts;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT contract_id, contract_value FROM contracts;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT suppliers.supplier_name, contracts.contract_value FROM suppliers INNER JOIN contracts ON suppliers.supplier_id = contracts.supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT suppliers.supplier_name, contacts.contract_start_date, contacts.contract_end_date FROM suppliers INNER JOIN contracts ON suppliers.supplier_id = contracts.supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT suppliers.supplier_name, contracts.contract_value FROM suppliers LEFT JOIN contracts ON suppliers.supplier_id = contracts.supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT suppliers.supplier_name, contracts.contract_value FROM suppliers RIGHT JOIN contracts ON suppliers.supplier_id = contracts.supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT suppliers.supplier_name, contracts.contract_value FROM suppliers FULL JOIN contracts ON suppliers.supplier_id = contracts.supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers WHERE supplier_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT * FROM contracts WHERE supplier_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, supplier_address FROM suppliers WHERE supplier_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, supplier_address FROM suppliers WHERE supplier_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, supplier_address FROM suppliers WHERE supplier_name LIKE '%Inc%';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers ORDER BY supplier_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers ORDER BY supplier_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT * FROM contracts WHERE contract_value > 1000;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT * FROM contracts WHERE contract_start_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, supplier_address FROM suppliers WHERE supplier_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, contact_person_name FROM suppliers WHERE supplier_address LIKE '%Street%';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, contact_person_email FROM suppliers WHERE supplier_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, contact_person_name FROM suppliers WHERE supplier_name LIKE 'A%' ORDER BY supplier_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, supplier_address FROM suppliers WHERE supplier_id NOT IN (SELECT supplier_id FROM contracts);",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, COUNT(*) AS contracts_count FROM suppliers JOIN contracts ON suppliers.supplier_id = contracts.supplier_id GROUP BY supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, contract_value FROM suppliers JOIN contracts ON suppliers.supplier_id = contracts.supplier_id WHERE contract_value > 1000;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, contract_start_date FROM suppliers JOIN contracts ON suppliers.supplier_id = contracts.supplier_id WHERE contract_start_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_id, contract_id, contract_value FROM contracts WHERE contract_value = (SELECT MAX(contract_value) FROM contracts);",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, AVG(contract_value) AS average_value FROM suppliers JOIN contracts ON suppliers.supplier_id = contracts.supplier_id GROUP BY supplier_id HAVING AVG(contract_value) > 5000;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, contact_person_name, contract_start_date, contract_end_date FROM suppliers JOIN contracts ON suppliers.supplier_id = contracts.supplier_id WHERE contract_start_date < '2022-06-01' AND contract_end_date > '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, COUNT(contract_id) AS total_contracts FROM suppliers LEFT JOIN contracts ON suppliers.supplier_id = contracts.supplier_id GROUP BY supplier_id HAVING total_contracts < 5;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, SUM(contract_value) AS total_value FROM suppliers JOIN contracts ON suppliers.supplier_id = contracts.supplier_id GROUP BY supplier_id ORDER BY total_value DESC;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, MIN(contract_value) AS min_value, MAX(contract_value) AS max_value FROM suppliers JOIN contracts ON suppliers.supplier_id = contracts.supplier_id GROUP BY supplier_id HAVING max_value - min_value > 5000;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, contact_person_email FROM suppliers WHERE supplier_id = (SELECT supplier_id FROM contracts WHERE contract_value > 10000);",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, contact_person_name, contract_start_date, contract_end_date FROM suppliers JOIN contracts ON suppliers.supplier_id = contracts.supplier_id WHERE (YEAR(contract_start_date) = 2022 AND MONTH(contract_start_date) = 7) OR (YEAR(contract_end_date) = 2022 AND MONTH(contract_end_date) = 12);",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, contract_value FROM suppliers JOIN contracts ON suppliers.supplier_id = contracts.supplier_id WHERE contract_start_date > '2022-01-01' AND contract_end_date < '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, AVG(DATEDIFF(contract_end_date, contract_start_date)) AS average_contract_length FROM suppliers JOIN contracts ON suppliers.supplier_id = contracts.supplier_id GROUP BY supplier_id HAVING average_contract_length > 365;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, contact_person_email FROM suppliers WHERE supplier_id IN (SELECT supplier_id FROM contracts WHERE contract_value > 5000);",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    supplier_address VARCHAR(100),\n    contact_person_name VARCHAR(50),\n    contact_person_email VARCHAR(50)\n);\n\nCREATE TABLE contracts (\n    contract_id INT PRIMARY KEY,\n    supplier_id INT,\n    contract_start_date DATE,\n    contract_end_date DATE,\n    contract_value DECIMAL(10, 2),\n    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, contact_person_name, COUNT(contract_id) AS total_contracts FROM suppliers LEFT JOIN contracts ON suppliers.supplier_id = contracts.supplier_id GROUP BY supplier_id HAVING total_contracts < 3;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, supplier_address FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT * FROM contracts;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT contract_id, contract_start_date, contract_end_date FROM contracts;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT * FROM products;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT product_name FROM products;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, product_name FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, contract_start_date, contract_end_date FROM suppliers INNER JOIN contracts ON suppliers.supplier_id = contracts.supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, product_name, contract_start_date FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id INNER JOIN contracts ON suppliers.supplier_id = contracts.supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers WHERE supplier_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT * FROM contracts WHERE supplier_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE supplier_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, supplier_address FROM suppliers WHERE supplier_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT product_name FROM products WHERE supplier_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers ORDER BY supplier_name;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT * FROM contracts ORDER BY contract_start_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT * FROM products LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, product_name FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id WHERE suppliers.supplier_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, product_name FROM suppliers INNER JOIN products ON suppliers.supplier_id = products.supplier_id WHERE products.product_name LIKE '%a%';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, contract_start_date, contract_end_date FROM suppliers INNER JOIN contracts ON suppliers.supplier_id = contracts.supplier_id WHERE suppliers.supplier_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, supplier_address FROM suppliers WHERE supplier_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT * FROM contracts WHERE supplier_id = 3 AND contract_start_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, contract_id FROM suppliers JOIN contracts ON suppliers.supplier_id = contracts.supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, product_name FROM suppliers JOIN products ON suppliers.supplier_id = products.supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, contract_start_date, contract_end_date FROM suppliers JOIN contracts ON suppliers.supplier_id = contracts.supplier_id WHERE contract_end_date > '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, COUNT(*) AS total_contracts FROM suppliers JOIN contracts ON suppliers.supplier_id = contracts.supplier_id GROUP BY supplier_name;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, product_name, contract_start_date FROM suppliers JOIN products ON suppliers.supplier_id = products.supplier_id JOIN contracts ON suppliers.supplier_id = contracts.supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, AVG(DATEDIFF(contract_end_date, contract_start_date)) AS avg_contract_duration FROM suppliers JOIN contracts ON suppliers.supplier_id = contracts.supplier_id GROUP BY supplier_name;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT MAX(DATEDIFF(contract_end_date, contract_start_date)) AS longest_contract_duration FROM contracts;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, product_name, contract_start_date, contract_end_date FROM suppliers JOIN products ON suppliers.supplier_id = products.supplier_id JOIN contracts ON suppliers.supplier_id = contracts.supplier_id WHERE contract_end_date > '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, product_name FROM suppliers JOIN products ON suppliers.supplier_id = products.supplier_id WHERE product_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, product_name FROM suppliers JOIN products ON suppliers.supplier_id = products.supplier_id ORDER BY product_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT supplier_name FROM suppliers JOIN contracts ON suppliers.supplier_id = contracts.supplier_id WHERE contract_start_date < '2022-05-01';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_id, COUNT(*) AS total_products FROM suppliers JOIN products ON suppliers.supplier_id = products.supplier_id GROUP BY supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, MAX(product_id) AS latest_product_id FROM suppliers JOIN products ON suppliers.supplier_id = products.supplier_id GROUP BY supplier_name;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, product_name, contract_start_date, contract_end_date FROM suppliers JOIN products ON suppliers.supplier_id = products.supplier_id JOIN contracts ON suppliers.supplier_id = contracts.supplier_id WHERE supplier_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_id, AVG(DATEDIFF(contract_end_date, contract_start_date)) AS avg_contract_duration FROM suppliers JOIN contracts ON suppliers.supplier_id = contracts.supplier_id GROUP BY supplier_id HAVING avg_contract_duration > 365;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, COUNT(*) AS total_products FROM suppliers LEFT JOIN products ON suppliers.supplier_id = products.supplier_id GROUP BY supplier_name HAVING COUNT(*) < 3;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255),\n  supplier_address VARCHAR(255)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  contract_start_date DATE,\n  contract_end_date DATE,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255),\n  supplier_id INT,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, MIN(DATEDIFF(contract_end_date, contract_start_date)) AS shortest_contract_duration FROM suppliers JOIN contracts ON suppliers.supplier_id = contracts.supplier_id GROUP BY supplier_name;",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT * FROM Supplier",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT supplier_name, email FROM Supplier",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT contact_name, phone_number FROM Supplier WHERE supplier_id = 1",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT * FROM Contract",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT supplier_id, start_date FROM Contract WHERE contract_id = 5",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT * FROM Product",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT product_name, price FROM Product WHERE supplier_id = 3",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT * FROM Category",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT category_name FROM Category WHERE category_id = 2",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT product_name, price FROM Product JOIN Supplier ON Product.supplier_id = Supplier.supplier_id",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT supplier_name, email, category_name FROM Supplier JOIN Product ON Supplier.supplier_id = Product.supplier_id JOIN Category ON Product.category_id = Category.category_id",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT * FROM Supplier LIMIT 5",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT * FROM Contract LIMIT 10",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT * FROM Product LIMIT 5",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT * FROM Category LIMIT 3",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT * FROM Supplier WHERE supplier_name LIKE 'A%'",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT * FROM Contract WHERE start_date >= '2022-01-01' AND end_date <= '2022-12-31'",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT * FROM Product WHERE price > 100",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT * FROM Category WHERE category_name = 'Electronics'",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT * FROM Supplier ORDER BY supplier_name ASC",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT * FROM Supplier WHERE supplier_id = 1;",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT supplier_name, contact_name, email FROM Supplier WHERE supplier_id > 5;",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT * FROM Supplier WHERE supplier_name LIKE '%electronics%';",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT c.contract_id, s.supplier_name, c.start_date, c.end_date FROM Contract c JOIN Supplier s ON c.supplier_id = s.supplier_id;",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT p.product_id, p.product_name, s.supplier_name, p.price, p.quantity FROM Product p JOIN Supplier s ON p.supplier_id = s.supplier_id;",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT c.contract_id, p.product_name, p.price, p.quantity FROM Contract c JOIN Product p ON c.supplier_id = p.supplier_id;",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT s.supplier_name, p.product_name, p.price FROM Supplier s JOIN Product p ON s.supplier_id = p.supplier_id WHERE p.quantity > 0;",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT s.supplier_name, c.value FROM Supplier s JOIN Contract c ON s.supplier_id = c.supplier_id WHERE c.end_date > '2022-12-31';",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT s.supplier_name, COUNT(p.product_id) AS total_products FROM Supplier s JOIN Product p ON s.supplier_id = p.supplier_id GROUP BY s.supplier_id;",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT c.contract_id, c.value, s.supplier_name, p.product_name FROM Contract c JOIN Supplier s ON c.supplier_id = s.supplier_id JOIN Product p ON s.supplier_id = p.supplier_id;",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT SUM(p.price * p.quantity) AS total_revenue FROM Product p;",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT c.contract_id, AVG(c.value) AS avg_contract_value FROM Contract c;",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT s.supplier_name, MAX(p.price) AS max_price FROM Supplier s JOIN Product p ON s.supplier_id = p.supplier_id;",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT c.contract_id, MIN(p.quantity) AS min_quantity FROM Contract c JOIN Product p ON c.supplier_id = p.supplier_id;",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT s.supplier_name, c.value FROM Supplier s JOIN Contract c ON s.supplier_id = c.supplier_id ORDER BY c.value DESC;",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT s.supplier_name, c.contract_id, p.product_name FROM Supplier s JOIN Contract c ON s.supplier_id = c.supplier_id JOIN Product p ON c.supplier_id = p.supplier_id ORDER BY s.supplier_name, c.contract_id;",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT s.supplier_name, p.product_name, p.price, p.quantity FROM Supplier s JOIN Product p ON s.supplier_id = p.supplier_id WHERE p.price BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT c.contract_id, s.supplier_name, p.product_name, c.value FROM Contract c JOIN Supplier s ON c.supplier_id = s.supplier_id JOIN Product p ON c.supplier_id = p.supplier_id WHERE DATE_FORMAT(c.start_date, '%Y-%m') = '2022-01';",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT s.supplier_name, COUNT(DISTINCT p.product_id) AS unique_products FROM Supplier s JOIN Product p ON s.supplier_id = p.supplier_id;",
  "### TABLEDATA\n\nSupplier (supplier_id INT PRIMARY KEY, supplier_name VARCHAR(255), contact_name VARCHAR(255), email VARCHAR(255), phone_number VARCHAR(15))\n\nContract (contract_id INT PRIMARY KEY, supplier_id INT, start_date DATE, end_date DATE, value DECIMAL(10, 2))\n\nProduct (product_id INT PRIMARY KEY, product_name VARCHAR(255), supplier_id INT, price DECIMAL(10, 2), quantity INT)\n\nCategory (category_id INT PRIMARY KEY, category_name VARCHAR(255))\n\n### STATEMENT\n\nSELECT s.supplier_name, p.product_name, p.quantity FROM Supplier s JOIN Product p ON s.supplier_id = p.supplier_id HAVING p.quantity < 10;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, address FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT * FROM products;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT product_name, price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT * FROM contracts;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT start_date, end_date FROM contracts;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT * FROM payments;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT payment_date, amount FROM payments;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT * FROM reviews;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT rating, comments FROM reviews;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, address, phone_number FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT product_name, price, supplier_id FROM products;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, address, contract_id FROM suppliers, contracts WHERE suppliers.supplier_id = contracts.supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT product_name, price, supplier_name FROM products, suppliers WHERE products.supplier_id = suppliers.supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT contract_id, start_date, end_date, supplier_name FROM contracts, suppliers WHERE contracts.supplier_id = suppliers.supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT review_id, rating, comments, supplier_name FROM reviews, contracts, suppliers WHERE reviews.contract_id = contracts.contract_id AND contracts.supplier_id = suppliers.supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers WHERE supplier_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE price > 100;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT * FROM contracts WHERE value > 5000;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT * FROM payments WHERE amount < 1000;",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers WHERE supplier_name LIKE 'A%'",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT products.product_name, suppliers.supplier_name FROM products INNER JOIN suppliers ON products.supplier_id = suppliers.supplier_id",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT contracts.contract_id, suppliers.supplier_name, contracts.start_date FROM contracts INNER JOIN suppliers ON contracts.supplier_id = suppliers.supplier_id",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT products.product_name, payments.amount FROM products INNER JOIN contracts ON products.supplier_id = contracts.supplier_id INNER JOIN payments ON contracts.contract_id = payments.contract_id",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT reviews.review_id, reviews.rating, reviews.comments, contracts.start_date FROM reviews INNER JOIN contracts ON reviews.contract_id = contracts.contract_id",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT suppliers.supplier_name, COUNT(products.product_id) AS num_products FROM suppliers LEFT JOIN products ON suppliers.supplier_id = products.supplier_id GROUP BY suppliers.supplier_id HAVING num_products > 5",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT MAX(price) AS max_price FROM products",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT suppliers.supplier_name, AVG(value) AS avg_contract_value FROM suppliers INNER JOIN contracts ON suppliers.supplier_id = contracts.supplier_id GROUP BY suppliers.supplier_id",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT * FROM payments WHERE payment_date BETWEEN '2022-01-01' AND '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT products.product_name, AVG(reviews.rating) AS avg_rating FROM products INNER JOIN contracts ON products.supplier_id = contracts.supplier_id INNER JOIN reviews ON contracts.contract_id = reviews.contract_id GROUP BY products.product_id HAVING avg_rating > 3",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT suppliers.supplier_name, SUM(payments.amount) AS total_payments FROM suppliers INNER JOIN contracts ON suppliers.supplier_id = contracts.supplier_id INNER JOIN payments ON contracts.contract_id = payments.contract_id GROUP BY suppliers.supplier_id",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT products.product_name FROM products",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT suppliers.supplier_name, COUNT(DISTINCT contracts.contract_id) AS num_contracts FROM suppliers INNER JOIN contracts ON suppliers.supplier_id = contracts.supplier_id GROUP BY suppliers.supplier_id",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT contract_id, start_date, end_date FROM contracts WHERE value > 100000",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, phone_number FROM suppliers ORDER BY supplier_name ASC",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, COUNT(CONVERT(date, start_date)) AS num_contracts_started_in_2022 FROM suppliers INNER JOIN contracts ON suppliers.supplier_id = contracts.supplier_id WHERE start_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY suppliers.supplier_id",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT products.product_name, AVG(price) AS avg_price FROM products GROUP BY products.product_name HAVING AVG(price) > 50",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT suppliers.supplier_name, MAX(reviews.rating) AS max_rating FROM suppliers INNER JOIN contracts ON suppliers.supplier_id = contracts.supplier_id INNER JOIN reviews ON contracts.contract_id = reviews.contract_id GROUP BY suppliers.supplier_id",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(amount) AS total_payments FROM products INNER JOIN contracts ON products.supplier_id = contracts.supplier_id INNER JOIN payments ON contracts.contract_id = payments.contract_id GROUP BY product_name HAVING total_payments > 1000",
  "### TABLEDATA\n\nCREATE TABLE suppliers (\n  supplier_id INT PRIMARY KEY,\n  supplier_name VARCHAR(255) NOT NULL,\n  address VARCHAR(255) NOT NULL,\n  phone_number VARCHAR(20) NOT NULL\n);\n\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  supplier_id INT,\n  price DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE contracts (\n  contract_id INT PRIMARY KEY,\n  supplier_id INT,\n  start_date DATE NOT NULL,\n  end_date DATE NOT NULL,\n  value DECIMAL(15, 2) NOT NULL,\n  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)\n);\n\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  contract_id INT,\n  payment_date DATE NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n\nCREATE TABLE reviews (\n  review_id INT PRIMARY KEY,\n  contract_id INT,\n  rating INT NOT NULL,\n  comments TEXT,\n  FOREIGN KEY (contract_id) REFERENCES contracts(contract_id)\n);\n\n### STATEMENT\n\nSELECT supplier_name, MAX(value) AS max_contract_value FROM suppliers INNER JOIN contracts ON suppliers.supplier_id = contracts.supplier_id GROUP BY supplier_name HAVING max_contract_value > 50000"
]