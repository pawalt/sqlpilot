[
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT material_id, material_name FROM incoming_materials;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT material_id, supplier_id FROM incoming_materials;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT material_name, quantity FROM incoming_materials;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_id, purchase_date FROM incoming_materials;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM incoming_materials WHERE material_id = '12345678-1234-5678-1234-567812345678';",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM incoming_materials WHERE material_name = 'Material1';",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM incoming_materials WHERE supplier_id = '87654321-4321-8765-4321-876543218765';",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM incoming_materials WHERE quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM incoming_materials WHERE purchase_date BETWEEN '2023-01-01' AND '2023-12-31';",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM incoming_materials;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(quantity) FROM incoming_materials;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT MAX(quantity) FROM incoming_materials;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT MIN(quantity) FROM incoming_materials;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT SUM(quantity) FROM incoming_materials;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT material_id, material_name, supplier_id, quantity, purchase_date FROM incoming_materials;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT material_id, material_name, quantity FROM incoming_materials WHERE quantity < 50;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_id, purchase_date FROM incoming_materials WHERE purchase_date > '2023-06-01';",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT material_name, quantity FROM incoming_materials WHERE supplier_id = '56781234-8765-1234-5678-123456781234';",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT material_id, material_name, supplier_id, purchase_date FROM incoming_materials WHERE purchase_date < '2023-03-15';",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM incoming_materials ORDER BY purchase_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM incoming_materials WHERE quantity > 100 AND purchase_date >= '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT material_name, quantity FROM incoming_materials WHERE supplier_id = '123456';",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT material_id, material_name FROM incoming_materials WHERE purchase_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM incoming_materials ORDER BY purchase_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM incoming_materials;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(quantity) FROM incoming_materials WHERE supplier_id = '789101';",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT material_name, supplier_id FROM incoming_materials WHERE material_name LIKE '%steel%';",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT SUM(quantity) FROM incoming_materials WHERE purchase_date = '2021-07-15';",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT material_id, quantity FROM incoming_materials WHERE supplier_id IN ('111222', '333444');",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT MIN(quantity), MAX(quantity) FROM incoming_materials;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT material_id, quantity FROM incoming_materials WHERE purchase_date < '2021-06-30' AND supplier_id = '555666';",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT supplier_id FROM incoming_materials;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT material_id, purchase_date FROM incoming_materials WHERE material_name = 'wood' AND supplier_id = '777888';",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM incoming_materials WHERE material_id = '999000';",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT material_name, COUNT(*) FROM incoming_materials GROUP BY material_name;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_id, SUM(quantity) FROM incoming_materials GROUP BY supplier_id HAVING SUM(quantity) > 500;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT material_id, material_name, quantity FROM incoming_materials WHERE material_name = 'metal' AND quantity > 50 ORDER BY purchase_date;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM incoming_materials WHERE purchase_date = (SELECT MAX(purchase_date) FROM incoming_materials);",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT material_id, supplier_id, quantity, purchase_date FROM incoming_materials WHERE material_name <> 'plastic' ORDER BY purchase_date ASC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n  material_id UUID PRIMARY KEY,\n  material_name STRING,\n  supplier_id UUID,\n  quantity INT,\n  purchase_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(quantity), SUM(quantity) FROM incoming_materials GROUP BY supplier_id HAVING SUM(quantity) > 300;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT * FROM materials;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT material_id, material_name FROM materials;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT * FROM quality_control;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT qc_id, inspector_name FROM quality_control;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT material_name, quantity FROM materials;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT qc_id, result FROM quality_control;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT material_id, supplier_id FROM materials;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT material_name, quantity FROM materials WHERE quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT qc_id, inspector_name, date_inspected FROM quality_control WHERE result = 'Pass';",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT * FROM materials WHERE date_received > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT qc_id, inspector_name FROM quality_control WHERE date_inspected < '2022-05-01';",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT material_name, quantity FROM materials WHERE supplier_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT material_id, supplier_id FROM materials WHERE quantity < 50;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT qc_id, inspector_name FROM quality_control WHERE inspector_name LIKE '%Smith%';",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT material_name, supplier_id FROM materials WHERE quantity IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT material_id, quantity FROM materials WHERE date_received IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT qc_id, inspector_name, result FROM quality_control WHERE date_inspected BETWEEN '2022-01-01' AND '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT material_name, quantity, date_received FROM materials ORDER BY date_received DESC;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT qc_id, inspector_name, date_inspected FROM quality_control ORDER BY date_inspected ASC;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT * FROM materials WHERE quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT material_name, supplier_id, quantity FROM materials WHERE supplier_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT material_name, supplier_id, quantity FROM materials ORDER BY quantity DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT * FROM materials WHERE date_received BETWEEN '2022-01-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT material_id, material_name, QC.result FROM materials INNER JOIN quality_control AS QC ON materials.material_id = QC.material_id;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT materials.material_name, QC.result FROM materials LEFT JOIN quality_control AS QC ON materials.material_id = QC.material_id;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT materials.material_name, QC.result FROM materials RIGHT JOIN quality_control AS QC ON materials.material_id = QC.material_id;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT materials.material_name, QC.result FROM materials INNER JOIN quality_control AS QC ON materials.material_id = QC.material_id WHERE QC.result = 'Pass';",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT materials.material_name, QC.result FROM materials INNER JOIN quality_control AS QC ON materials.material_id = QC.material_id WHERE QC.result = 'Fail';",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT materials.material_name, QC.result FROM materials INNER JOIN quality_control AS QC ON materials.material_id = QC.material_id WHERE QC.date_inspected > '2022-05-01';",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT material_name, supplier_id FROM materials WHERE material_id IN (SELECT material_id FROM quality_control WHERE result = 'Fail');",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT material_name, supplier_id FROM materials WHERE material_id NOT IN (SELECT material_id FROM quality_control WHERE result = 'Pass');",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT material_name, supplier_id, AVG(quantity) AS avg_quantity FROM materials GROUP BY material_name, supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT material_name, supplier_id, SUM(quantity) AS total_quantity FROM materials GROUP BY supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT material_name, supplier_id, COUNT(*) AS total_materials FROM materials GROUP BY supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT material_name, supplier_id, MAX(quantity) AS max_quantity FROM materials GROUP BY supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT material_name, COUNT(*) AS total_records FROM materials UNION SELECT inspector_name, COUNT(*) AS total_records FROM quality_control;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT material_name, SUM(quantity) AS total_quantity FROM materials GROUP BY material_name HAVING SUM(quantity) > 500;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT material_name, AVG(quantity) AS avg_quantity FROM materials GROUP BY material_name HAVING AVG(quantity) < 100;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT NOT NULL,\n    quantity INT,\n    date_received DATE\n);\n\n\nCREATE TABLE quality_control (\n    qc_id INT PRIMARY KEY,\n    material_id INT NOT NULL,\n    inspector_name VARCHAR(50) NOT NULL,\n    result VARCHAR(20) NOT NULL,\n    date_inspected DATE\n);\n\n### STATEMENT\n\nSELECT material_id, material_name, QC.result FROM materials INNER JOIN quality_control AS QC ON materials.material_id = QC.material_id WHERE date_received > '2022-01-01' AND date_received < '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT * FROM materials",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT material_name, quantity FROM materials",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT * FROM quality_checks",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT inspector_name, department FROM inspectors",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT material_id, material_name, supplier_id, quantity, date_received FROM materials",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT check_id, material_id, inspector_id, check_result, check_date FROM quality_checks",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT inspector_id, inspector_name, department FROM inspectors",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT * FROM materials WHERE quantity > 50",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT * FROM materials WHERE supplier_id = 100",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT * FROM quality_checks WHERE check_result = 'Fail'",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT material_name FROM materials WHERE material_id = 1",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT inspector_name FROM inspectors WHERE department = 'Quality Control'",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT * FROM materials ORDER BY material_name ASC",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT * FROM quality_checks ORDER BY check_date DESC",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM materials",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT AVG(quantity) FROM materials",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT MAX(quantity) FROM materials",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT inspector_id, COUNT(*) FROM quality_checks GROUP BY inspector_id",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT material_id, COUNT(*) FROM quality_checks GROUP BY material_id",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT * FROM materials WHERE date_received BETWEEN '2022-01-01' AND '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT * FROM materials WHERE material_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT material_name, quantity FROM materials WHERE supplier_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT material_id, material_name, date_received FROM materials WHERE quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT * FROM materials WHERE date_received BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT * FROM materials m JOIN quality_checks qc ON m.material_id = qc.material_id WHERE qc.check_result = 'Fail';",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT m.material_name, qc.check_result FROM materials m JOIN quality_checks qc ON m.material_id = qc.material_id WHERE qc.check_date > NOW() - INTERVAL 1 DAY;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT m.material_id, COUNT(qc.check_id) AS num_checks FROM materials m LEFT JOIN quality_checks qc ON m.material_id = qc.material_id GROUP BY m.material_id;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT inspector_name, department FROM inspectors WHERE inspector_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT * FROM materials WHERE supplier_id IN (SELECT supplier_id FROM materials WHERE material_name LIKE '%steel%');",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT m.material_id, m.material_name, COUNT(qc.check_id) AS num_checks FROM materials m JOIN quality_checks qc ON m.material_id = qc.material_id GROUP BY m.material_id HAVING num_checks > 5;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT * FROM materials WHERE date_received >= '2022-01-01' AND date_received <= '2022-06-30' ORDER BY quantity DESC;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT inspector_name, COUNT(qc.check_id) AS num_checks FROM inspectors i LEFT JOIN quality_checks qc ON i.inspector_id = qc.inspector_id GROUP BY i.inspector_id;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT m.material_name, qc.check_result FROM materials m LEFT JOIN quality_checks qc ON m.material_id = qc.material_id WHERE qc.check_date > '2022-09-01' AND qc.check_result = 'Fail';",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT * FROM materials m INNER JOIN quality_checks qc ON m.material_id = qc.material_id INNER JOIN inspectors i ON qc.inspector_id = i.inspector_id WHERE i.department = 'QA';",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT m.material_id, m.material_name, qc.check_date FROM materials m JOIN quality_checks qc ON m.material_id = qc.material_id WHERE qc.check_date > '2022-11-15' ORDER BY qc.check_date DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT inspector_name, COUNT(check_id) AS num_checks FROM inspectors i JOIN quality_checks qc ON i.inspector_id = qc.inspector_id GROUP BY i.inspector_name HAVING num_checks > 10;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT material_name, SUM(quantity) AS total_quantity FROM materials GROUP BY material_name;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT m.material_name, qc.check_result FROM materials m JOIN quality_checks qc ON m.material_id = qc.material_id WHERE qc.check_date BETWEEN '2022-07-01' AND '2022-09-30';",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT inspector_name, COUNT(DISTINCT material_id) AS num_materials_checked FROM inspectors i JOIN quality_checks qc ON i.inspector_id = qc.inspector_id GROUP BY i.inspector_id;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT m.material_name, qc.check_result FROM materials m JOIN quality_checks qc ON m.material_id = qc.material_id JOIN inspectors i ON qc.inspector_id = i.inspector_id WHERE i.department = 'Production';",
  "### TABLEDATA\n\nCREATE TABLE materials (\n  material_id INT PRIMARY KEY,\n  material_name VARCHAR(255),\n  supplier_id INT,\n  quantity INT,\n  date_received DATE\n)\n\nCREATE TABLE quality_checks (\n  check_id INT PRIMARY KEY,\n  material_id INT,\n  inspector_id INT,\n  check_result ENUM('Pass', 'Fail'),\n  check_date TIMESTAMP\n)\n\nCREATE TABLE inspectors (\n  inspector_id INT PRIMARY KEY,\n  inspector_name VARCHAR(255),\n  department VARCHAR(100)\n)\n\n### STATEMENT\n\nSELECT material_id, material_name, quantity FROM materials WHERE date_received > '2022-10-01' ORDER BY date_received ASC;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM materials;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT material_name, supplier_id FROM materials;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM quality_checks;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT material_id, check_date FROM quality_checks;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_name, address FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_name, department FROM employees;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT material_name, supplier_name, received_date FROM materials JOIN suppliers ON materials.supplier_id = suppliers.supplier_id;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT material_name, check_date, check_result FROM materials JOIN quality_checks ON materials.material_id = quality_checks.material_id;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_name, address, phone_number FROM suppliers WHERE supplier_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT material_name, supplier_name, received_date FROM materials JOIN suppliers ON materials.supplier_id = suppliers.supplier_id WHERE received_date > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_name, department FROM employees WHERE hire_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT material_name, check_date, check_result FROM materials JOIN quality_checks ON materials.material_id = quality_checks.material_id WHERE check_result = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_name, address FROM suppliers WHERE supplier_name LIKE '%Supply%';",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_name, department FROM employees WHERE department = 'Production';",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT material_name, received_date FROM materials WHERE supplier_id IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_name, phone_number FROM suppliers WHERE address IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT material_name, check_date FROM materials LEFT JOIN quality_checks ON materials.material_id = quality_checks.material_id;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_name, hire_date FROM employees ORDER BY hire_date DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM materials INNER JOIN suppliers ON materials.supplier_id = suppliers.supplier_id",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT material_name, received_date, supplier_name FROM materials INNER JOIN suppliers ON materials.supplier_id = suppliers.supplier_id",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT material_name, check_result FROM materials LEFT JOIN quality_checks ON materials.material_id = quality_checks.material_id",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT material_name, supplier_name, check_date FROM materials LEFT JOIN quality_checks ON materials.material_id = quality_checks.material_id LEFT JOIN suppliers ON materials.supplier_id = suppliers.supplier_id",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_name, address FROM suppliers WHERE supplier_name LIKE 'A%'",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT material_name, received_date FROM materials WHERE received_date >= '2021-01-01'",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT material_name, count(check_id) AS num_checks FROM materials LEFT JOIN quality_checks ON materials.material_id = quality_checks.material_id GROUP BY material_name",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_name, AVG(check_result) AS avg_check_result FROM suppliers INNER JOIN materials ON suppliers.supplier_id = materials.supplier_id INNER JOIN quality_checks ON materials.material_id = quality_checks.material_id GROUP BY supplier_name",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT material_name, employee_name, department FROM materials INNER JOIN employees ON materials.material_id = employees.employee_id",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_name, COUNT(DISTINCT material_id) AS num_materials FROM suppliers INNER JOIN materials ON suppliers.supplier_id = materials.supplier_id GROUP BY supplier_name",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_name, hire_date FROM employees",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM employees WHERE hire_date BETWEEN '2019-01-01' AND '2020-01-01'",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_id, supplier_name, address FROM suppliers ORDER BY supplier_id DESC",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT supplier_id) AS num_suppliers FROM suppliers",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_name, department, COUNT(material_id) AS num_materials FROM employees LEFT JOIN materials ON employees.employee_id = materials.material_id GROUP BY employee_name, department",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(check_id) AS num_checks FROM quality_checks WHERE check_result = true",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT material_name, received_date FROM materials WHERE supplier_id IS NULL",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_name, hire_date FROM employees WHERE department = 'Engineering'",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT supplier_name, address FROM suppliers WHERE phone_number IS NOT NULL",
  "### TABLEDATA\n\nCREATE TABLE materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(50) NOT NULL,\n    supplier_id INT,\n    received_date DATE\n);\n\n\nCREATE TABLE quality_checks (\n    check_id INT PRIMARY KEY,\n    material_id INT,\n    check_date DATE,\n    check_result BOOLEAN\n);\n\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(50) NOT NULL,\n    department VARCHAR(50),\n    hire_date DATE\n);\n\n### STATEMENT\n\nSELECT material_name, supplier_name, check_result FROM materials INNER JOIN quality_checks ON materials.material_id = quality_checks.material_id",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM incoming_materials;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT material_name, supplier_name FROM incoming_materials;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT material_id, material_name, received_date FROM incoming_materials;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM material_properties;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT property_name, property_value FROM material_properties;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT property_id, material_id, property_name, property_value FROM material_properties;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM material_tests;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT test_date, test_result FROM material_tests;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT test_id, material_id, test_date, test_result FROM material_tests;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM test_parameters;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT parameter_name, parameter_value FROM test_parameters;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT parameter_id, test_id, parameter_name, parameter_value FROM test_parameters;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM test_observations;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT observation_date, observation_text FROM test_observations;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT observation_id, test_id, observation_date, observation_text FROM test_observations;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT m.material_name, mp.property_name, t.test_date, tp.parameter_name, to.observation_text FROM incoming_materials m JOIN material_properties mp ON m.material_id = mp.material_id JOIN material_tests t ON m.material_id = t.material_id JOIN test_parameters tp ON t.test_id = tp.test_id JOIN test_observations to ON t.test_id = to.test_id;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT m.material_name, mp.property_name, t.test_date, t.test_result, to.observation_text FROM incoming_materials m JOIN material_properties mp ON m.material_id = mp.material_id JOIN material_tests t ON m.material_id = t.material_id JOIN test_observations to ON t.test_id = to.test_id;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT m.material_name, t.test_date, t.test_result, to.observation_text FROM incoming_materials m JOIN material_tests t ON m.material_id = t.material_id JOIN test_observations to ON t.test_id = to.test_id;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT m.material_name, mp.property_name, tp.parameter_name FROM incoming_materials m JOIN material_properties mp ON m.material_id = mp.material_id JOIN test_parameters tp ON mp.property_id = tp.test_id;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT m.material_name, mp.property_name, t.test_date, to.observation_text FROM incoming_materials m JOIN material_properties mp ON m.material_id = mp.material_id JOIN material_tests t ON m.material_id = t.material_id JOIN test_observations to ON t.test_id = to.test_id;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM incoming_materials WHERE material_quality = 'High';",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT material_name, supplier_name, received_date FROM incoming_materials WHERE material_quality = 'Low';",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT m.material_name, t.test_date, t.test_result FROM incoming_materials m JOIN material_tests t ON m.material_id = t.material_id;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT m.material_name, mp.property_name, mp.property_value FROM incoming_materials m JOIN material_properties mp ON m.material_id = mp.material_id;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM material_tests WHERE test_result = 'Pass';",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT to.observation_date, to.observation_text FROM material_tests t JOIN test_observations to ON t.test_id = to.test_id;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT m.material_name, t.test_result, tp.parameter_name, tp.parameter_value FROM incoming_materials m JOIN material_tests t ON m.material_id = t.material_id JOIN test_parameters tp ON t.test_id = tp.test_id;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM incoming_materials WHERE received_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT m.material_name, t.test_result FROM incoming_materials m JOIN material_tests t ON m.material_id = t.material_id WHERE t.test_result = 'Fail';",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT m.material_name, t.test_date, to.observation_text FROM incoming_materials m JOIN material_tests t ON m.material_id = t.material_id JOIN test_observations to ON t.test_id = to.test_id;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM incoming_materials WHERE supplier_name LIKE '%Corp%';",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT m.material_name, mp.property_value FROM incoming_materials m JOIN material_properties mp ON m.material_id = mp.material_id WHERE mp.property_name = 'Color';",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT m.material_name, t.test_date, to.observation_text FROM incoming_materials m JOIN material_tests t ON m.material_id = t.material_id JOIN test_observations to ON t.test_id = to.test_id WHERE to.observation_text LIKE '%defect%';",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM incoming_materials WHERE material_quality IN ('High', 'Medium');",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT m.material_name, t.test_result, tp.parameter_name FROM incoming_materials m JOIN material_tests t ON m.material_id = t.material_id JOIN test_parameters tp ON t.test_id = tp.test_id WHERE m.supplier_name = 'Supplier A';",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT m.material_name, t.test_result, to.observation_date, to.observation_text FROM incoming_materials m JOIN material_tests t ON m.material_id = t.material_id JOIN test_observations to ON t.test_id = to.test_id WHERE t.test_result = 'Fail';",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM incoming_materials WHERE material_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT DISTINCT supplier_name FROM incoming_materials;",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT m.material_name, t.test_date, to.observation_text FROM incoming_materials m JOIN material_tests t ON m.material_id = t.material_id JOIN test_observations to ON t.test_id = to.test_id WHERE m.material_quality = 'High';",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT m.material_name, t.test_result, tp.parameter_name, to.observation_text FROM incoming_materials m JOIN material_tests t ON m.material_id = t.material_id JOIN test_parameters tp ON t.test_id = tp.test_id JOIN test_observations to ON t.test_id = to.test_id WHERE m.supplier_name IN ('Supplier A', 'Supplier B');",
  "### TABLEDATA\n\nCREATE TABLE incoming_materials (\n    material_id INT PRIMARY KEY,\n    material_name VARCHAR(255) NOT NULL,\n    supplier_name VARCHAR(255) NOT NULL,\n    received_date DATE,\n    material_quality VARCHAR(50)\n)\n\nCREATE TABLE material_properties (\n    property_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    property_name VARCHAR(255) NOT NULL,\n    property_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE material_tests (\n    test_id INT PRIMARY KEY,\n    material_id INT REFERENCES incoming_materials(material_id),\n    test_date DATE,\n    test_result VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE test_parameters (\n    parameter_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    parameter_name VARCHAR(255) NOT NULL,\n    parameter_value VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE test_observations (\n    observation_id INT PRIMARY KEY,\n    test_id INT REFERENCES material_tests(test_id),\n    observation_date DATE,\n    observation_text VARCHAR(255) NOT NULL\n)\n\n### STATEMENT\n\nSELECT m.material_name, t.test_result, to.observation_date, to.observation_text FROM incoming_materials m JOIN material_tests t ON m.material_id = t.material_id JOIN test_observations to ON t.test_id = to.test_id WHERE t.test_result = 'Pass';"
]