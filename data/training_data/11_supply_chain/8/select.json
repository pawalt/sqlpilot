[
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT * FROM PurchaseOrders;",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT order_id, product_id, order_quantity FROM PurchaseOrders;",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT order_id, order_date FROM PurchaseOrders WHERE order_quantity > 10;",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT order_id, product_id, order_quantity FROM PurchaseOrders WHERE order_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT order_id, product_id, order_quantity FROM PurchaseOrders WHERE order_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT order_id, product_id, order_quantity FROM PurchaseOrders WHERE inventory_level < 50;",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT DISTINCT product_id FROM PurchaseOrders;",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT MAX(order_quantity) FROM PurchaseOrders;",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT MIN(order_quantity) FROM PurchaseOrders WHERE product_id = '12345678-1234-1234-1234-1234567890AB';",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM PurchaseOrders WHERE inventory_level = 0;",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT * FROM PurchaseOrders ORDER BY order_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT order_id, product_id, order_quantity FROM PurchaseOrders ORDER BY order_quantity ASC;",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT AVG(order_quantity) FROM PurchaseOrders;",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT SUM(order_quantity) FROM PurchaseOrders WHERE order_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT order_id, product_id, order_quantity FROM PurchaseOrders LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT order_id, product_id, order_quantity FROM PurchaseOrders OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT order_id, product_id, order_quantity FROM PurchaseOrders LIMIT 5 OFFSET 10;",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT order_id, product_id, order_quantity FROM PurchaseOrders WHERE order_date > '2022-01-01' LIMIT 5 OFFSET 10;",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT order_id, product_id, order_quantity FROM PurchaseOrders UNION SELECT order_id, product_id, order_quantity FROM PurchaseOrders WHERE inventory_level > 50;",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT order_id, product_id, order_quantity FROM PurchaseOrders INTERSECT SELECT order_id, product_id, order_quantity FROM PurchaseOrders WHERE inventory_level < 50;",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT * FROM PurchaseOrders WHERE order_quantity > 10 AND order_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT order_id, product_id, order_quantity FROM PurchaseOrders WHERE order_quantity < 5 ORDER BY order_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT DISTINCT product_id FROM PurchaseOrders WHERE inventory_level < 50;",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT order_id, order_date FROM PurchaseOrders WHERE product_id = 'abc123' AND order_date BETWEEN '2022-01-01' AND '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM PurchaseOrders WHERE inventory_level > 100;",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT order_id, SUM(order_quantity) AS total_quantity FROM PurchaseOrders GROUP BY order_id;",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT product_id, AVG(order_quantity) AS avg_quantity FROM PurchaseOrders GROUP BY product_id HAVING AVG(order_quantity) > 50;",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT MAX(order_quantity) AS max_quantity FROM PurchaseOrders;",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT MIN(order_quantity) AS min_quantity FROM PurchaseOrders;",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT order_id, COUNT(DISTINCT product_id) AS num_products FROM PurchaseOrders GROUP BY order_id HAVING COUNT(DISTINCT product_id) > 1;",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT AVG(order_quantity) AS avg_quantity, SUM(inventory_level) AS total_inventory FROM PurchaseOrders;",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT order_id FROM PurchaseOrders WHERE inventory_level < 20 UNION SELECT order_id FROM PurchaseOrders WHERE order_quantity > 5;",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT order_id, order_quantity FROM PurchaseOrders WHERE order_date::DATE = CURRENT_DATE;",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT * FROM PurchaseOrders WHERE order_id IN ('1234', '5678', '91011');",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT * FROM PurchaseOrders WHERE product_id LIKE 'abc%';",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT order_id, order_date::DATE FROM PurchaseOrders WHERE EXTRACT(MONTH FROM order_date) = 10;",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT * FROM PurchaseOrders WHERE order_quantity + inventory_level > 100;",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT order_id, order_date FROM PurchaseOrders WHERE order_date::TIME > '12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT * FROM PurchaseOrders WHERE order_date::DATE = '2022-12-25';",
  "### TABLEDATA\n\nCREATE TABLE PurchaseOrders (\n  order_id UUID PRIMARY KEY,\n  product_id UUID,\n  order_quantity INT,\n  order_date TIMESTAMP,\n  inventory_level INT\n)\n\n### STATEMENT\n\nSELECT product_id, COUNT(*) AS num_orders FROM PurchaseOrders GROUP BY product_id ORDER BY num_orders DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT * FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT id, product_name, quantity, unit_price FROM inventory WHERE quantity > 0;",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE unit_price > 50.00;",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM inventory WHERE quantity < 10;",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT * FROM purchase_order;",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT order_id, product_id, order_date FROM purchase_order WHERE order_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT product_name, quantity_ordered FROM inventory JOIN purchase_order ON inventory.id = purchase_order.product_id;",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM inventory WHERE id = 5;",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE product_name LIKE 'Apple%';",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT order_id, product_name, quantity_ordered FROM inventory JOIN purchase_order ON inventory.id = purchase_order.product_id WHERE quantity_ordered > 5;",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT SUM(quantity) AS total_quantity FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT AVG(unit_price) AS avg_price FROM inventory WHERE quantity > 0;",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT product_name FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT MAX(unit_price) AS max_price FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT MIN(unit_price) AS min_price FROM inventory WHERE quantity > 0;",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_orders FROM purchase_order WHERE order_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT * FROM purchase_order WHERE order_date = CURDATE();",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity_ordered) AS total_ordered FROM inventory JOIN purchase_order ON inventory.id = purchase_order.product_id GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT product_name, COUNT(product_id) AS total_orders FROM inventory JOIN purchase_order ON inventory.id = purchase_order.product_id GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT product_name, MAX(order_date) AS latest_order_date FROM inventory JOIN purchase_order ON inventory.id = purchase_order.product_id GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT * FROM inventory JOIN purchase_order ON inventory.id = purchase_order.product_id WHERE inventory.quantity > 0",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity_ordered) AS total_ordered FROM inventory JOIN purchase_order ON inventory.id = purchase_order.product_id GROUP BY product_name",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT product_name, COUNT(order_id) AS total_orders FROM inventory LEFT JOIN purchase_order ON inventory.id = purchase_order.product_id GROUP BY product_name HAVING total_orders > 5",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT product_name, AVG(unit_price) AS avg_price FROM inventory GROUP BY product_name ORDER BY avg_price DESC",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE unit_price > 100 ORDER BY unit_price ASC",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE quantity < 10 ORDER BY quantity DESC",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT product_name, count(order_id) AS total_orders, SUM(quantity_ordered) AS total_quantity FROM inventory LEFT JOIN purchase_order ON inventory.id = purchase_order.product_id GROUP BY product_name ORDER BY total_quantity DESC",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT id, product_name, quantity * unit_price AS total_value FROM inventory",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT product_name FROM inventory",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE product_name LIKE 'A%'",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT product_name, quantity * unit_price AS stock_value FROM inventory ORDER BY stock_value DESC",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE id IN (SELECT product_id FROM purchase_order WHERE order_date = '2022-01-01')",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE quantity = (SELECT MAX(quantity) FROM inventory)",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE id = (SELECT product_id FROM purchase_order WHERE quantity_ordered = (SELECT MAX(quantity_ordered) FROM purchase_order))",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT product_name, quantity_ordered AS remaining_quantity FROM inventory JOIN purchase_order ON inventory.id = purchase_order.product_id WHERE quantity_ordered < quantity",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price, quantity_ordered, quantity_ordered * unit_price AS total_price FROM inventory JOIN purchase_order ON inventory.id = purchase_order.product_id",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT product_name, COUNT(order_id) AS total_orders, SUM(quantity_ordered) AS total_quantity FROM inventory JOIN purchase_order ON inventory.id = purchase_order.product_id GROUP BY product_name HAVING total_orders > 1 AND total_quantity > 10",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT id, product_name, quantity, unit_price, (quantity * unit_price) AS revenue FROM inventory",
  "### TABLEDATA\n\nCREATE TABLE inventory(\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    quantity INT,\n    unit_price DECIMAL(10, 2)\n);\n\nCREATE TABLE purchase_order(\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    order_date DATE,\n    quantity_ordered INT\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price, quantity, quantity * unit_price AS total_value FROM inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE id = 1",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT product_name FROM Inventory WHERE quantity > 10",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT id, product_name FROM Inventory WHERE quantity <= 5",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE product_name LIKE 'Shirt%'",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT MAX(quantity) FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT DISTINCT product_name FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT id, SUM(quantity) FROM Inventory GROUP BY id",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT * FROM Inventory ORDER BY quantity DESC",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT * FROM Inventory LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT * FROM Inventory OFFSET 10",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE quantity BETWEEN 5 AND 10",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT product_name, quantity FROM Inventory WHERE quantity IN (5, 10, 15)",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE product_name IS NULL",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT id, product_name FROM Inventory WHERE quantity = (SELECT MAX(quantity) FROM Inventory)",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE product_name <> 'Shoes'",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE id IN (1, 5, 10)",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE quantity > (SELECT AVG(quantity) FROM Inventory)",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) FROM Inventory GROUP BY product_name HAVING SUM(quantity) > 20",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT AVG(quantity) FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE quantity > 10 ORDER BY product_name ASC",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT id, product_name FROM Inventory WHERE quantity BETWEEN 5 AND 20 ORDER BY id DESC",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_products FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT AVG(quantity) AS average_quantity FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT product_name, quantity FROM Inventory WHERE product_name LIKE '%chair%'",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE id IN (1, 5, 10)",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT product_name, quantity*10 AS total_quantity FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) AS total_quantity FROM Inventory GROUP BY product_name",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT DISTINCT product_name FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE quantity <= 5 ORDER BY quantity ASC",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT product_name, quantity FROM Inventory WHERE quantity >= 15 ORDER BY quantity DESC",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT id, product_name, quantity FROM Inventory WHERE product_name IN ('Chair', 'Table', 'Desk')",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT product_name, COUNT(id) AS total_items FROM Inventory GROUP BY product_name HAVING COUNT(id) > 3",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE product_name ILIKE 'desk'",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE product_name NOT LIKE '%desk%'",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT id, product_name, MAX(quantity) AS max_quantity FROM Inventory GROUP BY id, product_name",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT product_name, CASE WHEN quantity >= 10 THEN 'In Stock' ELSE 'Out of Stock' END AS status FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT product_name, quantity, ROW_NUMBER() OVER(ORDER BY quantity) AS row_num FROM Inventory ORDER BY quantity",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT id, product_name, LEAD(quantity) OVER(ORDER BY id) AS next_quantity FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (id SERIAL PRIMARY KEY,\n  product_name VARCHAR(255) NOT NULL,\n  quantity INTEGER NOT NULL)},{\n\n### STATEMENT\n\nSELECT product_name, quantity, LAG(quantity) OVER(ORDER BY quantity) AS prev_quantity FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Inventory;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, quantity FROM Inventory;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM PurchaseOrder;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT product_id, quantity, order_date FROM PurchaseOrder;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Supplier;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT supplier_name, contact_email FROM Supplier;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM OrderStatus;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT status, delivery_date FROM OrderStatus;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, price FROM Inventory WHERE quantity > 0;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT supplier_name, contact_email FROM Supplier WHERE supplier_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT quantity, order_date FROM PurchaseOrder WHERE product_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE price > 50.00;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT order_id, status FROM OrderStatus WHERE delivery_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, price FROM Inventory ORDER BY price DESC;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT supplier_name, contact_email FROM Supplier ORDER BY supplier_name;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT product_name, quantity FROM Inventory LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT supplier_name, contact_email FROM Supplier WHERE contact_email LIKE '%@gmail.com%';",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT SUM(quantity) FROM PurchaseOrder;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT AVG(price) FROM Inventory;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT MAX(quantity) FROM Inventory;",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Inventory INNER JOIN PurchaseOrder ON Inventory.id = PurchaseOrder.product_id",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT supplier_name, product_name, quantity FROM Inventory INNER JOIN Supplier ON Inventory.id = Supplier.supplier_id",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT order_id, product_name, order_date FROM Inventory INNER JOIN PurchaseOrder ON Inventory.id = PurchaseOrder.product_id",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM PurchaseOrder INNER JOIN OrderStatus ON PurchaseOrder.order_id = OrderStatus.order_id",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT supplier_name, contact_email, order_id, status FROM Supplier INNER JOIN OrderStatus ON Supplier.supplier_id = OrderStatus.order_id",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE quantity > 100",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM PurchaseOrder WHERE quantity < 10",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT supplier_name, contact_email FROM Supplier WHERE supplier_name LIKE 'A%'",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE price > 50",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Inventory WHERE product_name LIKE '%chair%'",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT SUM(quantity) AS total_quantity FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT AVG(price) AS avg_price FROM Inventory",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT supplier_name, COUNT(*) AS number_of_products FROM Supplier INNER JOIN Inventory ON Supplier.supplier_id = Inventory.id GROUP BY supplier_name",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT DISTINCT supplier_name FROM Supplier INNER JOIN Inventory ON Supplier.supplier_id = Inventory.id",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT supplier_name, AVG(quantity) AS avg_quantity FROM Supplier INNER JOIN Inventory ON Supplier.supplier_id = Inventory.id GROUP BY supplier_name",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM PurchaseOrder WHERE order_date BETWEEN '2022-01-01' AND '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT supplier_name, MAX(price) AS max_price FROM Supplier INNER JOIN Inventory ON Supplier.supplier_id = Inventory.id GROUP BY supplier_name",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT supplier_name, MIN(price) AS min_price FROM Supplier INNER JOIN Inventory ON Supplier.supplier_id = Inventory.id GROUP BY supplier_name",
  "### TABLEDATA\n\nCREATE TABLE Inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    quantity INT,\n    price DECIMAL(10,2)\n)\n\nCREATE TABLE PurchaseOrder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE\n)\n\nCREATE TABLE Supplier (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(50),\n    contact_email VARCHAR(100)\n)\n\nCREATE TABLE OrderStatus (\n    order_id INT PRIMARY KEY,\n    status VARCHAR(20),\n    delivery_date DATE\n)\n\n### STATEMENT\n\nSELECT supplier_name, SUM(quantity) AS total_quantity FROM Supplier INNER JOIN Inventory ON Supplier.supplier_id = Inventory.id GROUP BY supplier_name",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, current_stock FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM purchase_orders;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_id, quantity FROM purchase_orders;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT supplier_name, email FROM suppliers;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, address FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM order_history;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_id, order_date, status FROM order_history;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, current_stock, reorder_level FROM inventory WHERE current_stock < reorder_level;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT supplier_name, contact_number FROM suppliers WHERE supplier_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, address FROM customers WHERE customer_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT order_id, customer_id, status FROM order_history WHERE status = 'Delivered';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, current_stock FROM inventory ORDER BY current_stock DESC;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers ORDER BY customer_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT supplier_name, email FROM suppliers WHERE email LIKE '%@example.com%';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, address FROM customers WHERE address LIKE '%Street%';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT count(*) FROM purchase_orders;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT SUM(quantity) FROM purchase_orders WHERE status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM inventory WHERE current_stock < reorder_level;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, current_stock FROM inventory WHERE current_stock < reorder_level;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT supplier_name, contact_number FROM suppliers WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, address FROM customers WHERE email LIKE '%yahoo.com';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM purchase_orders WHERE status = 'pending';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, order_date FROM customers JOIN order_history ON customers.customer_id = order_history.customer_id WHERE order_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT supplier_name, email FROM suppliers JOIN purchase_orders ON suppliers.supplier_id = purchase_orders.product_id WHERE quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, delivery_date FROM customers JOIN order_history ON customers.customer_id = order_history.customer_id WHERE status = 'delivered';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, current_stock, reorder_level FROM inventory WHERE current_stock < reorder_level AND reorder_level <= 10;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT supplier_name, contact_number FROM suppliers ORDER BY supplier_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers ORDER BY customer_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, current_stock FROM inventory WHERE product_name LIKE '%apple%';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT supplier_name, email FROM suppliers WHERE supplier_name IN ('Supplier A', 'Supplier B');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, address FROM customers WHERE address IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) as total_orders FROM order_history WHERE status = 'delivered';",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT AVG(quantity) as avg_quantity FROM purchase_orders GROUP BY product_id HAVING avg(quantity) > 50;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MAX(current_stock) as max_stock FROM inventory;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT MIN(quantity) as min_quantity FROM purchase_orders;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT supplier_name, COUNT(*) as total_orders FROM suppliers JOIN purchase_orders ON suppliers.supplier_id = purchase_orders.product_id GROUP BY supplier_name;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT customer_name, MAX(order_date) as latest_order_date FROM customers JOIN order_history ON customers.customer_id = order_history.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    current_stock INT,\n    reorder_level INT\n);\n\nCREATE TABLE purchase_orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    order_date DATE,\n    status VARCHAR(50)\n);\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    address VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE order_history (\n    order_id INT,\n    customer_id INT,\n    order_date DATE,\n    delivery_date DATE,\n    status VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) as total_quantity FROM inventory JOIN purchase_orders ON inventory.id = purchase_orders.product_id GROUP BY product_name;"
]