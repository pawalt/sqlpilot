<t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) DEFAULT 0.00,
    description TEXT
);

CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    address TEXT
);</t><stat>UPDATE products SET price = 15.99 WHERE product_id = 101;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) DEFAULT 0.00,
    description TEXT
);

CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    address TEXT
);</t><stat>update products set price = 15.99 where product_id = 101;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    address TEXT
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) DEFAULT 0.00,
    description TEXT
);</t><stat>UPDATE products SET price = 15.99 WHERE product_id = 101;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    address TEXT
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) DEFAULT 0.00,
    description TEXT
);</t><stat>update products set price = 15.99 where product_id = 101;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) DEFAULT 0.00,
    description TEXT
);

CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    address TEXT
);</t><stat>UPDATE suppliers SET contact_number = '1234567890' WHERE supplier_id = 201;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) DEFAULT 0.00,
    description TEXT
);

CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    address TEXT
);</t><stat>update suppliers set contact_number = '1234567890' where supplier_id = 201;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    address TEXT
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) DEFAULT 0.00,
    description TEXT
);</t><stat>UPDATE suppliers SET contact_number = '1234567890' WHERE supplier_id = 201;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    address TEXT
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) DEFAULT 0.00,
    description TEXT
);</t><stat>update suppliers set contact_number = '1234567890' where supplier_id = 201;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) DEFAULT 0.00,
    description TEXT
);

CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    address TEXT
);</t><stat>UPDATE products SET description = 'New description' WHERE product_id = 102;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) DEFAULT 0.00,
    description TEXT
);

CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    address TEXT
);</t><stat>update products set description = 'new description' where product_id = 102;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    address TEXT
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) DEFAULT 0.00,
    description TEXT
);</t><stat>UPDATE products SET description = 'New description' WHERE product_id = 102;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    contact_number VARCHAR(15),
    address TEXT
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) DEFAULT 0.00,
    description TEXT
);</t><stat>update products set description = 'new description' where product_id = 102;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(255),
    price DECIMAL(10, 2)
);


CREATE TABLE orders (
    id INT PRIMARY KEY,
    product_id INT,
    quantity INT,
    total_amount DECIMAL(10, 2),
    FOREIGN KEY (product_id) REFERENCES products(id)
);
</t><stat>UPDATE products SET price = 20.00 WHERE id = 1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(255),
    price DECIMAL(10, 2)
);


CREATE TABLE orders (
    id INT PRIMARY KEY,
    product_id INT,
    quantity INT,
    total_amount DECIMAL(10, 2),
    FOREIGN KEY (product_id) REFERENCES products(id)
);
</t><stat>update products set price = 20.00 where id = 1;</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    product_id INT,
    quantity INT,
    total_amount DECIMAL(10, 2),
    FOREIGN KEY (product_id) REFERENCES products(id)
);


CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(255),
    price DECIMAL(10, 2)
);
</t><stat>UPDATE products SET price = 20.00 WHERE id = 1;</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    product_id INT,
    quantity INT,
    total_amount DECIMAL(10, 2),
    FOREIGN KEY (product_id) REFERENCES products(id)
);


CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(255),
    price DECIMAL(10, 2)
);
</t><stat>update products set price = 20.00 where id = 1;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(255),
    price DECIMAL(10, 2)
);


CREATE TABLE orders (
    id INT PRIMARY KEY,
    product_id INT,
    quantity INT,
    total_amount DECIMAL(10, 2),
    FOREIGN KEY (product_id) REFERENCES products(id)
);
</t><stat>UPDATE products SET name = 'New Product Name' WHERE id = 2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(255),
    price DECIMAL(10, 2)
);


CREATE TABLE orders (
    id INT PRIMARY KEY,
    product_id INT,
    quantity INT,
    total_amount DECIMAL(10, 2),
    FOREIGN KEY (product_id) REFERENCES products(id)
);
</t><stat>update products set name = 'new product name' where id = 2;</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    product_id INT,
    quantity INT,
    total_amount DECIMAL(10, 2),
    FOREIGN KEY (product_id) REFERENCES products(id)
);


CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(255),
    price DECIMAL(10, 2)
);
</t><stat>UPDATE products SET name = 'New Product Name' WHERE id = 2;</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    product_id INT,
    quantity INT,
    total_amount DECIMAL(10, 2),
    FOREIGN KEY (product_id) REFERENCES products(id)
);


CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(255),
    price DECIMAL(10, 2)
);
</t><stat>update products set name = 'new product name' where id = 2;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(255),
    price DECIMAL(10, 2)
);


CREATE TABLE orders (
    id INT PRIMARY KEY,
    product_id INT,
    quantity INT,
    total_amount DECIMAL(10, 2),
    FOREIGN KEY (product_id) REFERENCES products(id)
);
</t><stat>UPDATE orders SET quantity = 5, total_amount = 100.00 WHERE id = 3;</stat><divider><t>CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(255),
    price DECIMAL(10, 2)
);


CREATE TABLE orders (
    id INT PRIMARY KEY,
    product_id INT,
    quantity INT,
    total_amount DECIMAL(10, 2),
    FOREIGN KEY (product_id) REFERENCES products(id)
);
</t><stat>update orders set quantity = 5, total_amount = 100.00 where id = 3;</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    product_id INT,
    quantity INT,
    total_amount DECIMAL(10, 2),
    FOREIGN KEY (product_id) REFERENCES products(id)
);


CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(255),
    price DECIMAL(10, 2)
);
</t><stat>UPDATE orders SET quantity = 5, total_amount = 100.00 WHERE id = 3;</stat><divider><t>CREATE TABLE orders (
    id INT PRIMARY KEY,
    product_id INT,
    quantity INT,
    total_amount DECIMAL(10, 2),
    FOREIGN KEY (product_id) REFERENCES products(id)
);


CREATE TABLE products (
    id INT PRIMARY KEY,
    name VARCHAR(255),
    price DECIMAL(10, 2)
);
</t><stat>update orders set quantity = 5, total_amount = 100.00 where id = 3;</stat><divider><t>CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);


CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);


CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);
</t><stat>UPDATE products SET price = price + 10 WHERE product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);


CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);


CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);
</t><stat>update products set price = price + 10 where product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);


CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);


CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);
</t><stat>UPDATE products SET price = price + 10 WHERE product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);


CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);


CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);
</t><stat>update products set price = price + 10 where product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);


CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);


CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);
</t><stat>UPDATE products SET price = price + 10 WHERE product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);


CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);


CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);
</t><stat>update products set price = price + 10 where product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);


CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);


CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);
</t><stat>UPDATE products SET price = price + 10 WHERE product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);


CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);


CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);
</t><stat>update products set price = price + 10 where product_id = 1;</stat><divider><t>CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);


CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);


CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);
</t><stat>UPDATE products SET price = price + 10 WHERE product_id = 1;</stat><divider><t>CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);


CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);


CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);
</t><stat>update products set price = price + 10 where product_id = 1;</stat><divider><t>CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);


CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);


CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);
</t><stat>UPDATE products SET price = price + 10 WHERE product_id = 1;</stat><divider><t>CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);


CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);


CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);
</t><stat>update products set price = price + 10 where product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);


CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);


CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);
</t><stat>UPDATE suppliers SET location = 'New Location' WHERE supplier_id = 2;</stat><divider><t>CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);


CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);


CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);
</t><stat>update suppliers set location = 'new location' where supplier_id = 2;</stat><divider><t>CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);


CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);


CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);
</t><stat>UPDATE suppliers SET location = 'New Location' WHERE supplier_id = 2;</stat><divider><t>CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);


CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);


CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);
</t><stat>update suppliers set location = 'new location' where supplier_id = 2;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);


CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);


CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);
</t><stat>UPDATE suppliers SET location = 'New Location' WHERE supplier_id = 2;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);


CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);


CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);
</t><stat>update suppliers set location = 'new location' where supplier_id = 2;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);


CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);


CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);
</t><stat>UPDATE suppliers SET location = 'New Location' WHERE supplier_id = 2;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);


CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);


CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);
</t><stat>update suppliers set location = 'new location' where supplier_id = 2;</stat><divider><t>CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);


CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);


CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);
</t><stat>UPDATE suppliers SET location = 'New Location' WHERE supplier_id = 2;</stat><divider><t>CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);


CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);


CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);
</t><stat>update suppliers set location = 'new location' where supplier_id = 2;</stat><divider><t>CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);


CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);


CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);
</t><stat>UPDATE suppliers SET location = 'New Location' WHERE supplier_id = 2;</stat><divider><t>CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);


CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);


CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);
</t><stat>update suppliers set location = 'new location' where supplier_id = 2;</stat><divider><t>CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);


CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);


CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);
</t><stat>UPDATE orders SET quantity = quantity - 1 WHERE order_id = 3;</stat><divider><t>CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);


CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);


CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);
</t><stat>update orders set quantity = quantity - 1 where order_id = 3;</stat><divider><t>CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);


CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);


CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);
</t><stat>UPDATE orders SET quantity = quantity - 1 WHERE order_id = 3;</stat><divider><t>CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);


CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);


CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);
</t><stat>update orders set quantity = quantity - 1 where order_id = 3;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);


CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);


CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);
</t><stat>UPDATE orders SET quantity = quantity - 1 WHERE order_id = 3;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);


CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);


CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);
</t><stat>update orders set quantity = quantity - 1 where order_id = 3;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);


CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);


CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);
</t><stat>UPDATE orders SET quantity = quantity - 1 WHERE order_id = 3;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);


CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);


CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);
</t><stat>update orders set quantity = quantity - 1 where order_id = 3;</stat><divider><t>CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);


CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);


CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);
</t><stat>UPDATE orders SET quantity = quantity - 1 WHERE order_id = 3;</stat><divider><t>CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);


CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);


CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);
</t><stat>update orders set quantity = quantity - 1 where order_id = 3;</stat><divider><t>CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);


CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);


CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);
</t><stat>UPDATE orders SET quantity = quantity - 1 WHERE order_id = 3;</stat><divider><t>CREATE TABLE orders (
    order_id SERIAL PRIMARY KEY,
    product_id INT NOT NULL,
    supplier_id INT NOT NULL,
    quantity INT NOT NULL,
    order_date DATE NOT NULL
);


CREATE TABLE suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name STRING NOT NULL,
    location STRING NOT NULL
);


CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name STRING NOT NULL,
    price DECIMAL NOT NULL
);
</t><stat>update orders set quantity = quantity - 1 where order_id = 3;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>UPDATE supplier SET address = 'New Address' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>update supplier set address = 'new address' where supplier_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE supplier SET address = 'New Address' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update supplier set address = 'new address' where supplier_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>UPDATE supplier SET address = 'New Address' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>update supplier set address = 'new address' where supplier_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>UPDATE supplier SET address = 'New Address' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>update supplier set address = 'new address' where supplier_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE supplier SET address = 'New Address' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update supplier set address = 'new address' where supplier_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>UPDATE supplier SET address = 'New Address' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>update supplier set address = 'new address' where supplier_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>UPDATE supplier SET address = 'New Address' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>update supplier set address = 'new address' where supplier_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE supplier SET address = 'New Address' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update supplier set address = 'new address' where supplier_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>UPDATE supplier SET address = 'New Address' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>update supplier set address = 'new address' where supplier_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE supplier SET address = 'New Address' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update supplier set address = 'new address' where supplier_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE supplier SET address = 'New Address' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update supplier set address = 'new address' where supplier_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE supplier SET address = 'New Address' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update supplier set address = 'new address' where supplier_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>UPDATE supplier SET address = 'New Address' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>update supplier set address = 'new address' where supplier_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>UPDATE supplier SET address = 'New Address' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>update supplier set address = 'new address' where supplier_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>UPDATE supplier SET address = 'New Address' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>update supplier set address = 'new address' where supplier_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE supplier SET address = 'New Address' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update supplier set address = 'new address' where supplier_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>UPDATE supplier SET address = 'New Address' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>update supplier set address = 'new address' where supplier_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE supplier SET address = 'New Address' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update supplier set address = 'new address' where supplier_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE supplier SET address = 'New Address' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update supplier set address = 'new address' where supplier_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>UPDATE supplier SET address = 'New Address' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>update supplier set address = 'new address' where supplier_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE supplier SET address = 'New Address' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update supplier set address = 'new address' where supplier_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE supplier SET address = 'New Address' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update supplier set address = 'new address' where supplier_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>UPDATE supplier SET address = 'New Address' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>update supplier set address = 'new address' where supplier_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE supplier SET address = 'New Address' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update supplier set address = 'new address' where supplier_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>UPDATE product SET price = 29.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>update product set price = 29.99 where product_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE product SET price = 29.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update product set price = 29.99 where product_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>UPDATE product SET price = 29.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>update product set price = 29.99 where product_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>UPDATE product SET price = 29.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>update product set price = 29.99 where product_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE product SET price = 29.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update product set price = 29.99 where product_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>UPDATE product SET price = 29.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>update product set price = 29.99 where product_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>UPDATE product SET price = 29.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>update product set price = 29.99 where product_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE product SET price = 29.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update product set price = 29.99 where product_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>UPDATE product SET price = 29.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>update product set price = 29.99 where product_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE product SET price = 29.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update product set price = 29.99 where product_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE product SET price = 29.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update product set price = 29.99 where product_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE product SET price = 29.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update product set price = 29.99 where product_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>UPDATE product SET price = 29.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>update product set price = 29.99 where product_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>UPDATE product SET price = 29.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>update product set price = 29.99 where product_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>UPDATE product SET price = 29.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>update product set price = 29.99 where product_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE product SET price = 29.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update product set price = 29.99 where product_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>UPDATE product SET price = 29.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>update product set price = 29.99 where product_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE product SET price = 29.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update product set price = 29.99 where product_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE product SET price = 29.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update product set price = 29.99 where product_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>UPDATE product SET price = 29.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>update product set price = 29.99 where product_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE product SET price = 29.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update product set price = 29.99 where product_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE product SET price = 29.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update product set price = 29.99 where product_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>UPDATE product SET price = 29.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>update product set price = 29.99 where product_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE product SET price = 29.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update product set price = 29.99 where product_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>UPDATE customer SET address = 'New Customer Address' WHERE customer_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>update customer set address = 'new customer address' where customer_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE customer SET address = 'New Customer Address' WHERE customer_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update customer set address = 'new customer address' where customer_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>UPDATE customer SET address = 'New Customer Address' WHERE customer_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>update customer set address = 'new customer address' where customer_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>UPDATE customer SET address = 'New Customer Address' WHERE customer_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>update customer set address = 'new customer address' where customer_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE customer SET address = 'New Customer Address' WHERE customer_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update customer set address = 'new customer address' where customer_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>UPDATE customer SET address = 'New Customer Address' WHERE customer_id = 1;</stat><divider><t>CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>update customer set address = 'new customer address' where customer_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>UPDATE customer SET address = 'New Customer Address' WHERE customer_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>update customer set address = 'new customer address' where customer_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE customer SET address = 'New Customer Address' WHERE customer_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update customer set address = 'new customer address' where customer_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>UPDATE customer SET address = 'New Customer Address' WHERE customer_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>update customer set address = 'new customer address' where customer_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE customer SET address = 'New Customer Address' WHERE customer_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update customer set address = 'new customer address' where customer_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE customer SET address = 'New Customer Address' WHERE customer_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update customer set address = 'new customer address' where customer_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE customer SET address = 'New Customer Address' WHERE customer_id = 1;</stat><divider><t>CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update customer set address = 'new customer address' where customer_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>UPDATE customer SET address = 'New Customer Address' WHERE customer_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>update customer set address = 'new customer address' where customer_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>UPDATE customer SET address = 'New Customer Address' WHERE customer_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>update customer set address = 'new customer address' where customer_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>UPDATE customer SET address = 'New Customer Address' WHERE customer_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);</t><stat>update customer set address = 'new customer address' where customer_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE customer SET address = 'New Customer Address' WHERE customer_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update customer set address = 'new customer address' where customer_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>UPDATE customer SET address = 'New Customer Address' WHERE customer_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>update customer set address = 'new customer address' where customer_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE customer SET address = 'New Customer Address' WHERE customer_id = 1;</stat><divider><t>CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update customer set address = 'new customer address' where customer_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE customer SET address = 'New Customer Address' WHERE customer_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update customer set address = 'new customer address' where customer_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>UPDATE customer SET address = 'New Customer Address' WHERE customer_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>update customer set address = 'new customer address' where customer_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE customer SET address = 'New Customer Address' WHERE customer_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update customer set address = 'new customer address' where customer_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE customer SET address = 'New Customer Address' WHERE customer_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update customer set address = 'new customer address' where customer_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>UPDATE customer SET address = 'New Customer Address' WHERE customer_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);</t><stat>update customer set address = 'new customer address' where customer_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>UPDATE customer SET address = 'New Customer Address' WHERE customer_id = 1;</stat><divider><t>CREATE TABLE order (
    order_id INT PRIMARY KEY,
    product_id INT,
    customer_id INT,
    quantity INT NOT NULL,
    order_date DATE NOT NULL,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);

CREATE TABLE product (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    supplier_id INT,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES supplier(supplier_id)
);

CREATE TABLE supplier (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL
);</t><stat>update customer set address = 'new customer address' where customer_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE suppliers SET supplier_name = 'New Supplier Name' WHERE supplier_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update suppliers set supplier_name = 'new supplier name' where supplier_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE products SET unit_price = 15.99 WHERE product_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update products set unit_price = 15.99 where product_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>UPDATE warehouses SET location = 'New Location' WHERE warehouse_id = 1;</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(50) NOT NULL,
    customer_location VARCHAR(50),
    contact_number VARCHAR(15)
);


CREATE TABLE shipments (
    shipment_id INT PRIMARY KEY,
    product_id INT REFERENCES products(product_id),
    warehouse_id INT REFERENCES warehouses(warehouse_id),
    quantity INT NOT NULL,
    shipment_date DATE
);


CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    warehouse_name VARCHAR(50) NOT NULL,
    location VARCHAR(50),
    capacity INT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(50) NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    supplier_id INT REFERENCES suppliers(supplier_id)
);


CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    supplier_name VARCHAR(50) NOT NULL,
    supplier_location VARCHAR(50),
    contact_person VARCHAR(50),
    contact_number VARCHAR(15)
);
</t><stat>update warehouses set location = 'new location' where warehouse_id = 1;</stat>