[
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT * FROM RoutingAndDeliverySchedules;",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT route_id, route_name, delivery_schedule FROM RoutingAndDeliverySchedules;",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT * FROM RoutingAndDeliverySchedules WHERE route_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT route_id, route_name FROM RoutingAndDeliverySchedules WHERE delivery_time > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT * FROM RoutingAndDeliverySchedules WHERE delivery_vehicle = 'Van';",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT route_id, delivery_schedule, delivery_time FROM RoutingAndDeliverySchedules WHERE route_name LIKE 'Route%';",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT delivery_vehicle FROM RoutingAndDeliverySchedules WHERE route_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT route_id, delivery_schedule FROM RoutingAndDeliverySchedules WHERE delivery_time BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT * FROM RoutingAndDeliverySchedules WHERE delivery_time < NOW();",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT route_name, delivery_vehicle FROM RoutingAndDeliverySchedules WHERE delivery_schedule = 'Morning';",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT route_id, delivery_time FROM RoutingAndDeliverySchedules WHERE delivery_schedule = 'Evening' AND delivery_vehicle = 'Truck';",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT route_id, route_name, delivery_schedule FROM RoutingAndDeliverySchedules ORDER BY delivery_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT delivery_time, delivery_vehicle FROM RoutingAndDeliverySchedules ORDER BY delivery_time ASC;",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM RoutingAndDeliverySchedules;",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT MAX(route_id) FROM RoutingAndDeliverySchedules;",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT MIN(route_id) FROM RoutingAndDeliverySchedules;",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT AVG(route_id) FROM RoutingAndDeliverySchedules;",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT delivery_schedule, COUNT(*) FROM RoutingAndDeliverySchedules GROUP BY delivery_schedule;",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT route_name, delivery_vehicle, COUNT(*) FROM RoutingAndDeliverySchedules WHERE delivery_time > '2022-06-01' GROUP BY route_name, delivery_vehicle;",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT delivery_time::DATE, EXTRACT(MONTH FROM delivery_time) AS delivery_month FROM RoutingAndDeliverySchedules;",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT * FROM RoutingAndDeliverySchedules WHERE route_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT route_name, delivery_time FROM RoutingAndDeliverySchedules WHERE delivery_vehicle = 'Truck';",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT DISTINCT delivery_schedule FROM RoutingAndDeliverySchedules WHERE delivery_time > NOW();",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT route_id, route_name, delivery_vehicle FROM RoutingAndDeliverySchedules WHERE route_name LIKE '%Express%';",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM RoutingAndDeliverySchedules;",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT MAX(delivery_time) AS latest_delivery_time FROM RoutingAndDeliverySchedules;",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT DISTINCT route_name, delivery_vehicle FROM RoutingAndDeliverySchedules ORDER BY route_name ASC, delivery_vehicle DESC;",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT route_id, delivery_schedule FROM RoutingAndDeliverySchedules WHERE delivery_time BETWEEN '2021-01-01' AND '2021-03-31';",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT AVG(route_id) AS avg_route_id, AVG(delivery_time) AS avg_delivery_time FROM RoutingAndDeliverySchedules;",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT route_name FROM RoutingAndDeliverySchedules WHERE delivery_vehicle IN ('Truck', 'Van');",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT * FROM RoutingAndDeliverySchedules WHERE route_id IN (2, 4, 6);",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT route_id, delivery_time FROM RoutingAndDeliverySchedules WHERE route_name = 'Route A' AND delivery_vehicle = 'Truck';",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT route_id, delivery_schedule FROM RoutingAndDeliverySchedules WHERE delivery_vehicle = 'Van' AND delivery_time < NOW();",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT route_name) AS num_routes FROM RoutingAndDeliverySchedules;",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT route_name, delivery_time FROM RoutingAndDeliverySchedules WHERE DATE(delivery_time) = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT route_id, delivery_time FROM RoutingAndDeliverySchedules WHERE delivery_schedule LIKE '%Monday%' AND delivery_vehicle = 'Truck';",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT route_id, delivery_vehicle FROM RoutingAndDeliverySchedules WHERE delivery_time >= '2022-01-01' AND delivery_time < '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT route_name, delivery_time FROM RoutingAndDeliverySchedules WHERE route_id < 10 OR delivery_vehicle = 'Van';",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT route_id, delivery_vehicle FROM RoutingAndDeliverySchedules WHERE route_name NOT LIKE '%Express%';",
  "### TABLEDATA\n\nCREATE TABLE RoutingAndDeliverySchedules ( \n    route_id INT PRIMARY KEY, \n    route_name VARCHAR(50) NOT NULL, \n    delivery_schedule VARCHAR(100) NOT NULL, \n    delivery_vehicle VARCHAR(50) NOT NULL, \n    delivery_time TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nSELECT route_name, delivery_schedule FROM RoutingAndDeliverySchedules WHERE delivery_time BETWEEN '2022-01-01' AND NOW();",
  "### TABLEDATA\n\nCREATE TABLE Routes (\n    route_id INT PRIMARY KEY,\n    origin_location VARCHAR,\n    destination_location VARCHAR,\n    distance_in_km FLOAT,\n    estimated_time_hours FLOAT\n);\n\n\nCREATE TABLE DeliverySchedules (\n    schedule_id INT PRIMARY KEY,\n    route_id INT REFERENCES Routes(route_id),\n    delivery_date DATE,\n    delivery_time TIME,\n    vehicle_id INT,\n    driver_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM Routes;",
  "### TABLEDATA\n\nCREATE TABLE Routes (\n    route_id INT PRIMARY KEY,\n    origin_location VARCHAR,\n    destination_location VARCHAR,\n    distance_in_km FLOAT,\n    estimated_time_hours FLOAT\n);\n\n\nCREATE TABLE DeliverySchedules (\n    schedule_id INT PRIMARY KEY,\n    route_id INT REFERENCES Routes(route_id),\n    delivery_date DATE,\n    delivery_time TIME,\n    vehicle_id INT,\n    driver_id INT\n);\n\n### STATEMENT\n\nSELECT route_id, origin_location, destination_location FROM Routes;",
  "### TABLEDATA\n\nCREATE TABLE Routes (\n    route_id INT PRIMARY KEY,\n    origin_location VARCHAR,\n    destination_location VARCHAR,\n    distance_in_km FLOAT,\n    estimated_time_hours FLOAT\n);\n\n\nCREATE TABLE DeliverySchedules (\n    schedule_id INT PRIMARY KEY,\n    route_id INT REFERENCES Routes(route_id),\n    delivery_date DATE,\n    delivery_time TIME,\n    vehicle_id INT,\n    driver_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM DeliverySchedules;",
  "### TABLEDATA\n\nCREATE TABLE Routes (\n    route_id INT PRIMARY KEY,\n    origin_location VARCHAR,\n    destination_location VARCHAR,\n    distance_in_km FLOAT,\n    estimated_time_hours FLOAT\n);\n\n\nCREATE TABLE DeliverySchedules (\n    schedule_id INT PRIMARY KEY,\n    route_id INT REFERENCES Routes(route_id),\n    delivery_date DATE,\n    delivery_time TIME,\n    vehicle_id INT,\n    driver_id INT\n);\n\n### STATEMENT\n\nSELECT schedule_id, route_id, delivery_date, delivery_time FROM DeliverySchedules;",
  "### TABLEDATA\n\nCREATE TABLE Routes (\n    route_id INT PRIMARY KEY,\n    origin_location VARCHAR,\n    destination_location VARCHAR,\n    distance_in_km FLOAT,\n    estimated_time_hours FLOAT\n);\n\n\nCREATE TABLE DeliverySchedules (\n    schedule_id INT PRIMARY KEY,\n    route_id INT REFERENCES Routes(route_id),\n    delivery_date DATE,\n    delivery_time TIME,\n    vehicle_id INT,\n    driver_id INT\n);\n\n### STATEMENT\n\nSELECT route_id, origin_location, destination_location, distance_in_km, estimated_time_hours FROM Routes;",
  "### TABLEDATA\n\nCREATE TABLE Routes (\n    route_id INT PRIMARY KEY,\n    origin_location VARCHAR,\n    destination_location VARCHAR,\n    distance_in_km FLOAT,\n    estimated_time_hours FLOAT\n);\n\n\nCREATE TABLE DeliverySchedules (\n    schedule_id INT PRIMARY KEY,\n    route_id INT REFERENCES Routes(route_id),\n    delivery_date DATE,\n    delivery_time TIME,\n    vehicle_id INT,\n    driver_id INT\n);\n\n### STATEMENT\n\nSELECT delivery_date, delivery_time, vehicle_id, driver_id FROM DeliverySchedules;",
  "### TABLEDATA\n\nCREATE TABLE Routes (\n    route_id INT PRIMARY KEY,\n    origin_location VARCHAR,\n    destination_location VARCHAR,\n    distance_in_km FLOAT,\n    estimated_time_hours FLOAT\n);\n\n\nCREATE TABLE DeliverySchedules (\n    schedule_id INT PRIMARY KEY,\n    route_id INT REFERENCES Routes(route_id),\n    delivery_date DATE,\n    delivery_time TIME,\n    vehicle_id INT,\n    driver_id INT\n);\n\n### STATEMENT\n\nSELECT route_id, origin_location, destination_location, distance_in_km, estimated_time_hours FROM Routes WHERE distance_in_km < 100;",
  "### TABLEDATA\n\nCREATE TABLE Routes (\n    route_id INT PRIMARY KEY,\n    origin_location VARCHAR,\n    destination_location VARCHAR,\n    distance_in_km FLOAT,\n    estimated_time_hours FLOAT\n);\n\n\nCREATE TABLE DeliverySchedules (\n    schedule_id INT PRIMARY KEY,\n    route_id INT REFERENCES Routes(route_id),\n    delivery_date DATE,\n    delivery_time TIME,\n    vehicle_id INT,\n    driver_id INT\n);\n\n### STATEMENT\n\nSELECT schedule_id, route_id, delivery_date, delivery_time, vehicle_id, driver_id FROM DeliverySchedules WHERE delivery_date >= '2021-10-01';",
  "### TABLEDATA\n\nCREATE TABLE Routes (\n    route_id INT PRIMARY KEY,\n    origin_location VARCHAR,\n    destination_location VARCHAR,\n    distance_in_km FLOAT,\n    estimated_time_hours FLOAT\n);\n\n\nCREATE TABLE DeliverySchedules (\n    schedule_id INT PRIMARY KEY,\n    route_id INT REFERENCES Routes(route_id),\n    delivery_date DATE,\n    delivery_time TIME,\n    vehicle_id INT,\n    driver_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM Routes ORDER BY distance_in_km DESC;",
  "### TABLEDATA\n\nCREATE TABLE Routes (\n    route_id INT PRIMARY KEY,\n    origin_location VARCHAR,\n    destination_location VARCHAR,\n    distance_in_km FLOAT,\n    estimated_time_hours FLOAT\n);\n\n\nCREATE TABLE DeliverySchedules (\n    schedule_id INT PRIMARY KEY,\n    route_id INT REFERENCES Routes(route_id),\n    delivery_date DATE,\n    delivery_time TIME,\n    vehicle_id INT,\n    driver_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM DeliverySchedules ORDER BY delivery_date, delivery_time;",
  "### TABLEDATA\n\nCREATE TABLE Routes (\n    route_id INT PRIMARY KEY,\n    origin_location VARCHAR,\n    destination_location VARCHAR,\n    distance_in_km FLOAT,\n    estimated_time_hours FLOAT\n);\n\n\nCREATE TABLE DeliverySchedules (\n    schedule_id INT PRIMARY KEY,\n    route_id INT REFERENCES Routes(route_id),\n    delivery_date DATE,\n    delivery_time TIME,\n    vehicle_id INT,\n    driver_id INT\n);\n\n### STATEMENT\n\nSELECT AVG(distance_in_km) AS avg_distance FROM Routes;",
  "### TABLEDATA\n\nCREATE TABLE Routes (\n    route_id INT PRIMARY KEY,\n    origin_location VARCHAR,\n    destination_location VARCHAR,\n    distance_in_km FLOAT,\n    estimated_time_hours FLOAT\n);\n\n\nCREATE TABLE DeliverySchedules (\n    schedule_id INT PRIMARY KEY,\n    route_id INT REFERENCES Routes(route_id),\n    delivery_date DATE,\n    delivery_time TIME,\n    vehicle_id INT,\n    driver_id INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_routes FROM Routes;",
  "### TABLEDATA\n\nCREATE TABLE Routes (\n    route_id INT PRIMARY KEY,\n    origin_location VARCHAR,\n    destination_location VARCHAR,\n    distance_in_km FLOAT,\n    estimated_time_hours FLOAT\n);\n\n\nCREATE TABLE DeliverySchedules (\n    schedule_id INT PRIMARY KEY,\n    route_id INT REFERENCES Routes(route_id),\n    delivery_date DATE,\n    delivery_time TIME,\n    vehicle_id INT,\n    driver_id INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT origin_location FROM Routes;",
  "### TABLEDATA\n\nCREATE TABLE Routes (\n    route_id INT PRIMARY KEY,\n    origin_location VARCHAR,\n    destination_location VARCHAR,\n    distance_in_km FLOAT,\n    estimated_time_hours FLOAT\n);\n\n\nCREATE TABLE DeliverySchedules (\n    schedule_id INT PRIMARY KEY,\n    route_id INT REFERENCES Routes(route_id),\n    delivery_date DATE,\n    delivery_time TIME,\n    vehicle_id INT,\n    driver_id INT\n);\n\n### STATEMENT\n\nSELECT MAX(estimated_time_hours) AS max_estimated_time FROM Routes;",
  "### TABLEDATA\n\nCREATE TABLE Routes (\n    route_id INT PRIMARY KEY,\n    origin_location VARCHAR,\n    destination_location VARCHAR,\n    distance_in_km FLOAT,\n    estimated_time_hours FLOAT\n);\n\n\nCREATE TABLE DeliverySchedules (\n    schedule_id INT PRIMARY KEY,\n    route_id INT REFERENCES Routes(route_id),\n    delivery_date DATE,\n    delivery_time TIME,\n    vehicle_id INT,\n    driver_id INT\n);\n\n### STATEMENT\n\nSELECT MIN(distance_in_km) AS min_distance FROM Routes;",
  "### TABLEDATA\n\nCREATE TABLE Routes (\n    route_id INT PRIMARY KEY,\n    origin_location VARCHAR,\n    destination_location VARCHAR,\n    distance_in_km FLOAT,\n    estimated_time_hours FLOAT\n);\n\n\nCREATE TABLE DeliverySchedules (\n    schedule_id INT PRIMARY KEY,\n    route_id INT REFERENCES Routes(route_id),\n    delivery_date DATE,\n    delivery_time TIME,\n    vehicle_id INT,\n    driver_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM DeliverySchedules WHERE vehicle_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE Routes (\n    route_id INT PRIMARY KEY,\n    origin_location VARCHAR,\n    destination_location VARCHAR,\n    distance_in_km FLOAT,\n    estimated_time_hours FLOAT\n);\n\n\nCREATE TABLE DeliverySchedules (\n    schedule_id INT PRIMARY KEY,\n    route_id INT REFERENCES Routes(route_id),\n    delivery_date DATE,\n    delivery_time TIME,\n    vehicle_id INT,\n    driver_id INT\n);\n\n### STATEMENT\n\nSELECT route_id, origin_location, delivery_date FROM Routes JOIN DeliverySchedules ON Routes.route_id = DeliverySchedules.route_id;",
  "### TABLEDATA\n\nCREATE TABLE Routes (\n    route_id INT PRIMARY KEY,\n    origin_location VARCHAR,\n    destination_location VARCHAR,\n    distance_in_km FLOAT,\n    estimated_time_hours FLOAT\n);\n\n\nCREATE TABLE DeliverySchedules (\n    schedule_id INT PRIMARY KEY,\n    route_id INT REFERENCES Routes(route_id),\n    delivery_date DATE,\n    delivery_time TIME,\n    vehicle_id INT,\n    driver_id INT\n);\n\n### STATEMENT\n\nSELECT route_id, origin_location, delivery_date FROM Routes LEFT JOIN DeliverySchedules ON Routes.route_id = DeliverySchedules.route_id;",
  "### TABLEDATA\n\nCREATE TABLE Routes (\n    route_id INT PRIMARY KEY,\n    origin_location VARCHAR,\n    destination_location VARCHAR,\n    distance_in_km FLOAT,\n    estimated_time_hours FLOAT\n);\n\n\nCREATE TABLE DeliverySchedules (\n    schedule_id INT PRIMARY KEY,\n    route_id INT REFERENCES Routes(route_id),\n    delivery_date DATE,\n    delivery_time TIME,\n    vehicle_id INT,\n    driver_id INT\n);\n\n### STATEMENT\n\nSELECT route_id, origin_location, delivery_date FROM Routes RIGHT JOIN DeliverySchedules ON Routes.route_id = DeliverySchedules.route_id;",
  "### TABLEDATA\n\nCREATE TABLE Routes (\n    route_id INT PRIMARY KEY,\n    origin_location VARCHAR,\n    destination_location VARCHAR,\n    distance_in_km FLOAT,\n    estimated_time_hours FLOAT\n);\n\n\nCREATE TABLE DeliverySchedules (\n    schedule_id INT PRIMARY KEY,\n    route_id INT REFERENCES Routes(route_id),\n    delivery_date DATE,\n    delivery_time TIME,\n    vehicle_id INT,\n    driver_id INT\n);\n\n### STATEMENT\n\nSELECT route_id, origin_location, delivery_date FROM Routes INNER JOIN DeliverySchedules ON Routes.route_id = DeliverySchedules.route_id;",
  "### TABLEDATA\n\nCREATE TABLE Routes (\n    route_id INT PRIMARY KEY,\n    origin_location VARCHAR,\n    destination_location VARCHAR,\n    distance_in_km FLOAT,\n    estimated_time_hours FLOAT\n);\n\n\nCREATE TABLE DeliverySchedules (\n    schedule_id INT PRIMARY KEY,\n    route_id INT REFERENCES Routes(route_id),\n    delivery_date DATE,\n    delivery_time TIME,\n    vehicle_id INT,\n    driver_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM Routes WHERE distance_in_km > 100 ORDER BY estimated_time_hours DESC LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE Routes (\n    route_id INT PRIMARY KEY,\n    origin_location VARCHAR,\n    destination_location VARCHAR,\n    distance_in_km FLOAT,\n    estimated_time_hours FLOAT\n);\n\n\nCREATE TABLE DeliverySchedules (\n    schedule_id INT PRIMARY KEY,\n    route_id INT REFERENCES Routes(route_id),\n    delivery_date DATE,\n    delivery_time TIME,\n    vehicle_id INT,\n    driver_id INT\n);\n\n### STATEMENT\n\nSELECT route_id, origin_location, destination_location FROM Routes WHERE distance_in_km BETWEEN 50 AND 100",
  "### TABLEDATA\n\nCREATE TABLE Routes (\n    route_id INT PRIMARY KEY,\n    origin_location VARCHAR,\n    destination_location VARCHAR,\n    distance_in_km FLOAT,\n    estimated_time_hours FLOAT\n);\n\n\nCREATE TABLE DeliverySchedules (\n    schedule_id INT PRIMARY KEY,\n    route_id INT REFERENCES Routes(route_id),\n    delivery_date DATE,\n    delivery_time TIME,\n    vehicle_id INT,\n    driver_id INT\n);\n\n### STATEMENT\n\nSELECT Routes.*, DeliverySchedules.delivery_date FROM Routes INNER JOIN DeliverySchedules ON Routes.route_id = DeliverySchedules.route_id WHERE DeliverySchedules.vehicle_id = 101",
  "### TABLEDATA\n\nCREATE TABLE Routes (\n    route_id INT PRIMARY KEY,\n    origin_location VARCHAR,\n    destination_location VARCHAR,\n    distance_in_km FLOAT,\n    estimated_time_hours FLOAT\n);\n\n\nCREATE TABLE DeliverySchedules (\n    schedule_id INT PRIMARY KEY,\n    route_id INT REFERENCES Routes(route_id),\n    delivery_date DATE,\n    delivery_time TIME,\n    vehicle_id INT,\n    driver_id INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_routes FROM Routes",
  "### TABLEDATA\n\nCREATE TABLE Routes (\n    route_id INT PRIMARY KEY,\n    origin_location VARCHAR,\n    destination_location VARCHAR,\n    distance_in_km FLOAT,\n    estimated_time_hours FLOAT\n);\n\n\nCREATE TABLE DeliverySchedules (\n    schedule_id INT PRIMARY KEY,\n    route_id INT REFERENCES Routes(route_id),\n    delivery_date DATE,\n    delivery_time TIME,\n    vehicle_id INT,\n    driver_id INT\n);\n\n### STATEMENT\n\nSELECT origin_location, destination_location, ROUND(distance_in_km * 0.621371, 2) AS distance_in_miles FROM Routes",
  "### TABLEDATA\n\nCREATE TABLE Routes (\n    route_id INT PRIMARY KEY,\n    origin_location VARCHAR,\n    destination_location VARCHAR,\n    distance_in_km FLOAT,\n    estimated_time_hours FLOAT\n);\n\n\nCREATE TABLE DeliverySchedules (\n    schedule_id INT PRIMARY KEY,\n    route_id INT REFERENCES Routes(route_id),\n    delivery_date DATE,\n    delivery_time TIME,\n    vehicle_id INT,\n    driver_id INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT origin_location FROM Routes ORDER BY origin_location",
  "### TABLEDATA\n\nCREATE TABLE Routes (\n    route_id INT PRIMARY KEY,\n    origin_location VARCHAR,\n    destination_location VARCHAR,\n    distance_in_km FLOAT,\n    estimated_time_hours FLOAT\n);\n\n\nCREATE TABLE DeliverySchedules (\n    schedule_id INT PRIMARY KEY,\n    route_id INT REFERENCES Routes(route_id),\n    delivery_date DATE,\n    delivery_time TIME,\n    vehicle_id INT,\n    driver_id INT\n);\n\n### STATEMENT\n\nSELECT route_id, SUM(distance_in_km) AS total_distance FROM Routes GROUP BY route_id HAVING total_distance > 500",
  "### TABLEDATA\n\nCREATE TABLE Routes (\n    route_id INT PRIMARY KEY,\n    origin_location VARCHAR,\n    destination_location VARCHAR,\n    distance_in_km FLOAT,\n    estimated_time_hours FLOAT\n);\n\n\nCREATE TABLE DeliverySchedules (\n    schedule_id INT PRIMARY KEY,\n    route_id INT REFERENCES Routes(route_id),\n    delivery_date DATE,\n    delivery_time TIME,\n    vehicle_id INT,\n    driver_id INT\n);\n\n### STATEMENT\n\nSELECT route_id, COUNT(*) AS num_deliveries FROM DeliverySchedules GROUP BY route_id ORDER BY num_deliveries DESC",
  "### TABLEDATA\n\nCREATE TABLE Routes (\n    route_id INT PRIMARY KEY,\n    origin_location VARCHAR,\n    destination_location VARCHAR,\n    distance_in_km FLOAT,\n    estimated_time_hours FLOAT\n);\n\n\nCREATE TABLE DeliverySchedules (\n    schedule_id INT PRIMARY KEY,\n    route_id INT REFERENCES Routes(route_id),\n    delivery_date DATE,\n    delivery_time TIME,\n    vehicle_id INT,\n    driver_id INT\n);\n\n### STATEMENT\n\nSELECT AVG(distance_in_km) AS avg_distance FROM Routes",
  "### TABLEDATA\n\nCREATE TABLE Routes (\n    route_id INT PRIMARY KEY,\n    origin_location VARCHAR,\n    destination_location VARCHAR,\n    distance_in_km FLOAT,\n    estimated_time_hours FLOAT\n);\n\n\nCREATE TABLE DeliverySchedules (\n    schedule_id INT PRIMARY KEY,\n    route_id INT REFERENCES Routes(route_id),\n    delivery_date DATE,\n    delivery_time TIME,\n    vehicle_id INT,\n    driver_id INT\n);\n\n### STATEMENT\n\nSELECT origin_location, destination_location, delivery_date FROM Routes INNER JOIN DeliverySchedules ON Routes.route_id = DeliverySchedules.route_id ORDER BY delivery_date ASC LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM RoutingSchedule;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT route_id, route_name, start_location, end_location FROM RoutingSchedule;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM DeliverySchedule;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT delivery_id, route_id, delivery_date FROM DeliverySchedule;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM ProductInventory;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity, unit_price FROM ProductInventory;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT route_id, route_name, start_location, end_location, distance FROM RoutingSchedule WHERE distance > 100;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT delivery_id, route_id, delivery_date, delivery_time, estimated_time FROM DeliverySchedule WHERE delivery_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity, unit_price FROM ProductInventory WHERE quantity <= 10;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM RoutingSchedule WHERE start_location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM DeliverySchedule WHERE estimated_time < 5.00;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM ProductInventory WHERE unit_price > 50.00;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT route_id, route_name, start_location, end_location FROM RoutingSchedule ORDER BY route_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT delivery_id, route_id, delivery_date, delivery_time, estimated_time FROM DeliverySchedule ORDER BY delivery_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity, unit_price FROM ProductInventory ORDER BY unit_price DESC;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT route_id, route_name, start_location, end_location FROM RoutingSchedule LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT delivery_id, route_id, delivery_date, delivery_time, estimated_time FROM DeliverySchedule LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity, unit_price FROM ProductInventory LIMIT 3 OFFSET 2;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM RoutingSchedule;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM DeliverySchedule;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM ProductInventory;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT route_id, route_name, start_location, end_location, distance FROM RoutingSchedule;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT delivery_id, route_id, delivery_date, delivery_time, estimated_time FROM DeliverySchedule;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity, unit_price FROM ProductInventory;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT route_name, start_location, end_location FROM RoutingSchedule WHERE distance > 100;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT delivery_date, delivery_time, estimated_time FROM DeliverySchedule WHERE delivery_date = '2022-12-25';",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM ProductInventory WHERE quantity < 10;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM RoutingSchedule JOIN DeliverySchedule ON RoutingSchedule.route_id = DeliverySchedule.route_id;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM DeliverySchedule JOIN ProductInventory ON DeliverySchedule.delivery_id = ProductInventory.product_id;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT route_name, start_location, end_location, delivery_date, delivery_time FROM RoutingSchedule JOIN DeliverySchedule ON RoutingSchedule.route_id = DeliverySchedule.route_id WHERE delivery_date = '2022-12-25';",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity, unit_price, route_name, delivery_time FROM ProductInventory JOIN DeliverySchedule ON ProductInventory.product_id = DeliverySchedule.delivery_id;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT route_name, start_location, end_location, distance, delivery_date, delivery_time FROM RoutingSchedule JOIN DeliverySchedule ON RoutingSchedule.route_id = DeliverySchedule.route_id WHERE distance > 100;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT product_name, quantity, unit_price, delivery_date, delivery_time FROM ProductInventory JOIN DeliverySchedule ON ProductInventory.product_id = DeliverySchedule.delivery_id WHERE quantity < 10;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT route_name, start_location, end_location, distance, delivery_time, product_name FROM RoutingSchedule JOIN DeliverySchedule ON RoutingSchedule.route_id = DeliverySchedule.route_id JOIN ProductInventory ON DeliverySchedule.delivery_id = ProductInventory.product_id;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT route_name, start_location, end_location, delivery_date, delivery_time, product_name, quantity, unit_price FROM RoutingSchedule JOIN DeliverySchedule ON RoutingSchedule.route_id = DeliverySchedule.route_id JOIN ProductInventory ON DeliverySchedule.delivery_id = ProductInventory.product_id;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT route_name, start_location, end_location, distance, delivery_date, delivery_time, product_name, quantity, unit_price FROM RoutingSchedule JOIN DeliverySchedule ON RoutingSchedule.route_id = DeliverySchedule.route_id JOIN ProductInventory ON DeliverySchedule.delivery_id = ProductInventory.product_id WHERE quantity < 10;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT route_name, start_location, end_location, distance, delivery_date, delivery_time, product_name, quantity, unit_price FROM RoutingSchedule JOIN DeliverySchedule ON RoutingSchedule.route_id = DeliverySchedule.route_id JOIN ProductInventory ON DeliverySchedule.delivery_id = ProductInventory.product_id WHERE distance > 100;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT route_name, start_location, end_location, delivery_date, delivery_time, product_name, quantity, unit_price FROM RoutingSchedule JOIN DeliverySchedule ON RoutingSchedule.route_id = DeliverySchedule.route_id JOIN ProductInventory ON DeliverySchedule.delivery_id = ProductInventory.product_id WHERE delivery_date = '2022-12-25';",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT route_name, start_location, end_location, distance, delivery_date, delivery_time, product_name, quantity, unit_price FROM RoutingSchedule JOIN DeliverySchedule ON RoutingSchedule.route_id = DeliverySchedule.route_id JOIN ProductInventory ON DeliverySchedule.delivery_id = ProductInventory.product_id WHERE estimated_time > 3.5;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT route_name, start_location, end_location, distance, delivery_date, delivery_time, product_name, quantity, unit_price FROM RoutingSchedule JOIN DeliverySchedule ON RoutingSchedule.route_id = DeliverySchedule.route_id JOIN ProductInventory ON DeliverySchedule.delivery_id = ProductInventory.product_id WHERE unit_price < 50;",
  "### TABLEDATA\n\nCREATE TABLE RoutingSchedule (\n    route_id SERIAL PRIMARY KEY,\n    route_name VARCHAR(50) NOT NULL,\n    start_location VARCHAR(100) NOT NULL,\n    end_location VARCHAR(100) NOT NULL,\n    distance DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE DeliverySchedule (\n    delivery_id SERIAL PRIMARY KEY,\n    route_id INT REFERENCES RoutingSchedule(route_id),\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    estimated_time DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE ProductInventory (\n    product_id SERIAL PRIMARY KEY,\n    product_name VARCHAR(100) NOT NULL,\n    quantity INT NOT NULL,\n    unit_price DECIMAL(10,2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT route_name, start_location, end_location, distance, delivery_date, delivery_time, product_name, quantity, unit_price FROM RoutingSchedule JOIN DeliverySchedule ON RoutingSchedule.route_id = DeliverySchedule.route_id JOIN ProductInventory ON DeliverySchedule.delivery_id = ProductInventory.product_id WHERE quantity < 10 AND unit_price < 50;",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT * FROM routing_schedule",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT route_name, start_location, end_location FROM routing_schedule",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT route_id, route_name, distance_km FROM routing_schedule",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT * FROM delivery_schedule",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT delivery_id, delivery_date, delivery_time FROM delivery_schedule",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT route_id, delivery_status FROM delivery_schedule",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT * FROM driver_schedule",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT driver_id, driver_name, driver_phone_number FROM driver_schedule",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT * FROM vehicle_schedule",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT vehicle_id, vehicle_number, vehicle_type FROM vehicle_schedule",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT vehicle_number, driver_id FROM vehicle_schedule",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT delivery_id, delivery_date, route_id, delivery_status FROM delivery_schedule JOIN routing_schedule ON delivery_schedule.route_id = routing_schedule.route_id",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT driver_id, driver_name, vehicle_id, vehicle_number FROM driver_schedule JOIN vehicle_schedule ON driver_schedule.driver_id = vehicle_schedule.driver_id",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT route_id, route_name, driver_id, driver_name FROM routing_schedule JOIN driver_schedule ON routing_schedule.route_id = driver_schedule.driver_id",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT * FROM routing_schedule WHERE distance_km > 100",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT * FROM delivery_schedule WHERE delivery_status = 'Delivered'",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT * FROM driver_schedule WHERE driver_name LIKE '%John%'",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT * FROM vehicle_schedule WHERE vehicle_type = 'Truck'",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT delivery_id, delivery_date, delivery_time, start_location, end_location FROM delivery_schedule JOIN routing_schedule ON delivery_schedule.route_id = routing_schedule.route_id",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT driver_id, driver_name, driver_license_number, vehicle_number, vehicle_type FROM driver_schedule JOIN vehicle_schedule ON driver_schedule.driver_id = vehicle_schedule.driver_id",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT * FROM routing_schedule;",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT route_id, route_name, start_location, end_location FROM routing_schedule;",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT route_id, route_name, delivery_date, delivery_time FROM routing_schedule JOIN delivery_schedule ON routing_schedule.route_id = delivery_schedule.route_id;",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT route_name, delivery_status FROM routing_schedule JOIN delivery_schedule ON routing_schedule.route_id = delivery_schedule.route_id;",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT route_name, start_location, end_location FROM routing_schedule WHERE distance_km > 100;",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT route_name, delivery_date, delivery_status FROM routing_schedule JOIN delivery_schedule ON routing_schedule.route_id = delivery_schedule.route_id WHERE delivery_status = 'delivered';",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT driver_name, driver_phone_number FROM driver_schedule;",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT driver_name, vehicle_number, vehicle_type FROM driver_schedule JOIN vehicle_schedule ON driver_schedule.driver_id = vehicle_schedule.driver_id;",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT vehicle_number, vehicle_type, delivery_date, delivery_time FROM vehicle_schedule JOIN delivery_schedule ON vehicle_schedule.driver_id = delivery_schedule.route_id;",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT start_location, end_location, driver_name FROM routing_schedule JOIN delivery_schedule ON routing_schedule.route_id = delivery_schedule.route_id JOIN vehicle_schedule ON delivery_schedule.route_id = vehicle_schedule.driver_id JOIN driver_schedule ON vehicle_schedule.driver_id = driver_schedule.driver_id;",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT delivery_id, delivery_date, delivery_status FROM delivery_schedule WHERE delivery_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT * FROM routing_schedule WHERE end_location LIKE '%City';",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT route_name, vehicle_type, driver_name FROM routing_schedule JOIN delivery_schedule ON routing_schedule.route_id = delivery_schedule.route_id JOIN vehicle_schedule ON delivery_schedule.route_id = vehicle_schedule.driver_id JOIN driver_schedule ON vehicle_schedule.driver_id = driver_schedule.driver_id WHERE delivery_status = 'in-transit';",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_deliveries FROM delivery_schedule;",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT AVG(distance_km) AS avg_distance FROM routing_schedule;",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT MAX(distance_km) AS max_distance, MIN(distance_km) AS min_distance FROM routing_schedule;",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT route_name, delivery_date, delivery_time FROM routing_schedule JOIN delivery_schedule ON routing_schedule.route_id = delivery_schedule.route_id WHERE delivery_date >= '2022-03-01' AND delivery_date <= '2022-03-31';",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT start_location, end_location, delivery_date FROM routing_schedule JOIN delivery_schedule ON routing_schedule.route_id = delivery_schedule.route_id ORDER BY delivery_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT route_name, driver_name, vehicle_number, delivery_time FROM routing_schedule JOIN delivery_schedule ON routing_schedule.route_id = delivery_schedule.route_id JOIN vehicle_schedule ON delivery_schedule.route_id = vehicle_schedule.driver_id JOIN driver_schedule ON vehicle_schedule.driver_id = driver_schedule.driver_id WHERE driver_name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT route_name, delivery_date, delivery_status FROM routing_schedule LEFT JOIN delivery_schedule ON routing_schedule.route_id = delivery_schedule.route_id;",
  "### TABLEDATA\n\nCREATE TABLE routing_schedule (\n  route_id INT PRIMARY KEY,\n  route_name VARCHAR(50),\n  start_location VARCHAR(50),\n  end_location VARCHAR(50),\n  distance_km FLOAT\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id INT PRIMARY KEY,\n  delivery_date DATE,\n  delivery_time TIME,\n  delivery_status VARCHAR(20),\n  route_id INT REFERENCES routing_schedule(route_id)\n)\n\nCREATE TABLE driver_schedule (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50),\n  driver_license_number VARCHAR(20),\n  driver_phone_number VARCHAR(15)\n)\n\nCREATE TABLE vehicle_schedule (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_number VARCHAR(20),\n  vehicle_type VARCHAR(20),\n  driver_id INT REFERENCES driver_schedule(driver_id)\n)\n\n### STATEMENT\n\nSELECT route_name, vehicle_type, delivery_date FROM routing_schedule JOIN delivery_schedule ON routing_schedule.route_id = delivery_schedule.route_id JOIN vehicle_schedule ON delivery_schedule.route_id = vehicle_schedule.driver_id WHERE vehicle_type = 'Truck';",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT * FROM routes;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT * FROM delivery_schedule;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT * FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT * FROM shipments;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT * FROM drivers;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT route_id, origin_city, destination_city, distance FROM routes;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT delivery_id, route_id, delivery_time, status FROM delivery_schedule;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT vehicle_id, vehicle_type, capacity FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT shipment_id, delivery_id, product_name, quantity FROM shipments;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT driver_id, driver_name, vehicle_id FROM drivers;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT route_id, origin_city, destination_city FROM routes WHERE distance > 100;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT delivery_id, route_id, delivery_time FROM delivery_schedule WHERE status = 'pending';",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT vehicle_id, vehicle_type FROM vehicles WHERE capacity >= 10;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT shipment_id, product_name, quantity FROM shipments WHERE quantity > 5;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT driver_id, driver_name FROM drivers WHERE driver_name LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT count(*) FROM routes;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT count(*) FROM delivery_schedule;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT count(*) FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT count(*) FROM shipments;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT count(*) FROM drivers;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT * FROM routes",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT route_id, origin_city, destination_city FROM routes WHERE distance > 100",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT delivery_id, route_id, delivery_time FROM delivery_schedule WHERE status = 'pending'",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT vehicle_id, vehicle_type FROM vehicles",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT shipment_id, delivery_id, product_name, quantity FROM shipments WHERE quantity >= 10",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT driver_id, driver_name FROM drivers",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT * FROM routes JOIN delivery_schedule ON routes.route_id = delivery_schedule.route_id",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT * FROM vehicles JOIN drivers ON vehicles.vehicle_id = drivers.vehicle_id",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT routes.origin_city, delivery_schedule.delivery_time, drivers.driver_name FROM routes JOIN delivery_schedule ON routes.route_id = delivery_schedule.route_id JOIN drivers ON drivers.vehicle_id = vehicles.vehicle_id",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT * FROM shipments JOIN delivery_schedule ON shipments.delivery_id = delivery_schedule.delivery_id JOIN routes ON delivery_schedule.route_id = routes.route_id",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT routes.origin_city, routes.destination_city, vehicles.vehicle_type FROM routes JOIN vehicles ON vehicles.vehicle_id = drivers.vehicle_id",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT routes.origin_city, drivers.driver_name FROM routes JOIN delivery_schedule ON routes.route_id = delivery_schedule.route_id JOIN drivers ON drivers.vehicle_id = vehicles.vehicle_id",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT route_id, SUM(quantity) AS total_quantity FROM shipments GROUP BY route_id HAVING total_quantity > 100",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT vehicle_type, COUNT(*) AS total_vehicles FROM vehicles GROUP BY vehicle_type ORDER BY total_vehicles DESC",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin_city VARCHAR(50),\n  destination_city VARCHAR(50),\n  distance DECIMAL\n)\n\nCREATE TABLE delivery_schedule (\n  delivery_id UUID PRIMARY KEY,\n  route_id UUID REFERENCES routes(route_id),\n  delivery_time TIMESTAMP,\n  status VARCHAR(50)\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  capacity DECIMAL\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  delivery_id UUID REFERENCES delivery_schedule(delivery_id),\n  product_name VARCHAR(50),\n  quantity INT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR(50),\n  vehicle_id UUID REFERENCES vehicles(vehicle_id)\n)\n\n### STATEMENT\n\nSELECT driver_name, COUNT(*) AS total_deliveries FROM drivers JOIN delivery_schedule ON drivers.driver_id = vehicles.driver_id GROUP BY driver_name ORDER BY total_deliveries DESC"
]