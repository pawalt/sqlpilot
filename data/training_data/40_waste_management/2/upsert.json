[
  "### TABLEDATA\n\nCREATE TABLE waste_collection_accounts (\n  account_id UUID PRIMARY KEY,\n  customer_name VARCHAR(255),\n  account_balance DECIMAL(10, 2),\n  billing_address VARCHAR(255),\n  account_status ENUM('active', 'inactive')\n)\n\n### STATEMENT\n\nINSERT INTO waste_collection_accounts (account_id, customer_name, account_balance, billing_address, account_status) VALUES ('123e4567-e89b-12d3-a456-426614174000', 'John Doe', 1000.00, '123 Main St', 'active') ON CONFLICT (account_id) DO UPDATE SET customer_name = 'John Doe', account_balance = 1500.00, billing_address = '456 Elm St', account_status = 'inactive';",
  "### TABLEDATA\n\nCREATE TABLE waste_collection_accounts (\n  account_id UUID PRIMARY KEY,\n  customer_name VARCHAR(255),\n  account_balance DECIMAL(10, 2),\n  billing_address VARCHAR(255),\n  account_status ENUM('active', 'inactive')\n)\n\n### STATEMENT\n\nINSERT INTO waste_collection_accounts (account_id, customer_name, account_balance, billing_address, account_status) VALUES ('223e4567-e89b-12d3-a456-426614174000', 'Jane Smith', 500.00, '456 Elm St', 'inactive') ON CONFLICT (account_id) DO UPDATE SET customer_name = 'Jane Smith', account_balance = 700.00, billing_address = '789 Oak St', account_status = 'active';",
  "### TABLEDATA\n\nCREATE TABLE waste_collection_accounts (\n  account_id UUID PRIMARY KEY,\n  customer_name VARCHAR(255),\n  account_balance DECIMAL(10, 2),\n  billing_address VARCHAR(255),\n  account_status ENUM('active', 'inactive')\n)\n\n### STATEMENT\n\nINSERT INTO waste_collection_accounts (account_id, customer_name, account_balance, billing_address, account_status) VALUES ('323e4567-e89b-12d3-a456-426614174000', 'Alice Johnson', 750.00, '789 Oak St', 'active') ON CONFLICT (account_id) DO UPDATE SET customer_name = 'Alice Johnson', account_balance = 900.00, billing_address = '123 Pine St', account_status = 'inactive';",
  "### TABLEDATA\n\nCREATE TABLE waste_collection_accounts (\n  account_id UUID PRIMARY KEY,\n  customer_name VARCHAR(255),\n  account_balance DECIMAL(10, 2),\n  billing_address VARCHAR(255),\n  account_status ENUM('active', 'inactive')\n)\n\n### STATEMENT\n\nINSERT INTO waste_collection_accounts (account_id, customer_name, account_balance, billing_address, account_status) VALUES ('423e4567-e89b-12d3-a456-426614174000', 'Bob Williams', 1200.00, '123 Pine St', 'inactive') ON CONFLICT (account_id) DO UPDATE SET customer_name = 'Bob Williams', account_balance = 1400.00, billing_address = '456 Cedar St', account_status = 'active';",
  "### TABLEDATA\n\nCREATE TABLE waste_collection_accounts (\n  account_id UUID PRIMARY KEY,\n  customer_name VARCHAR(255),\n  account_balance DECIMAL(10, 2),\n  billing_address VARCHAR(255),\n  account_status ENUM('active', 'inactive')\n)\n\n### STATEMENT\n\nINSERT INTO waste_collection_accounts (account_id, customer_name, account_balance, billing_address, account_status) VALUES ('523e4567-e89b-12d3-a456-426614174000', 'Sarah Brown', 900.00, '456 Cedar St', 'active') ON CONFLICT (account_id) DO UPDATE SET customer_name = 'Sarah Brown', account_balance = 1100.00, billing_address = '789 Maple St', account_status = 'inactive';",
  "### TABLEDATA\n\nCREATE TABLE waste_collection_accounts (\n  account_id UUID PRIMARY KEY,\n  customer_name VARCHAR(255),\n  account_balance DECIMAL(10, 2),\n  billing_address VARCHAR(255),\n  account_status ENUM('active', 'inactive')\n)\n\n### STATEMENT\n\nINSERT INTO waste_collection_accounts (account_id, customer_name, account_balance,...",
  "### TABLEDATA\n\nCREATE TABLE waste_collection_accounts (\n  account_id UUID PRIMARY KEY,\n  customer_name VARCHAR(255),\n  account_balance DECIMAL(10, 2),\n  billing_address VARCHAR(255),\n  account_status ENUM('active', 'inactive')\n)\n\n### STATEMENT\n\nINSERT INTO waste_collection_accounts (account_id, customer_name, account_balance, billing_address, account_status) VALUES ('1', 'John Doe', 100.00, '123 Main St', 'active') ON CONFLICT (account_id) DO UPDATE SET customer_name = 'John Doe', account_balance = 200.00, billing_address = '456 Elm St', account_status = 'inactive';",
  "### TABLEDATA\n\nCREATE TABLE waste_collection_accounts (\n  account_id UUID PRIMARY KEY,\n  customer_name VARCHAR(255),\n  account_balance DECIMAL(10, 2),\n  billing_address VARCHAR(255),\n  account_status ENUM('active', 'inactive')\n)\n\n### STATEMENT\n\nINSERT INTO waste_collection_accounts (account_id, customer_name, account_balance, billing_address, account_status) VALUES ('2', 'Jane Smith', 150.50, '456 Elm St', 'active') ON CONFLICT (account_id) DO UPDATE SET customer_name = 'Jane Smith', account_balance = 250.50, billing_address = '789 Oak St', account_status = 'inactive';",
  "### TABLEDATA\n\nCREATE TABLE waste_collection_accounts (\n  account_id UUID PRIMARY KEY,\n  customer_name VARCHAR(255),\n  account_balance DECIMAL(10, 2),\n  billing_address VARCHAR(255),\n  account_status ENUM('active', 'inactive')\n)\n\n### STATEMENT\n\nINSERT INTO waste_collection_accounts (account_id, customer_name, account_balance, billing_address, account_status) VALUES ('3', 'Mike Johnson', 200.75, '789 Oak St', 'inactive') ON CONFLICT (account_id) DO UPDATE SET customer_name = 'Mike Johnson', account_balance = 300.75, billing_address = '123 Main St', account_status = 'active';",
  "### TABLEDATA\n\nCREATE TABLE waste_collection_accounts (\n  account_id UUID PRIMARY KEY,\n  customer_name VARCHAR(255),\n  account_balance DECIMAL(10, 2),\n  billing_address VARCHAR(255),\n  account_status ENUM('active', 'inactive')\n)\n\n### STATEMENT\n\nINSERT INTO waste_collection_accounts (account_id, customer_name, account_balance, billing_address, account_status) VALUES ('4', 'Sarah Brown', 300.25, '234 Pine St', 'active') ON CONFLICT (account_id) DO UPDATE SET customer_name = 'Sarah Brown', account_balance = 400.25, billing_address = '345 Maple St', account_status = 'inactive';",
  "### TABLEDATA\n\nCREATE TABLE waste_collection_accounts (\n  account_id UUID PRIMARY KEY,\n  customer_name VARCHAR(255),\n  account_balance DECIMAL(10, 2),\n  billing_address VARCHAR(255),\n  account_status ENUM('active', 'inactive')\n)\n\n### STATEMENT\n\nINSERT INTO waste_collection_accounts (account_id, customer_name, account_balance, billing_address, account_status) VALUES ('5', 'Adam Wilson', 400.50, '345 Maple St', 'inactive') ON CONFLICT (account_id) DO UPDATE SET customer_name = 'Adam Wilson', account_balance = 500.50, billing_address = '456 Elm St', account_status = 'active';",
  "### TABLEDATA\n\nCREATE TABLE waste_collection_accounts (\n  account_id UUID PRIMARY KEY,\n  customer_name VARCHAR(255),\n  account_balance DECIMAL(10, 2),\n  billing_address VARCHAR(255),\n  account_status ENUM('active', 'inactive')\n)\n\n### STATEMENT\n\nINSERT INTO waste_collection_accounts (account_id, customer_name, account_balance, billing_address, account_status) VALUES ('6', 'Emily Davis', 500.75, '456 Elm St', 'active') ON CONFLICT (account_id) DO UPDATE SET customer_name = 'Emily Davis', account_balance = 600.75, billing_address = '567 Oak St', account_status = 'inactive';",
  "### TABLEDATA\n\nCREATE TABLE waste_collection_accounts (\n  account_id UUID PRIMARY KEY,\n  customer_name VARCHAR(255),\n  account_balance DECIMAL(10, 2),\n  billing_address VARCHAR(255),\n  account_status ENUM('active', 'inactive')\n)\n\n### STATEMENT\n\nINSERT INTO waste_collection_accounts (account_id, customer_name, account_balance, billing_address, account_status) VALUES ('7', 'Chris White', 600.25, '567 Oak St', 'inactive') ON CONFLICT (account_id) DO UPDATE SET customer_name = 'Chris White', account_balance = 700.25, billing_address = '678 Pine St', account_status = 'active';",
  "### TABLEDATA\n\nCREATE TABLE waste_collection_accounts (\n  account_id UUID PRIMARY KEY,\n  customer_name VARCHAR(255),\n  account_balance DECIMAL(10, 2),\n  billing_address VARCHAR(255),\n  account_status ENUM('active', 'inactive')\n)\n\n### STATEMENT\n\nINSERT INTO waste_collection_accounts (account_id, customer_name, account_balance, billing_address, account_status) VALUES ('8', 'Anna Lee', 700.50, '678 Pine St', 'active') ON CONFLICT (account_id) DO UPDATE SET customer_name = 'Anna Lee', account_balance = 800.50, billing_address = '789 Elm St', account_status = 'inactive';",
  "### TABLEDATA\n\nCREATE TABLE waste_collection_accounts (\n  account_id UUID PRIMARY KEY,\n  customer_name VARCHAR(255),\n  account_balance DECIMAL(10, 2),\n  billing_address VARCHAR(255),\n  account_status ENUM('active', 'inactive')\n)\n\n### STATEMENT\n\nINSERT INTO waste_collection_accounts (account_id, customer_name, account_balance, billing_address, account_status) VALUES ('9', 'Kevin Johnson', 800.75, '789 Elm St', 'inactive') ON CONFLICT (account_id) DO UPDATE SET customer_name = 'Kevin Johnson', account_balance = 900.75, billing_address = '890 Maple St', account_status = 'active';",
  "### TABLEDATA\n\nCREATE TABLE waste_collection_accounts (\n  account_id UUID PRIMARY KEY,\n  customer_name VARCHAR(255),\n  account_balance DECIMAL(10, 2),\n  billing_address VARCHAR(255),\n  account_status ENUM('active', 'inactive')\n)\n\n### STATEMENT\n\nINSERT INTO waste_collection_accounts (account_id, customer_name, account_balance, billing_address, account_status) VALUES ('10', 'Rachel Brown', 900.25, '890 Maple St', 'active') ON CONFLICT (account_id) DO UPDATE SET customer_name = 'Rachel Brown', account_balance = 1000.25, billing_address = '901 Oak St', account_status = 'inactive';",
  "### TABLEDATA\n\nCREATE TABLE waste_collection_accounts (\n  account_id UUID PRIMARY KEY,\n  customer_name VARCHAR(255),\n  account_balance DECIMAL(10, 2),\n  billing_address VARCHAR(255),\n  account_status ENUM('active', 'inactive')\n)\n\n### STATEMENT\n\nINSERT INTO waste_collection_accounts (account_id, customer_name, account_balance, billing_address, account_status) VALUES ('11', 'Peter Wilson', 1000.50, '901 Oak St', 'inactive') ON CONFLICT (account_id) DO UPDATE SET customer_name = 'Peter Wilson', account_balance = 1100.50, billing_address = '101 Main St', account_status = 'active';",
  "### TABLEDATA\n\nCREATE TABLE waste_collection_accounts (\n  account_id UUID PRIMARY KEY,\n  customer_name VARCHAR(255),\n  account_balance DECIMAL(10, 2),\n  billing_address VARCHAR(255),\n  account_status ENUM('active', 'inactive')\n)\n\n### STATEMENT\n\nINSERT INTO waste_collection_accounts (account_id, customer_name, account_balance, billing_address, account_status) VALUES ('12', 'Linda Davis', 1100.75, '101 Main St', 'active') ON CONFLICT (account_id) DO UPDATE SET customer_name = 'Linda Davis', account_balance = 1200.75, billing_address = '202 Elm St', account_status = 'inactive';",
  "### TABLEDATA\n\nCREATE TABLE waste_collection_accounts (\n  account_id UUID PRIMARY KEY,\n  customer_name VARCHAR(255),\n  account_balance DECIMAL(10, 2),\n  billing_address VARCHAR(255),\n  account_status ENUM('active', 'inactive')\n)\n\n### STATEMENT\n\nINSERT INTO waste_collection_accounts (account_id, customer_name, account_balance, billing_address, account_status) VALUES ('13', 'Mark White', 1200.25, '202 Elm St', 'inactive') ON CONFLICT (account_id) DO UPDATE SET customer_name = 'Mark White', account_balance = 1300.25, billing_address = '303 Maple St', account_status = 'active';",
  "### TABLEDATA\n\nCREATE TABLE waste_collection_accounts (\n  account_id UUID PRIMARY KEY,\n  customer_name VARCHAR(255),\n  account_balance DECIMAL(10, 2),\n  billing_address VARCHAR(255),\n  account_status ENUM('active', 'inactive')\n)\n\n### STATEMENT\n\nINSERT INTO waste_collection_accounts (account_id, customer_name, account_balance, billing_address, account_status) VALUES ('14', 'Catherine Lee', 1300.50, '303 Maple St', 'active') ON CONFLICT (account_id) DO UPDATE SET customer_name = 'Catherine Lee', account_balance = 1400.50, billing_address = '404 Oak St', account_status = 'inactive';",
  "### TABLEDATA\n\nCREATE TABLE waste_collection_accounts (\n  account_id UUID PRIMARY KEY,\n  customer_name VARCHAR(255),\n  account_balance DECIMAL(10, 2),\n  billing_address VARCHAR(255),\n  account_status ENUM('active', 'inactive')\n)\n\n### STATEMENT\n\nINSERT INTO waste_collection_accounts (account_id, customer_name, account_balance, billing_address, account_status) VALUES ('15', 'Sam Johnson', 1400.75, '404 Oak St', 'inactive') ON CONFLICT (account_id) DO UPDATE SET customer_name = 'Sam Johnson', account_balance = 1500.75, billing_address = '505 Pine St', account_status = 'active';",
  "### TABLEDATA\n\nCREATE TABLE waste_collection_accounts (\n  account_id UUID PRIMARY KEY,\n  customer_name VARCHAR(255),\n  account_balance DECIMAL(10, 2),\n  billing_address VARCHAR(255),\n  account_status ENUM('active', 'inactive')\n)\n\n### STATEMENT\n\nINSERT INTO waste_collection_accounts (account_id, customer_name, account_balance, billing_address, account_status) VALUES ('16', 'Laura Brown', 1500.25, '505 Pine St', 'active') ON CONFLICT (account_id) DO UPDATE SET customer_name = 'Laura Brown', account_balance = 1600.25, billing_address = '606 Elm St', account_status = 'inactive';",
  "### TABLEDATA\n\nCREATE TABLE waste_collection_accounts (\n  account_id UUID PRIMARY KEY,\n  customer_name VARCHAR(255),\n  account_balance DECIMAL(10, 2),\n  billing_address VARCHAR(255),\n  account_status ENUM('active', 'inactive')\n)\n\n### STATEMENT\n\nINSERT INTO waste_collection_accounts (account_id, customer_name, account_balance, billing_address, account_status) VALUES ('17', 'Steve Wilson', 1600.50, '606 Elm St', 'inactive') ON CONFLICT (account_id) DO UPDATE SET customer_name = 'Steve Wilson', account_balance = 1700.50, billing_address = '707 Oak St', account_status = 'active';",
  "### TABLEDATA\n\nCREATE TABLE waste_collection_accounts (\n  account_id UUID PRIMARY KEY,\n  customer_name VARCHAR(255),\n  account_balance DECIMAL(10, 2),\n  billing_address VARCHAR(255),\n  account_status ENUM('active', 'inactive')\n)\n\n### STATEMENT\n\nINSERT INTO waste_collection_accounts (account_id, customer_name, account_balance, billing_address, account_status) VALUES ('18', 'Sara Davis', 1700.75, '707 Oak St', 'active') ON CONFLICT (account_id) DO UPDATE SET customer_name = 'Sara Davis', account_balance = 1800.75, billing_address = '808 Pine St', account_status = 'inactive';",
  "### TABLEDATA\n\nCREATE TABLE waste_collection_accounts (\n  account_id UUID PRIMARY KEY,\n  customer_name VARCHAR(255),\n  account_balance DECIMAL(10, 2),\n  billing_address VARCHAR(255),\n  account_status ENUM('active', 'inactive')\n)\n\n### STATEMENT\n\nINSERT INTO waste_collection_accounts (account_id, customer_name, account_balance, billing_address, account_status) VALUES ('19', 'Michael White', 1800.25, '808 Pine St', 'inactive') ON CONFLICT (account_id) DO UPDATE SET customer_name = 'Michael White', account_balance = 1900.25, billing_address = '909 Elm St', account_status = 'active';",
  "### TABLEDATA\n\nCREATE TABLE waste_collection_accounts (\n  account_id UUID PRIMARY KEY,\n  customer_name VARCHAR(255),\n  account_balance DECIMAL(10, 2),\n  billing_address VARCHAR(255),\n  account_status ENUM('active', 'inactive')\n)\n\n### STATEMENT\n\nINSERT INTO waste_collection_accounts (account_id, customer_name, account_balance, billing_address, account_status) VALUES ('20', 'Jessica Lee', 1900.50, '909 Elm St', 'active') ON CONFLICT (account_id) DO UPDATE SET customer_name = 'Jessica Lee', account_balance = 2000.50, billing_address = '910 Maple St', account_status = 'inactive';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nINSERT INTO customer_accounts (customer_id, customer_name, address, phone_number) VALUES (1, 'John Doe', '123 Main St', '555-1234') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'John Doe', address = '123 Main St', phone_number = '555-1234';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nINSERT INTO customer_accounts (customer_id, customer_name, address, phone_number) VALUES (2, 'Jane Smith', '456 Oak Ave', '555-5678') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Jane Smith', address = '456 Oak Ave', phone_number = '555-5678';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nINSERT INTO customer_accounts (customer_id, customer_name, address, phone_number) VALUES (3, 'Alice Johnson', '789 Elm St', '555-9012') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Alice Johnson', address = '789 Elm St', phone_number = '555-9012';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nINSERT INTO customer_accounts (customer_id, customer_name, address, phone_number) VALUES (4, 'Bob Brown', '369 Pine Ave', '555-3456') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Bob Brown', address = '369 Pine Ave', phone_number = '555-3456';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nINSERT INTO customer_accounts (customer_id, customer_name, address, phone_number) VALUES (5, 'Sara Davis', '246 Cedar Rd', '555-7890') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Sara Davis', address = '246 Cedar Rd', phone_number = '555-7890';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nINSERT INTO customer_accounts (customer_id, customer_name, address, phone_number) VALUES (6, 'Mike Wilson', '135 Maple Blvd', '555-2345') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Mike Wilson', address = '135 Maple Blvd', phone_number = '555-2345';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nINSERT INTO customer_accounts (customer_id, customer_name, address, phone_number) VALUES (7, 'Emily Lee', '579 Birch Ct', '555-6789') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Emily Lee', address = '579 Birch Ct', phone_number = '555-6789';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nINSERT INTO customer_accounts (customer_id, customer_name, address, phone_number) VALUES (8, 'Chris Adams', '468 Oak Ln', '555-1234') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Chris Adams', address = '468 Oak Ln', phone_number = '555-1234';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nINSERT INTO customer_accounts (customer_id, customer_name, address, phone_number) VALUES (9, 'Laura Taylor', '357 Elm Dr', '555-5678') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Laura Taylor', address = '357 Elm Dr', phone_number = '555-5678';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nINSERT INTO customer_accounts (customer_id, customer_name, address, phone_number) VALUES (10, 'Sam Wright', '246 Pine Ave', '555-9012') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Sam Wright', address = '246 Pine Ave', phone_number = '555-9012';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nINSERT INTO billing_information (bill_id, customer_id, bill_amount, payment_status) VALUES (101, 1, 100.50, 'Paid') ON CONFLICT (bill_id) DO UPDATE SET customer_id = 1, bill_amount = 100.50, payment_status = 'Paid';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nINSERT INTO billing_information (bill_id, customer_id, bill_amount, payment_status) VALUES (102, 2, 150.75, 'Pending') ON CONFLICT (bill_id) DO UPDATE SET customer_id = 2, bill_amount = 150.75, payment_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nINSERT INTO billing_information (bill_id, customer_id, bill_amount, payment_status) VALUES (103, 3, 75.25, 'Pending') ON CONFLICT (bill_id) DO UPDATE SET customer_id = 3, bill_amount = 75.25, payment_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nINSERT INTO billing_information (bill_id, customer_id, bill_amount, payment_status) VALUES (104, 4, 200.00, 'Paid') ON CONFLICT (bill_id) DO UPDATE SET customer_id = 4, bill_amount = 200.00, payment_status = 'Paid';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nINSERT INTO billing_information (bill_id, customer_id, bill_amount, payment_status) VALUES (105, 5, 125.00, 'Paid') ON CONFLICT (bill_id) DO UPDATE SET customer_id = 5, bill_amount = 125.00, payment_status = 'Paid';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nINSERT INTO billing_information (bill_id, customer_id, bill_amount, payment_status) VALUES (106, 6, 80.50, 'Pending') ON CONFLICT (bill_id) DO UPDATE SET customer_id = 6, bill_amount = 80.50, payment_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nINSERT INTO billing_information (bill_id, customer_id, bill_amount, payment_status) VALUES (107, 7, 95.75, 'Paid') ON CONFLICT (bill_id) DO UPDATE SET customer_id = 7, bill_amount = 95.75, payment_status = 'Paid';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nINSERT INTO billing_information (bill_id, customer_id, bill_amount, payment_status) VALUES (108, 8, 120.00, 'Pending') ON CONFLICT (bill_id) DO UPDATE SET customer_id = 8, bill_amount = 120.00, payment_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nINSERT INTO billing_information (bill_id, customer_id, bill_amount, payment_status) VALUES (109, 9, 150.25, 'Paid') ON CONFLICT (bill_id) DO UPDATE SET customer_id = 9, bill_amount = 150.25, payment_status = 'Paid';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nINSERT INTO billing_information (bill_id, customer_id, bill_amount, payment_status) VALUES (110, 10, 90.75, 'Pending') ON CONFLICT (bill_id) DO UPDATE SET customer_id = 10, bill_amount = 90.75, payment_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nUPSERT INTO customer_accounts (customer_id, customer_name, address, phone_number) VALUES (1, 'John Doe', '123 Main St', '555-1234') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'John Doe', address = '123 Main St', phone_number = '555-1234';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nUPSERT INTO customer_accounts (customer_id, customer_name, address, phone_number) VALUES (2, 'Alice Smith', '456 Elm St', '555-5678') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Alice Smith', address = '456 Elm St', phone_number = '555-5678';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nUPSERT INTO customer_accounts (customer_id, customer_name, address, phone_number) VALUES (3, 'Bob Johnson', '789 Oak St', '555-9012') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Bob Johnson', address = '789 Oak St', phone_number = '555-9012';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nUPSERT INTO billing_information (bill_id, customer_id, bill_amount, payment_status) VALUES (101, 1, 100.50, 'Paid') ON CONFLICT (bill_id) DO UPDATE SET customer_id = 1, bill_amount = 100.50, payment_status = 'Paid';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nUPSERT INTO billing_information (bill_id, customer_id, bill_amount, payment_status) VALUES (102, 2, 75.25, 'Pending') ON CONFLICT (bill_id) DO UPDATE SET customer_id = 2, bill_amount = 75.25, payment_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nUPSERT INTO billing_information (bill_id, customer_id, bill_amount, payment_status) VALUES (103, 3, 150.75, 'Due') ON CONFLICT (bill_id) DO UPDATE SET customer_id = 3, bill_amount = 150.75, payment_status = 'Due';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nUPSERT INTO customer_accounts (customer_id, customer_name, address, phone_number) VALUES (4, 'Mary Brown', '246 Pine St', '555-3456') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Mary Brown', address = '246 Pine St', phone_number = '555-3456';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nUPSERT INTO customer_accounts (customer_id, customer_name, address, phone_number) VALUES (5, 'David White', '135 Cedar St', '555-6789') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'David White', address = '135 Cedar St', phone_number = '555-6789';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nUPSERT INTO customer_accounts (customer_id, customer_name, address, phone_number) VALUES (6, 'Sarah Green', '378 Oak St', '555-0123') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Sarah Green', address = '378 Oak St', phone_number = '555-0123';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nUPSERT INTO billing_information (bill_id, customer_id, bill_amount, payment_status) VALUES (104, 4, 200.25, 'Paid') ON CONFLICT (bill_id) DO UPDATE SET customer_id = 4, bill_amount = 200.25, payment_status = 'Paid';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nUPSERT INTO billing_information (bill_id, customer_id, bill_amount, payment_status) VALUES (105, 5, 125.50, 'Pending') ON CONFLICT (bill_id) DO UPDATE SET customer_id = 5, bill_amount = 125.50, payment_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nUPSERT INTO billing_information (bill_id, customer_id, bill_amount, payment_status) VALUES (106, 6, 180.75, 'Due') ON CONFLICT (bill_id) DO UPDATE SET customer_id = 6, bill_amount = 180.75, payment_status = 'Due';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nUPSERT INTO customer_accounts (customer_id, customer_name, address, phone_number) VALUES (7, 'Kevin Wright', '567 Maple St', '555-2345') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Kevin Wright', address = '567 Maple St', phone_number = '555-2345';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nUPSERT INTO customer_accounts (customer_id, customer_name, address, phone_number) VALUES (8, 'Laura Taylor', '688 Pine St', '555-5678') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Laura Taylor', address = '688 Pine St', phone_number = '555-5678';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nUPSERT INTO customer_accounts (customer_id, customer_name, address, phone_number) VALUES (9, 'Michael Reed', '789 Birch St', '555-8901') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Michael Reed', address = '789 Birch St', phone_number = '555-8901';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nUPSERT INTO billing_information (bill_id, customer_id, bill_amount, payment_status) VALUES (107, 7, 150.25, 'Paid') ON CONFLICT (bill_id) DO UPDATE SET customer_id = 7, bill_amount = 150.25, payment_status = 'Paid';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nUPSERT INTO billing_information (bill_id, customer_id, bill_amount, payment_status) VALUES (108, 8, 100.50, 'Pending') ON CONFLICT (bill_id) DO UPDATE SET customer_id = 8, bill_amount = 100.50, payment_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nUPSERT INTO billing_information (bill_id, customer_id, bill_amount, payment_status) VALUES (109, 9, 175.75, 'Due') ON CONFLICT (bill_id) DO UPDATE SET customer_id = 9, bill_amount = 175.75, payment_status = 'Due';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nUPSERT INTO customer_accounts (customer_id, customer_name, address, phone_number) VALUES (10, 'Emily Adams', '456 Cherry St', '555-3456') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Emily Adams', address = '456 Cherry St', phone_number = '555-3456';",
  "### TABLEDATA\n\nCREATE TABLE customer_accounts (\n    customer_id INT PRIMARY KEY,\n    customer_name STRING,\n    address STRING,\n    phone_number STRING\n);\n\nCREATE TABLE billing_information (\n    bill_id INT PRIMARY KEY,\n    customer_id INT,\n    bill_amount DECIMAL,\n    payment_status STRING\n);\n\n### STATEMENT\n\nUPSERT INTO customer_accounts (customer_id, customer_name, address, phone_number) VALUES (11, 'Chris Hall', '678 Oak St', '555-6789') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Chris Hall', address = '678 Oak St', phone_number = '555-6789';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  address VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE billing_info (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  billing_date DATE,\n  amount DECIMAL\n)\n\nCREATE TABLE waste_collection (\n  collection_id INT PRIMARY KEY,\n  customer_id INT,\n  collection_date DATE,\n  weight DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, address, phone_number) VALUES (1, 'John Doe', '123 Main St', '555-1234')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  address VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE billing_info (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  billing_date DATE,\n  amount DECIMAL\n)\n\nCREATE TABLE waste_collection (\n  collection_id INT PRIMARY KEY,\n  customer_id INT,\n  collection_date DATE,\n  weight DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, address, phone_number) VALUES (2, 'Jane Smith', '456 Oak Ave', '555-5678')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  address VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE billing_info (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  billing_date DATE,\n  amount DECIMAL\n)\n\nCREATE TABLE waste_collection (\n  collection_id INT PRIMARY KEY,\n  customer_id INT,\n  collection_date DATE,\n  weight DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, address, phone_number) VALUES (3, 'Alice Johnson', '789 Elm Rd', '555-9012')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  address VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE billing_info (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  billing_date DATE,\n  amount DECIMAL\n)\n\nCREATE TABLE waste_collection (\n  collection_id INT PRIMARY KEY,\n  customer_id INT,\n  collection_date DATE,\n  weight DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, address, phone_number) VALUES (4, 'Bob Brown', '321 Pine Blvd', '555-3456')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  address VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE billing_info (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  billing_date DATE,\n  amount DECIMAL\n)\n\nCREATE TABLE waste_collection (\n  collection_id INT PRIMARY KEY,\n  customer_id INT,\n  collection_date DATE,\n  weight DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, address, phone_number) VALUES (5, 'Sarah Wilson', '654 Cedar Ln', '555-7890')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  address VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE billing_info (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  billing_date DATE,\n  amount DECIMAL\n)\n\nCREATE TABLE waste_collection (\n  collection_id INT PRIMARY KEY,\n  customer_id INT,\n  collection_date DATE,\n  weight DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO billing_info (bill_id, customer_id, billing_date, amount) VALUES (1, 1, '2022-01-01', 100.00)",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  address VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE billing_info (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  billing_date DATE,\n  amount DECIMAL\n)\n\nCREATE TABLE waste_collection (\n  collection_id INT PRIMARY KEY,\n  customer_id INT,\n  collection_date DATE,\n  weight DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO billing_info (bill_id, customer_id, billing_date, amount) VALUES (2, 2, '2022-01-15', 150.00)",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  address VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE billing_info (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  billing_date DATE,\n  amount DECIMAL\n)\n\nCREATE TABLE waste_collection (\n  collection_id INT PRIMARY KEY,\n  customer_id INT,\n  collection_date DATE,\n  weight DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO billing_info (bill_id, customer_id, billing_date, amount) VALUES (3, 3, '2022-02-01', 200.00)",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  address VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE billing_info (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  billing_date DATE,\n  amount DECIMAL\n)\n\nCREATE TABLE waste_collection (\n  collection_id INT PRIMARY KEY,\n  customer_id INT,\n  collection_date DATE,\n  weight DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO billing_info (bill_id, customer_id, billing_date, amount) VALUES (4, 4, '2022-02-15', 250.00)",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  address VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE billing_info (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  billing_date DATE,\n  amount DECIMAL\n)\n\nCREATE TABLE waste_collection (\n  collection_id INT PRIMARY KEY,\n  customer_id INT,\n  collection_date DATE,\n  weight DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO billing_info (bill_id, customer_id, billing_date, amount) VALUES (5, 5, '2022-03-01', 300.00)",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  address VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE billing_info (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  billing_date DATE,\n  amount DECIMAL\n)\n\nCREATE TABLE waste_collection (\n  collection_id INT PRIMARY KEY,\n  customer_id INT,\n  collection_date DATE,\n  weight DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO waste_collection (collection_id, customer_id, collection_date, weight) VALUES (1, 1, '2022-01-01', 10.5)",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  address VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE billing_info (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  billing_date DATE,\n  amount DECIMAL\n)\n\nCREATE TABLE waste_collection (\n  collection_id INT PRIMARY KEY,\n  customer_id INT,\n  collection_date DATE,\n  weight DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO waste_collection (collection_id, customer_id, collection_date, weight) VALUES (2, 2, '2022-01-15', 15.3)",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  address VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE billing_info (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  billing_date DATE,\n  amount DECIMAL\n)\n\nCREATE TABLE waste_collection (\n  collection_id INT PRIMARY KEY,\n  customer_id INT,\n  collection_date DATE,\n  weight DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO waste_collection (collection_id, customer_id, collection_date, weight) VALUES (3, 3, '2022-02-01', 20.1)",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  address VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE billing_info (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  billing_date DATE,\n  amount DECIMAL\n)\n\nCREATE TABLE waste_collection (\n  collection_id INT PRIMARY KEY,\n  customer_id INT,\n  collection_date DATE,\n  weight DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO waste_collection (collection_id, customer_id, collection_date, weight) VALUES (4, 4, '2022-02-15', 25.6)",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  address VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE billing_info (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  billing_date DATE,\n  amount DECIMAL\n)\n\nCREATE TABLE waste_collection (\n  collection_id INT PRIMARY KEY,\n  customer_id INT,\n  collection_date DATE,\n  weight DECIMAL\n)\n\n### STATEMENT\n\nUPSERT INTO waste_collection (collection_id, customer_id, collection_date, weight) VALUES (5, 5, '2022-03-01', 30.2)",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  address VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE billing_info (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  billing_date DATE,\n  amount DECIMAL\n)\n\nCREATE TABLE waste_collection (\n  collection_id INT PRIMARY KEY,\n  customer_id INT,\n  collection_date DATE,\n  weight DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, phone_number) VALUES (1, 'John Doe', '123 Main St', '555-1234') ON CONFLICT (customer_id) DO UPDATE SET customer_name = EXCLUDED.customer_name, address = EXCLUDED.address, phone_number = EXCLUDED.phone_number",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  address VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE billing_info (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  billing_date DATE,\n  amount DECIMAL\n)\n\nCREATE TABLE waste_collection (\n  collection_id INT PRIMARY KEY,\n  customer_id INT,\n  collection_date DATE,\n  weight DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, phone_number) VALUES (2, 'Jane Smith', '456 Elm St', '555-5678') ON CONFLICT (customer_id) DO UPDATE SET customer_name = EXCLUDED.customer_name, address = EXCLUDED.address, phone_number = EXCLUDED.phone_number",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  address VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE billing_info (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  billing_date DATE,\n  amount DECIMAL\n)\n\nCREATE TABLE waste_collection (\n  collection_id INT PRIMARY KEY,\n  customer_id INT,\n  collection_date DATE,\n  weight DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, address, phone_number) VALUES (3, 'Alex Johnson', '789 Oak St', '555-9012') ON CONFLICT (customer_id) DO UPDATE SET customer_name = EXCLUDED.customer_name, address = EXCLUDED.address, phone_number = EXCLUDED.phone_number",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  address VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE billing_info (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  billing_date DATE,\n  amount DECIMAL\n)\n\nCREATE TABLE waste_collection (\n  collection_id INT PRIMARY KEY,\n  customer_id INT,\n  collection_date DATE,\n  weight DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO billing_info (bill_id, customer_id, billing_date, amount) VALUES (101, 1, '2022-01-15', 100.00) ON CONFLICT (bill_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, billing_date = EXCLUDED.billing_date, amount = EXCLUDED.amount",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  address VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE billing_info (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  billing_date DATE,\n  amount DECIMAL\n)\n\nCREATE TABLE waste_collection (\n  collection_id INT PRIMARY KEY,\n  customer_id INT,\n  collection_date DATE,\n  weight DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO billing_info (bill_id, customer_id, billing_date, amount) VALUES (102, 2, '2022-01-20', 150.50) ON CONFLICT (bill_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, billing_date = EXCLUDED.billing_date, amount = EXCLUDED.amount",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  address VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE billing_info (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  billing_date DATE,\n  amount DECIMAL\n)\n\nCREATE TABLE waste_collection (\n  collection_id INT PRIMARY KEY,\n  customer_id INT,\n  collection_date DATE,\n  weight DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO billing_info (bill_id, customer_id, billing_date, amount) VALUES (103, 3, '2022-01-25', 75.75) ON CONFLICT (bill_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, billing_date = EXCLUDED.billing_date, amount = EXCLUDED.amount",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  address VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE billing_info (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  billing_date DATE,\n  amount DECIMAL\n)\n\nCREATE TABLE waste_collection (\n  collection_id INT PRIMARY KEY,\n  customer_id INT,\n  collection_date DATE,\n  weight DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO waste_collection (collection_id, customer_id, collection_date, weight) VALUES (201, 1, '2022-01-10', 500.00) ON CONFLICT (collection_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, collection_date = EXCLUDED.collection_date, weight = EXCLUDED.weight",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  address VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE billing_info (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  billing_date DATE,\n  amount DECIMAL\n)\n\nCREATE TABLE waste_collection (\n  collection_id INT PRIMARY KEY,\n  customer_id INT,\n  collection_date DATE,\n  weight DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO waste_collection (collection_id, customer_id, collection_date, weight) VALUES (202, 2, '2022-01-15', 750.25) ON CONFLICT (collection_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, collection_date = EXCLUDED.collection_date, weight = EXCLUDED.weight",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR,\n  address VARCHAR,\n  phone_number VARCHAR\n)\n\nCREATE TABLE billing_info (\n  bill_id INT PRIMARY KEY,\n  customer_id INT,\n  billing_date DATE,\n  amount DECIMAL\n)\n\nCREATE TABLE waste_collection (\n  collection_id INT PRIMARY KEY,\n  customer_id INT,\n  collection_date DATE,\n  weight DECIMAL\n)\n\n### STATEMENT\n\nINSERT INTO waste_collection (collection_id, customer_id, collection_date, weight) VALUES (203, 3, '2022-01-20', 400.75) ON CONFLICT (collection_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, collection_date = EXCLUDED.collection_date, weight = EXCLUDED.weight",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  customer_email VARCHAR(100),\n  customer_address TEXT\n)\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(50),\n  account_balance DECIMAL(10, 2)\n)\n\nCREATE TABLE bills (\n  bill_id INT PRIMARY KEY,\n  account_id INT,\n  bill_amount DECIMAL(10, 2),\n  due_date DATE\n)\n\nCREATE TABLE services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_description TEXT,\n  service_cost DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (1, 'John Doe', 'johndoe@example.com', '123 Main St'), (2, 'Jane Smith', 'janesmith@example.com', '456 Oak Ave')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  customer_email VARCHAR(100),\n  customer_address TEXT\n)\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(50),\n  account_balance DECIMAL(10, 2)\n)\n\nCREATE TABLE bills (\n  bill_id INT PRIMARY KEY,\n  account_id INT,\n  bill_amount DECIMAL(10, 2),\n  due_date DATE\n)\n\nCREATE TABLE services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_description TEXT,\n  service_cost DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nUPSERT INTO accounts (account_id, customer_id, account_type, account_balance) VALUES (1, 1, 'Savings', 1000.00), (2, 2, 'Checking', 500.00)",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  customer_email VARCHAR(100),\n  customer_address TEXT\n)\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(50),\n  account_balance DECIMAL(10, 2)\n)\n\nCREATE TABLE bills (\n  bill_id INT PRIMARY KEY,\n  account_id INT,\n  bill_amount DECIMAL(10, 2),\n  due_date DATE\n)\n\nCREATE TABLE services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_description TEXT,\n  service_cost DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nUPSERT INTO bills (bill_id, account_id, bill_amount, due_date) VALUES (1, 1, 50.00, '2023-05-15'), (2, 2, 100.00, '2023-05-31')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  customer_email VARCHAR(100),\n  customer_address TEXT\n)\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(50),\n  account_balance DECIMAL(10, 2)\n)\n\nCREATE TABLE bills (\n  bill_id INT PRIMARY KEY,\n  account_id INT,\n  bill_amount DECIMAL(10, 2),\n  due_date DATE\n)\n\nCREATE TABLE services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_description TEXT,\n  service_cost DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nUPSERT INTO services (service_id, service_name, service_description, service_cost) VALUES (1, 'Internet', 'High-speed internet service', 50.00), (2, 'Phone', 'Voice calling service', 30.00)",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  customer_email VARCHAR(100),\n  customer_address TEXT\n)\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(50),\n  account_balance DECIMAL(10, 2)\n)\n\nCREATE TABLE bills (\n  bill_id INT PRIMARY KEY,\n  account_id INT,\n  bill_amount DECIMAL(10, 2),\n  due_date DATE\n)\n\nCREATE TABLE services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_description TEXT,\n  service_cost DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (1, 'John Doe', 'john.doe@example.com', '123 Main St');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  customer_email VARCHAR(100),\n  customer_address TEXT\n)\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(50),\n  account_balance DECIMAL(10, 2)\n)\n\nCREATE TABLE bills (\n  bill_id INT PRIMARY KEY,\n  account_id INT,\n  bill_amount DECIMAL(10, 2),\n  due_date DATE\n)\n\nCREATE TABLE services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_description TEXT,\n  service_cost DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (2, 'Jane Smith', 'jane.smith@example.com', '456 Elm St');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  customer_email VARCHAR(100),\n  customer_address TEXT\n)\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(50),\n  account_balance DECIMAL(10, 2)\n)\n\nCREATE TABLE bills (\n  bill_id INT PRIMARY KEY,\n  account_id INT,\n  bill_amount DECIMAL(10, 2),\n  due_date DATE\n)\n\nCREATE TABLE services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_description TEXT,\n  service_cost DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nINSERT INTO accounts (account_id, customer_id, account_type, account_balance) VALUES (1, 1, 'Savings', 1000.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  customer_email VARCHAR(100),\n  customer_address TEXT\n)\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(50),\n  account_balance DECIMAL(10, 2)\n)\n\nCREATE TABLE bills (\n  bill_id INT PRIMARY KEY,\n  account_id INT,\n  bill_amount DECIMAL(10, 2),\n  due_date DATE\n)\n\nCREATE TABLE services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_description TEXT,\n  service_cost DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nINSERT INTO accounts (account_id, customer_id, account_type, account_balance) VALUES (2, 2, 'Checking', 2500.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  customer_email VARCHAR(100),\n  customer_address TEXT\n)\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(50),\n  account_balance DECIMAL(10, 2)\n)\n\nCREATE TABLE bills (\n  bill_id INT PRIMARY KEY,\n  account_id INT,\n  bill_amount DECIMAL(10, 2),\n  due_date DATE\n)\n\nCREATE TABLE services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_description TEXT,\n  service_cost DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nINSERT INTO bills (bill_id, account_id, bill_amount, due_date) VALUES (1, 1, 500.00, '2022-06-15');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  customer_email VARCHAR(100),\n  customer_address TEXT\n)\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(50),\n  account_balance DECIMAL(10, 2)\n)\n\nCREATE TABLE bills (\n  bill_id INT PRIMARY KEY,\n  account_id INT,\n  bill_amount DECIMAL(10, 2),\n  due_date DATE\n)\n\nCREATE TABLE services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_description TEXT,\n  service_cost DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nINSERT INTO bills (bill_id, account_id, bill_amount, due_date) VALUES (2, 2, 100.00, '2022-06-20');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  customer_email VARCHAR(100),\n  customer_address TEXT\n)\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(50),\n  account_balance DECIMAL(10, 2)\n)\n\nCREATE TABLE bills (\n  bill_id INT PRIMARY KEY,\n  account_id INT,\n  bill_amount DECIMAL(10, 2),\n  due_date DATE\n)\n\nCREATE TABLE services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_description TEXT,\n  service_cost DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nINSERT INTO services (service_id, service_name, service_description, service_cost) VALUES (1, 'Internet', 'High-speed internet service', 50.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  customer_email VARCHAR(100),\n  customer_address TEXT\n)\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(50),\n  account_balance DECIMAL(10, 2)\n)\n\nCREATE TABLE bills (\n  bill_id INT PRIMARY KEY,\n  account_id INT,\n  bill_amount DECIMAL(10, 2),\n  due_date DATE\n)\n\nCREATE TABLE services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_description TEXT,\n  service_cost DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nINSERT INTO services (service_id, service_name, service_description, service_cost) VALUES (2, 'Electricity', 'Monthly electricity service', 75.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  customer_email VARCHAR(100),\n  customer_address TEXT\n)\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(50),\n  account_balance DECIMAL(10, 2)\n)\n\nCREATE TABLE bills (\n  bill_id INT PRIMARY KEY,\n  account_id INT,\n  bill_amount DECIMAL(10, 2),\n  due_date DATE\n)\n\nCREATE TABLE services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_description TEXT,\n  service_cost DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com', '789 Oak St');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  customer_email VARCHAR(100),\n  customer_address TEXT\n)\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(50),\n  account_balance DECIMAL(10, 2)\n)\n\nCREATE TABLE bills (\n  bill_id INT PRIMARY KEY,\n  account_id INT,\n  bill_amount DECIMAL(10, 2),\n  due_date DATE\n)\n\nCREATE TABLE services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_description TEXT,\n  service_cost DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (4, 'Bob Williams', 'bob.williams@example.com', '101 Pine St');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  customer_email VARCHAR(100),\n  customer_address TEXT\n)\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(50),\n  account_balance DECIMAL(10, 2)\n)\n\nCREATE TABLE bills (\n  bill_id INT PRIMARY KEY,\n  account_id INT,\n  bill_amount DECIMAL(10, 2),\n  due_date DATE\n)\n\nCREATE TABLE services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_description TEXT,\n  service_cost DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nINSERT INTO accounts (account_id, customer_id, account_type, account_balance) VALUES (3, 3, 'Investment', 50000.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  customer_email VARCHAR(100),\n  customer_address TEXT\n)\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(50),\n  account_balance DECIMAL(10, 2)\n)\n\nCREATE TABLE bills (\n  bill_id INT PRIMARY KEY,\n  account_id INT,\n  bill_amount DECIMAL(10, 2),\n  due_date DATE\n)\n\nCREATE TABLE services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_description TEXT,\n  service_cost DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nINSERT INTO accounts (account_id, customer_id, account_type, account_balance) VALUES (4, 4, 'Savings', 1500.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  customer_email VARCHAR(100),\n  customer_address TEXT\n)\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(50),\n  account_balance DECIMAL(10, 2)\n)\n\nCREATE TABLE bills (\n  bill_id INT PRIMARY KEY,\n  account_id INT,\n  bill_amount DECIMAL(10, 2),\n  due_date DATE\n)\n\nCREATE TABLE services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_description TEXT,\n  service_cost DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nINSERT INTO bills (bill_id, account_id, bill_amount, due_date) VALUES (3, 3, 1000.00, '2022-06-25');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  customer_email VARCHAR(100),\n  customer_address TEXT\n)\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(50),\n  account_balance DECIMAL(10, 2)\n)\n\nCREATE TABLE bills (\n  bill_id INT PRIMARY KEY,\n  account_id INT,\n  bill_amount DECIMAL(10, 2),\n  due_date DATE\n)\n\nCREATE TABLE services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_description TEXT,\n  service_cost DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nINSERT INTO bills (bill_id, account_id, bill_amount, due_date) VALUES (4, 4, 200.00, '2022-06-30');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  customer_email VARCHAR(100),\n  customer_address TEXT\n)\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(50),\n  account_balance DECIMAL(10, 2)\n)\n\nCREATE TABLE bills (\n  bill_id INT PRIMARY KEY,\n  account_id INT,\n  bill_amount DECIMAL(10, 2),\n  due_date DATE\n)\n\nCREATE TABLE services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_description TEXT,\n  service_cost DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nINSERT INTO services (service_id, service_name, service_description, service_cost) VALUES (3, 'Phone', 'Monthly phone service', 30.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  customer_email VARCHAR(100),\n  customer_address TEXT\n)\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(50),\n  account_balance DECIMAL(10, 2)\n)\n\nCREATE TABLE bills (\n  bill_id INT PRIMARY KEY,\n  account_id INT,\n  bill_amount DECIMAL(10, 2),\n  due_date DATE\n)\n\nCREATE TABLE services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_description TEXT,\n  service_cost DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nINSERT INTO services (service_id, service_name, service_description, service_cost) VALUES (4, 'Cable TV', 'Cable television service', 70.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  customer_email VARCHAR(100),\n  customer_address TEXT\n)\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(50),\n  account_balance DECIMAL(10, 2)\n)\n\nCREATE TABLE bills (\n  bill_id INT PRIMARY KEY,\n  account_id INT,\n  bill_amount DECIMAL(10, 2),\n  due_date DATE\n)\n\nCREATE TABLE services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_description TEXT,\n  service_cost DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (5, 'Emily Davis', 'emily.davis@example.com', '222 Beach Rd');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  customer_email VARCHAR(100),\n  customer_address TEXT\n)\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(50),\n  account_balance DECIMAL(10, 2)\n)\n\nCREATE TABLE bills (\n  bill_id INT PRIMARY KEY,\n  account_id INT,\n  bill_amount DECIMAL(10, 2),\n  due_date DATE\n)\n\nCREATE TABLE services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_description TEXT,\n  service_cost DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (6, 'Michael Brown', 'michael.brown@example.com', '333 Park Ave');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  customer_email VARCHAR(100),\n  customer_address TEXT\n)\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(50),\n  account_balance DECIMAL(10, 2)\n)\n\nCREATE TABLE bills (\n  bill_id INT PRIMARY KEY,\n  account_id INT,\n  bill_amount DECIMAL(10, 2),\n  due_date DATE\n)\n\nCREATE TABLE services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_description TEXT,\n  service_cost DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nINSERT INTO accounts (account_id, customer_id, account_type, account_balance) VALUES (5, 5, 'Checking', 3000.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  customer_email VARCHAR(100),\n  customer_address TEXT\n)\n\nCREATE TABLE accounts (\n  account_id INT PRIMARY KEY,\n  customer_id INT,\n  account_type VARCHAR(50),\n  account_balance DECIMAL(10, 2)\n)\n\nCREATE TABLE bills (\n  bill_id INT PRIMARY KEY,\n  account_id INT,\n  bill_amount DECIMAL(10, 2),\n  due_date DATE\n)\n\nCREATE TABLE services (\n  service_id INT PRIMARY KEY,\n  service_name VARCHAR(50),\n  service_description TEXT,\n  service_cost DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nINSERT INTO accounts (account_id, customer_id, account_type, account_balance) VALUES (6, 6, 'Investment', 75000.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    balance DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR,\n    cost DECIMAL\n);\n\n\nCREATE TABLE billing (\n    billing_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    amount DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    billing_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    FOREIGN KEY (billing_id) REFERENCES billing(billing_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers(customer_id, name, email, address) VALUES (1, 'John Doe', 'john.doe@example.com', '123 Main St') ON DUPLICATE KEY UPDATE name='John Doe', email='john.doe@example.com', address='123 Main St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    balance DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR,\n    cost DECIMAL\n);\n\n\nCREATE TABLE billing (\n    billing_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    amount DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    billing_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    FOREIGN KEY (billing_id) REFERENCES billing(billing_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers(customer_id, name, email, address) VALUES (2, 'Jane Smith', 'jane.smith@example.com', '456 Elm St') ON DUPLICATE KEY UPDATE name='Jane Smith', email='jane.smith@example.com', address='456 Elm St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    balance DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR,\n    cost DECIMAL\n);\n\n\nCREATE TABLE billing (\n    billing_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    amount DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    billing_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    FOREIGN KEY (billing_id) REFERENCES billing(billing_id)\n);\n\n### STATEMENT\n\nUPSERT INTO accounts(account_id, customer_id, balance) VALUES (1, 1, 1000.00) ON DUPLICATE KEY UPDATE customer_id=1, balance=1000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    balance DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR,\n    cost DECIMAL\n);\n\n\nCREATE TABLE billing (\n    billing_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    amount DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    billing_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    FOREIGN KEY (billing_id) REFERENCES billing(billing_id)\n);\n\n### STATEMENT\n\nUPSERT INTO accounts(account_id, customer_id, balance) VALUES (2, 2, 500.00) ON DUPLICATE KEY UPDATE customer_id=2, balance=500.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    balance DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR,\n    cost DECIMAL\n);\n\n\nCREATE TABLE billing (\n    billing_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    amount DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    billing_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    FOREIGN KEY (billing_id) REFERENCES billing(billing_id)\n);\n\n### STATEMENT\n\nUPSERT INTO services(service_id, service_name, cost) VALUES (1, 'Hosting', 50.00) ON DUPLICATE KEY UPDATE service_name='Hosting', cost=50.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    balance DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR,\n    cost DECIMAL\n);\n\n\nCREATE TABLE billing (\n    billing_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    amount DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    billing_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    FOREIGN KEY (billing_id) REFERENCES billing(billing_id)\n);\n\n### STATEMENT\n\nUPSERT INTO services(service_id, service_name, cost) VALUES (2, 'Maintenance', 100.00) ON DUPLICATE KEY UPDATE service_name='Maintenance', cost=100.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    balance DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR,\n    cost DECIMAL\n);\n\n\nCREATE TABLE billing (\n    billing_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    amount DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    billing_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    FOREIGN KEY (billing_id) REFERENCES billing(billing_id)\n);\n\n### STATEMENT\n\nUPSERT INTO billing(billing_id, customer_id, service_id, amount) VALUES (1, 1, 1, 50.00) ON DUPLICATE KEY UPDATE customer_id=1, service_id=1, amount=50.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    balance DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR,\n    cost DECIMAL\n);\n\n\nCREATE TABLE billing (\n    billing_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    amount DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    billing_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    FOREIGN KEY (billing_id) REFERENCES billing(billing_id)\n);\n\n### STATEMENT\n\nUPSERT INTO billing(billing_id, customer_id, service_id, amount) VALUES (2, 2, 2, 100.00) ON DUPLICATE KEY UPDATE customer_id=2, service_id=2, amount=100.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    balance DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR,\n    cost DECIMAL\n);\n\n\nCREATE TABLE billing (\n    billing_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    amount DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    billing_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    FOREIGN KEY (billing_id) REFERENCES billing(billing_id)\n);\n\n### STATEMENT\n\nUPSERT INTO payments(payment_id, billing_id, amount, payment_date) VALUES (1, 1, 50.00, '2022-01-15') ON DUPLICATE KEY UPDATE billing_id=1, amount=50.00, payment_date='2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    balance DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR,\n    cost DECIMAL\n);\n\n\nCREATE TABLE billing (\n    billing_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    amount DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    billing_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    FOREIGN KEY (billing_id) REFERENCES billing(billing_id)\n);\n\n### STATEMENT\n\nUPSERT INTO payments(payment_id, billing_id, amount, payment_date) VALUES (2, 2, 100.00, '2022-01-20') ON DUPLICATE KEY UPDATE billing_id=2, amount=100.00, payment_date='2022-01-20';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    balance DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR,\n    cost DECIMAL\n);\n\n\nCREATE TABLE billing (\n    billing_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    amount DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    billing_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    FOREIGN KEY (billing_id) REFERENCES billing(billing_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, address) VALUES (1, 'John Doe', 'john.doe@example.com', '123 Main St');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    balance DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR,\n    cost DECIMAL\n);\n\n\nCREATE TABLE billing (\n    billing_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    amount DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    billing_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    FOREIGN KEY (billing_id) REFERENCES billing(billing_id)\n);\n\n### STATEMENT\n\nINSERT INTO accounts (account_id, customer_id, balance) VALUES (1, 1, 500.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    balance DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR,\n    cost DECIMAL\n);\n\n\nCREATE TABLE billing (\n    billing_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    amount DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    billing_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    FOREIGN KEY (billing_id) REFERENCES billing(billing_id)\n);\n\n### STATEMENT\n\nINSERT INTO services (service_id, service_name, cost) VALUES (1, 'Internet', 50.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    balance DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR,\n    cost DECIMAL\n);\n\n\nCREATE TABLE billing (\n    billing_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    amount DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    billing_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    FOREIGN KEY (billing_id) REFERENCES billing(billing_id)\n);\n\n### STATEMENT\n\nINSERT INTO billing (billing_id, customer_id, service_id, amount) VALUES (1, 1, 1, 50.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    balance DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR,\n    cost DECIMAL\n);\n\n\nCREATE TABLE billing (\n    billing_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    amount DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    billing_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    FOREIGN KEY (billing_id) REFERENCES billing(billing_id)\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, billing_id, amount, payment_date) VALUES (1, 1, 50.00, '2022-01-15');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    balance DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR,\n    cost DECIMAL\n);\n\n\nCREATE TABLE billing (\n    billing_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    amount DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    billing_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    FOREIGN KEY (billing_id) REFERENCES billing(billing_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, address) VALUES (2, 'Jane Smith', 'jane.smith@example.com', '456 Elm St');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    balance DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR,\n    cost DECIMAL\n);\n\n\nCREATE TABLE billing (\n    billing_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    amount DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    billing_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    FOREIGN KEY (billing_id) REFERENCES billing(billing_id)\n);\n\n### STATEMENT\n\nINSERT INTO accounts (account_id, customer_id, balance) VALUES (2, 2, 750.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    balance DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR,\n    cost DECIMAL\n);\n\n\nCREATE TABLE billing (\n    billing_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    amount DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    billing_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    FOREIGN KEY (billing_id) REFERENCES billing(billing_id)\n);\n\n### STATEMENT\n\nINSERT INTO services (service_id, service_name, cost) VALUES (2, 'Phone', 30.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    balance DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR,\n    cost DECIMAL\n);\n\n\nCREATE TABLE billing (\n    billing_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    amount DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    billing_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    FOREIGN KEY (billing_id) REFERENCES billing(billing_id)\n);\n\n### STATEMENT\n\nINSERT INTO billing (billing_id, customer_id, service_id, amount) VALUES (2, 2, 2, 30.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    balance DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR,\n    cost DECIMAL\n);\n\n\nCREATE TABLE billing (\n    billing_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    amount DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    billing_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    FOREIGN KEY (billing_id) REFERENCES billing(billing_id)\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, billing_id, amount, payment_date) VALUES (2, 2, 30.00, '2022-01-20');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    balance DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR,\n    cost DECIMAL\n);\n\n\nCREATE TABLE billing (\n    billing_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    amount DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    billing_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    FOREIGN KEY (billing_id) REFERENCES billing(billing_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, address) VALUES (3, 'David Brown', 'david.brown@example.com', '789 Oak St');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    balance DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR,\n    cost DECIMAL\n);\n\n\nCREATE TABLE billing (\n    billing_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    amount DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    billing_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    FOREIGN KEY (billing_id) REFERENCES billing(billing_id)\n);\n\n### STATEMENT\n\nINSERT INTO accounts (account_id, customer_id, balance) VALUES (3, 3, 1000.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    balance DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR,\n    cost DECIMAL\n);\n\n\nCREATE TABLE billing (\n    billing_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    amount DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    billing_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    FOREIGN KEY (billing_id) REFERENCES billing(billing_id)\n);\n\n### STATEMENT\n\nINSERT INTO services (service_id, service_name, cost) VALUES (3, 'TV', 70.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    balance DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR,\n    cost DECIMAL\n);\n\n\nCREATE TABLE billing (\n    billing_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    amount DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    billing_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    FOREIGN KEY (billing_id) REFERENCES billing(billing_id)\n);\n\n### STATEMENT\n\nINSERT INTO billing (billing_id, customer_id, service_id, amount) VALUES (3, 3, 3, 70.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    balance DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR,\n    cost DECIMAL\n);\n\n\nCREATE TABLE billing (\n    billing_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    amount DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    billing_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    FOREIGN KEY (billing_id) REFERENCES billing(billing_id)\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, billing_id, amount, payment_date) VALUES (3, 3, 70.00, '2022-01-25');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    balance DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR,\n    cost DECIMAL\n);\n\n\nCREATE TABLE billing (\n    billing_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    amount DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    billing_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    FOREIGN KEY (billing_id) REFERENCES billing(billing_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, address) VALUES (4, 'Emma White', 'emma.white@example.com', '246 Pine St');",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    balance DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR,\n    cost DECIMAL\n);\n\n\nCREATE TABLE billing (\n    billing_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    amount DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    billing_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    FOREIGN KEY (billing_id) REFERENCES billing(billing_id)\n);\n\n### STATEMENT\n\nINSERT INTO accounts (account_id, customer_id, balance) VALUES (4, 4, 600.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    balance DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR,\n    cost DECIMAL\n);\n\n\nCREATE TABLE billing (\n    billing_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    amount DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    billing_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    FOREIGN KEY (billing_id) REFERENCES billing(billing_id)\n);\n\n### STATEMENT\n\nINSERT INTO services (service_id, service_name, cost) VALUES (4, 'Electricity', 80.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    balance DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR,\n    cost DECIMAL\n);\n\n\nCREATE TABLE billing (\n    billing_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    amount DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    billing_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    FOREIGN KEY (billing_id) REFERENCES billing(billing_id)\n);\n\n### STATEMENT\n\nINSERT INTO billing (billing_id, customer_id, service_id, amount) VALUES (4, 4, 4, 80.00);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    balance DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR,\n    cost DECIMAL\n);\n\n\nCREATE TABLE billing (\n    billing_id INT PRIMARY KEY,\n    customer_id INT,\n    service_id INT,\n    amount DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (service_id) REFERENCES services(service_id)\n);\n\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    billing_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    FOREIGN KEY (billing_id) REFERENCES billing(billing_id)\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, billing_id, amount, payment_date) VALUES (4, 4, 80.00, '2022-01-30');"
]