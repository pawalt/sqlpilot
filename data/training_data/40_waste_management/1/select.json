[
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM waste_info;",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT waste_type, quantity FROM waste_info;",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT waste_type, quantity, location FROM waste_info;",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM waste_info WHERE waste_type = 'Plastic';",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM waste_info WHERE quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM waste_info WHERE location = 'Landfill';",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM waste_info;",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT MAX(quantity) FROM waste_info;",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT MIN(quantity) FROM waste_info;",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT AVG(quantity) FROM waste_info;",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT SUM(quantity) FROM waste_info;",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT waste_type, SUM(quantity) FROM waste_info GROUP BY waste_type;",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT location, COUNT(*) FROM waste_info GROUP BY location;",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM waste_info ORDER BY quantity DESC;",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM waste_info ORDER BY quantity ASC;",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM waste_info LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM waste_info LIMIT 5 OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM waste_info WHERE waste_type LIKE '%Paper%';",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM waste_info WHERE quantity BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM waste_info WHERE location IN ('Recycling Center', 'Landfill');",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM waste_info WHERE quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT waste_type, SUM(quantity) as total_quantity FROM waste_info GROUP BY waste_type;",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM waste_info WHERE waste_type LIKE '%paper%';",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT location, AVG(quantity) as avg_quantity FROM waste_info GROUP BY location HAVING AVG(quantity) > 50;",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT waste_type, MAX(quantity) as max_quantity FROM waste_info GROUP BY waste_type;",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT DISTINCT waste_type FROM waste_info;",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM waste_info ORDER BY quantity DESC;",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM waste_info WHERE quantity BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT waste_type, COUNT(*) as waste_count FROM waste_info GROUP BY waste_type HAVING COUNT(*) > 2;",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT waste_type, SUM(quantity) as total_quantity FROM waste_info WHERE location = 'Factory';",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT location, AVG(quantity) as avg_quantity FROM waste_info WHERE waste_type = 'Plastic' GROUP BY location;",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT waste_type, MIN(quantity) as min_quantity FROM waste_info WHERE location = 'Warehouse';",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM waste_info WHERE waste_type IN ('Paper', 'Glass', 'Metal');",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT DISTINCT location FROM waste_info WHERE quantity > 200;",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT waste_type, quantity, location FROM waste_info WHERE waste_type = 'Plastic' AND location = 'Recycling Center';",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM waste_info WHERE waste_type IN ('Paper', 'Plastic') AND quantity > 50;",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT location, COUNT(*) as waste_count FROM waste_info GROUP BY location ORDER BY waste_count DESC;",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM waste_info WHERE waste_type = 'Paper' OR (quantity < 50 AND location = 'Recycling Center');",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT AVG(quantity) as avg_quantity_overall FROM waste_info;",
  "### TABLEDATA\n\nCREATE TABLE waste_info (\n  waste_type VARCHAR(255),\n  quantity INT,\n  location VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT location, MAX(quantity) as max_quantity FROM waste_info GROUP BY location HAVING MAX(quantity) < 200;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT * FROM waste_types;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT waste_type_name FROM waste_types;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT waste_type_name, waste_type_description FROM waste_types;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT * FROM waste_info;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT location_id, quantity FROM waste_info;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT waste_type_id, location_id, collection_date FROM waste_info;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT waste_type_name, quantity, collection_date FROM waste_types INNER JOIN waste_info ON waste_types.waste_type_id = waste_info.waste_type_id;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT * FROM waste_info WHERE location_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT waste_type_name, quantity FROM waste_types INNER JOIN waste_info ON waste_types.waste_type_id = waste_info.waste_type_id WHERE location_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT * FROM waste_info WHERE collection_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT waste_type_name, waste_type_description FROM waste_types WHERE waste_type_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT * FROM waste_info WHERE waste_type_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT location_id, SUM(quantity) AS total_quantity FROM waste_info GROUP BY location_id;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT waste_type_name, AVG(quantity) AS avg_quantity FROM waste_types INNER JOIN waste_info ON waste_types.waste_type_id = waste_info.waste_type_id GROUP BY waste_types.waste_type_id;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT * FROM waste_types WHERE waste_type_name LIKE '%plastic%';",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT location_id, COUNT(*) AS total_records FROM waste_info GROUP BY location_id HAVING total_records > 10;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT waste_type_name, MAX(quantity) AS max_quantity FROM waste_types INNER JOIN waste_info ON waste_types.waste_type_id = waste_info.waste_type_id;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT waste_type_name, quantity FROM waste_types INNER JOIN waste_info ON waste_types.waste_type_id = waste_info.waste_type_id ORDER BY quantity DESC;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT AVG(quantity) AS avg_quantity FROM waste_info;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT * FROM waste_types WHERE waste_type_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT waste_type_name, waste_type_description FROM waste_types WHERE waste_type_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT * FROM waste_types WHERE waste_type_name LIKE '%Plastic%';",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, wi.quantity, wi.collection_date FROM waste_types wt JOIN waste_info wi ON wt.waste_type_id = wi.waste_type_id;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_id, wi.quantity, wi.collection_date FROM waste_types wt LEFT JOIN waste_info wi ON wt.waste_type_id = wi.waste_type_id;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT * FROM waste_info WHERE location_id = 3 ORDER BY collection_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT waste_type_name FROM waste_types;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT SUM(quantity) AS total_quantity, AVG(quantity) AS avg_quantity FROM waste_info;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, SUM(wi.quantity) AS total_quantity FROM waste_types wt JOIN waste_info wi ON wt.waste_type_id = wi.waste_type_id GROUP BY wt.waste_type_name;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, COUNT(wi.waste_info_id) AS num_records FROM waste_types wt JOIN waste_info wi ON wt.waste_type_id = wi.waste_type_id GROUP BY wt.waste_type_name;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, MAX(wi.quantity) AS max_quantity FROM waste_types wt JOIN waste_info wi ON wt.waste_type_id = wi.waste_type_id GROUP BY wt.waste_type_name;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT waste_type_name, location_id FROM waste_types CROSS JOIN waste_info;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT * FROM waste_info WHERE collection_date BETWEEN '2023-01-01' AND '2023-12-31';",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, wi.quantity FROM waste_types wt JOIN waste_info wi ON wt.waste_type_id = wi.waste_type_id WHERE wi.location_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, wi.quantity, l.location_name FROM waste_types wt JOIN waste_info wi ON wt.waste_type_id = wi.waste_type_id JOIN locations l ON wi.location_id = l.location_id;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, wi.quantity, l.location_name FROM waste_types wt JOIN waste_info wi ON wt.waste_type_id = wi.waste_type_id LEFT JOIN locations l ON wi.location_id = l.location_id;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, SUM(wi.quantity) AS total_quantity FROM waste_types wt JOIN waste_info wi ON wt.waste_type_id = wi.waste_type_id WHERE wi.collection_date >= '2023-06-01' GROUP BY wt.waste_type_name;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, AVG(wi.quantity) AS avg_quantity FROM waste_types wt JOIN waste_info wi ON wt.waste_type_id = wi.waste_type_id WHERE wi.collection_date < '2023-06-01' GROUP BY wt.waste_type_name;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, wi.quantity, wi.collection_date FROM waste_types wt JOIN waste_info wi ON wt.waste_type_id = wi.waste_type_id WHERE wi.quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255),\n  waste_type_description TEXT\n);\n\nCREATE TABLE waste_info (\n  waste_info_id INT PRIMARY KEY,\n  waste_type_id INT,\n  location_id INT,\n  quantity DECIMAL,\n  collection_date DATE,\n  FOREIGN KEY (waste_type_id) REFERENCES waste_types(waste_type_id),\n  FOREIGN KEY (location_id) REFERENCES locations(location_id)\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, wi.quantity, wi.collection_date FROM waste_types wt JOIN waste_info wi ON wt.waste_type_id = wi.waste_type_id WHERE wi.quantity < 50;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM WasteTypes;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT waste_type_name, waste_type_description FROM WasteTypes WHERE waste_type_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM WasteQuantities;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT quantity, measurement_unit FROM WasteQuantities WHERE quantity_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT waste_type_name, quantity, measurement_unit FROM WasteTypes JOIN WasteQuantities ON WasteTypes.waste_type_id = WasteQuantities.waste_type_id;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM WasteLocations;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT location_name, location_address FROM WasteLocations WHERE waste_type_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT WasteTypes.waste_type_name, WasteLocations.location_name FROM WasteTypes INNER JOIN WasteLocations ON WasteTypes.waste_type_id = WasteLocations.waste_type_id;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT quantity, report_date FROM WasteQuantities WHERE quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT waste_type_name, quantity, measurement_unit FROM WasteTypes LEFT JOIN WasteQuantities ON WasteTypes.waste_type_id = WasteQuantities.waste_type_id;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT location_name, location_address FROM WasteLocations WHERE location_name LIKE 'Central%';",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM WasteTypes ORDER BY waste_type_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT count(*) AS total_quantities FROM WasteQuantities;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT AVG(quantity) AS avg_quantity FROM WasteQuantities WHERE waste_type_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT sum(quantity) AS total_quantity FROM WasteQuantities WHERE measurement_unit = 'kg';",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT waste_type_id, count(*) AS total_locations FROM WasteLocations GROUP BY waste_type_id;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM WasteQuantities WHERE report_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT measurement_unit FROM WasteQuantities;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT location_name, COUNT(*) AS total_entries FROM WasteLocations GROUP BY location_name HAVING total_entries > 1;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT waste_type_name, SUM(quantity) AS total_quantity FROM WasteTypes JOIN WasteQuantities ON WasteTypes.waste_type_id = WasteQuantities.waste_type_id GROUP BY waste_type_name;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM WasteTypes;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT waste_type_name, waste_type_description FROM WasteTypes;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT wq.quantity, wq.measurement_unit, wl.location_name FROM WasteQuantities wq JOIN WasteLocations wl ON wq.waste_type_id = wl.waste_type_id;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, wl.location_name, wq.quantity FROM WasteTypes wt JOIN WasteQuantities wq ON wt.waste_type_id = wq.waste_type_id JOIN WasteLocations wl ON wq.waste_type_id = wl.waste_type_id ORDER BY wq.quantity DESC;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT wl.location_name, COUNT(wq.quantity) AS total_quantities FROM WasteQuantities wq JOIN WasteLocations wl ON wq.waste_type_id = wl.waste_type_id GROUP BY wl.location_name;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, AVG(wq.quantity) AS average_quantity FROM WasteTypes wt JOIN WasteQuantities wq ON wt.waste_type_id = wq.waste_type_id GROUP BY wt.waste_type_name;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, wq.quantity, wl.location_name FROM WasteTypes wt LEFT JOIN WasteQuantities wq ON wt.waste_type_id = wq.waste_type_id LEFT JOIN WasteLocations wl ON wq.waste_type_id = wl.waste_type_id;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, COUNT(wq.quantity) AS total_quantities FROM WasteTypes wt JOIN WasteQuantities wq ON wt.waste_type_id = wq.waste_type_id GROUP BY wt.waste_type_name HAVING COUNT(wq.quantity) > 5;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT wl.location_name, SUM(wq.quantity) AS total_quantity FROM WasteLocations wl LEFT JOIN WasteQuantities wq ON wl.waste_type_id = wq.waste_type_id GROUP BY wl.location_name HAVING SUM(wq.quantity) > 1000;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, COUNT(wq.quantity) AS total_quantities, SUM(wq.quantity) AS total_quantity FROM WasteTypes wt JOIN WasteQuantities wq ON wt.waste_type_id = wq.waste_type_id GROUP BY wt.waste_type_name;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, wq.quantity FROM WasteTypes wt JOIN WasteQuantities wq ON wt.waste_type_id = wq.waste_type_id WHERE wq.quantity > 500 ORDER BY wq.quantity DESC;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, wl.location_name, wq.quantity, wq.report_date FROM WasteTypes wt JOIN WasteQuantities wq ON wt.waste_type_id = wq.waste_type_id LEFT JOIN WasteLocations wl ON wq.waste_type_id = wl.waste_type_id WHERE wq.report_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT wl.location_name, MAX(wq.quantity) AS max_quantity FROM WasteLocations wl LEFT JOIN WasteQuantities wq ON wl.waste_type_id = wq.waste_type_id GROUP BY wl.location_name;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, wl.location_name, COUNT(wq.quantity) AS total_quantities FROM WasteTypes wt JOIN WasteQuantities wq ON wt.waste_type_id = wq.waste_type_id JOIN WasteLocations wl ON wq.waste_type_id = wl.waste_type_id GROUP BY wt.waste_type_name, wl.location_name HAVING COUNT(wq.quantity) > 1;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, wl.location_name, wq.quantity, wq.report_date FROM WasteTypes wt JOIN WasteQuantities wq ON wt.waste_type_id = wq.waste_type_id JOIN WasteLocations wl ON wq.waste_type_id = wl.waste_type_id WHERE wl.location_address LIKE '%Street%';",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, AVG(wq.quantity) AS average_quantity FROM WasteTypes wt JOIN WasteQuantities wq ON wt.waste_type_id = wq.waste_type_id WHERE wq.report_date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY wt.waste_type_name;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, wl.location_name, wq.quantity FROM WasteTypes wt JOIN WasteQuantities wq ON wt.waste_type_id = wq.waste_type_id JOIN WasteLocations wl ON wq.waste_type_id = wl.waste_type_id WHERE wt.waste_type_name LIKE '%Plastic%' AND wl.location_name NOT LIKE '%Warehouse%';",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, SUM(wq.quantity) AS total_quantity FROM WasteTypes wt JOIN WasteQuantities wq ON wt.waste_type_id = wq.waste_type_id GROUP BY wt.waste_type_name HAVING SUM(wq.quantity) > 100;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_rows FROM WasteTypes UNION ALL SELECT COUNT(*) AS total_rows FROM WasteQuantities UNION ALL SELECT COUNT(*) AS total_rows FROM WasteLocations;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, wl.location_name, wq.quantity, wq.report_date FROM WasteTypes wt JOIN WasteQuantities wq ON wt.waste_type_id = wq.waste_type_id JOIN WasteLocations wl ON wq.waste_type_id = wl.waste_type_id WHERE wq.report_date = CURRENT_DATE;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n    waste_type_id INT PRIMARY KEY,\n    waste_type_name VARCHAR(255) NOT NULL,\n    waste_type_description TEXT\n);\n\n\nCREATE TABLE WasteQuantities (\n    quantity_id INT PRIMARY KEY,\n    waste_type_id INT,\n    quantity DECIMAL(10,2) NOT NULL,\n    measurement_unit VARCHAR(50) NOT NULL,\n    report_date DATE\n);\n\n\nCREATE TABLE WasteLocations (\n    location_id INT PRIMARY KEY,\n    location_name VARCHAR(255) NOT NULL,\n    location_address VARCHAR(500) NOT NULL,\n    waste_type_id INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT wt.waste_type_name, wl.location_name FROM WasteTypes wt JOIN WasteQuantities wq ON wt.waste_type_id = wq.waste_type_id JOIN WasteLocations wl ON wq.waste_type_id = wl.waste_type_id;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM WasteTypes;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM Quantities;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM Locations;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM Reports;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT id, waste_type_name FROM WasteTypes;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT id, quantity, location_id FROM Quantities;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT id, location_name FROM Locations;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT id, report_date, quantity FROM Reports;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM WasteTypes WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT waste_type_name, description FROM WasteTypes WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM Quantities WHERE location_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT quantity_unit FROM Quantities WHERE waste_type_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM Locations WHERE id = 5;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT address FROM Locations WHERE location_name = 'Warehouse';",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM Reports WHERE report_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT waste_type_id, location_id FROM Reports WHERE quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM WasteTypes;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT MAX(quantity) FROM Quantities;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT MIN(quantity) FROM Quantities;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT AVG(quantity) FROM Quantities;",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM WasteTypes",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT waste_type_name, description FROM WasteTypes WHERE id = 1",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT Locations.location_name, Reports.report_date FROM Locations JOIN Reports ON Locations.id = Reports.location_id",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT WasteTypes.waste_type_name, Quantities.quantity, Quantities.quantity_unit, Locations.location_name FROM WasteTypes JOIN Quantities ON WasteTypes.id = Quantities.waste_type_id JOIN Locations ON Quantities.location_id = Locations.id",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT WasteTypes.waste_type_name, SUM(Quantities.quantity) AS total_quantity FROM WasteTypes JOIN Quantities ON WasteTypes.id = Quantities.waste_type_id GROUP BY WasteTypes.waste_type_name",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT Reports.report_date, WasteTypes.waste_type_name, Quantities.quantity, Locations.location_name FROM Reports JOIN WasteTypes ON Reports.waste_type_id = WasteTypes.id JOIN Quantities ON Reports.waste_type_id = Quantities.waste_type_id JOIN Locations ON Reports.location_id = Locations.id",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT Locations.location_name, SUM(Quantities.quantity) AS total_quantity FROM Locations JOIN Quantities ON Locations.id = Quantities.location_id GROUP BY Locations.location_name",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT WasteTypes.waste_type_name, Locations.location_name, AVG(Quantities.quantity) AS avg_quantity FROM WasteTypes JOIN Quantities ON WasteTypes.id = Quantities.waste_type_id JOIN Locations ON Quantities.location_id = Locations.id GROUP BY WasteTypes.waste_type_name, Locations.location_name",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT WasteTypes.waste_type_name, COUNT(Reports.id) AS num_reports FROM WasteTypes LEFT JOIN Reports ON WasteTypes.id = Reports.waste_type_id GROUP BY WasteTypes.waste_type_name",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT WasteTypes.waste_type_name, Locations.location_name, MAX(Quantities.quantity) AS max_quantity FROM WasteTypes JOIN Quantities ON WasteTypes.id = Quantities.waste_type_id JOIN Locations ON Quantities.location_id = Locations.id GROUP BY WasteTypes.waste_type_name, Locations.location_name",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT WasteTypes.waste_type_name, Locations.location_name, MIN(Quantities.quantity) AS min_quantity FROM WasteTypes JOIN Quantities ON WasteTypes.id = Quantities.waste_type_id JOIN Locations ON Quantities.location_id = Locations.id GROUP BY WasteTypes.waste_type_name, Locations.location_name",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT WasteTypes.waste_type_name, Locations.location_name, COUNT(Reports.id) AS num_reports FROM WasteTypes JOIN Quantities ON WasteTypes.id = Quantities.waste_type_id JOIN Locations ON Quantities.location_id = Locations.id LEFT JOIN Reports ON Reports.waste_type_id = WasteTypes.id AND Reports.location_id = Locations.id GROUP BY WasteTypes.waste_type_name, Locations.location_name",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT WasteTypes.waste_type_name, Locations.location_name FROM WasteTypes CROSS JOIN Locations",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT WasteTypes.waste_type_name, Locations.location_name FROM WasteTypes JOIN Locations ON WasteTypes.id = 1 OR WasteTypes.id = 2 OR Locations.id = 1 OR Locations.id = 2",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM WasteTypes WHERE waste_type_name LIKE '%Plastic%'",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM Quantities WHERE quantity > 100",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM Reports WHERE report_date BETWEEN '2020-01-01' AND '2020-12-31'",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT WasteTypes.waste_type_name, COUNT(*) AS num_reports FROM WasteTypes JOIN Reports ON WasteTypes.id = Reports.waste_type_id GROUP BY WasteTypes.waste_type_name HAVING COUNT(*) > 5",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT Locations.location_name, AVG(quantity) AS avg_quantity FROM Quantities JOIN Locations ON Quantities.location_id = Locations.id GROUP BY Locations.location_name HAVING AVG(quantity) > 50",
  "### TABLEDATA\n\nCREATE TABLE WasteTypes (\n  id INT PRIMARY KEY,\n  waste_type_name VARCHAR(255) NOT NULL,\n  description TEXT\n)\n\nCREATE TABLE Quantities (\n  id INT PRIMARY KEY,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  quantity_unit VARCHAR(50),\n  location_id INT NOT NULL\n)\n\nCREATE TABLE Locations (\n  id INT PRIMARY KEY,\n  location_name VARCHAR(255) NOT NULL,\n  address TEXT\n)\n\nCREATE TABLE Reports (\n  id INT PRIMARY KEY,\n  report_date DATE NOT NULL,\n  waste_type_id INT NOT NULL,\n  quantity FLOAT NOT NULL,\n  location_id INT NOT NULL\n)\n\n### STATEMENT\n\nSELECT WasteTypes.waste_type_name, SUM(quantity) AS total_quantity FROM WasteTypes JOIN Quantities ON WasteTypes.id = Quantities.waste_type_id GROUP BY WasteTypes.waste_type_name HAVING SUM(quantity) > 1000",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM waste_types;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT waste_type_name FROM waste_types;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM waste_quantities;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT quantity FROM waste_quantities;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM waste_locations;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT location_name FROM waste_locations;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM waste_reporting;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT report_date FROM waste_reporting;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM waste_analysis;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT analysis_result FROM waste_analysis;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM waste_types WHERE waste_type_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM waste_quantities WHERE quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM waste_locations WHERE location_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM waste_reporting WHERE report_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM waste_types JOIN waste_quantities ON waste_types.waste_type_id = waste_quantities.waste_type_id;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM waste_quantities JOIN waste_analysis ON waste_quantities.location_id = waste_analysis.location_id;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM waste_locations JOIN waste_reporting ON waste_locations.location_id = waste_reporting.location_id;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM waste_types WHERE waste_type_id = (SELECT waste_type_id FROM waste_quantities WHERE quantity > 100);",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM waste_reporting WHERE report_date = (SELECT MAX(report_date) FROM waste_reporting);",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM waste_types WHERE waste_type_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, wq.quantity FROM waste_types wt JOIN waste_quantities wq ON wt.waste_type_id = wq.waste_type_id;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT wl.location_name, wr.report_date FROM waste_locations wl JOIN waste_reporting wr ON wl.location_id = wr.location_id;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT analysis_result FROM waste_analysis WHERE location_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT wr.report_date, wa.analysis_result FROM waste_reporting wr JOIN waste_analysis wa ON wr.location_id = wa.location_id;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, wq.quantity, wl.location_name FROM waste_types wt JOIN waste_quantities wq ON wt.waste_type_id = wq.waste_type_id JOIN waste_locations wl ON wq.location_id = wl.location_id;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM waste_reporting WHERE report_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, wa.analysis_date, wl.location_name FROM waste_types wt JOIN waste_analysis wa ON wt.waste_type_id = wa.location_id JOIN waste_locations wl ON wa.location_id = wl.location_id;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT SUM(quantity) AS total_quantity FROM waste_quantities WHERE waste_type_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_id, COUNT(*) AS total_reports FROM waste_types wt JOIN waste_quantities wq ON wt.waste_type_id = wq.waste_type_id JOIN waste_reporting wr ON wq.quantity_id = wr.quantity_id GROUP BY wt.waste_type_id;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM waste_reporting wr1 WHERE NOT EXISTS (SELECT 1 FROM waste_reporting wr2 WHERE wr1.report_date = wr2.report_date AND wr1.quantity_id <> wr2.quantity_id);",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, COUNT(*) AS total_analysis FROM waste_types wt JOIN waste_analysis wa ON wt.waste_type_id = wa.location_id GROUP BY wt.waste_type_name;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM waste_locations WHERE location_name LIKE '%Factory%';",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, SUM(wq.quantity) AS total_quantity FROM waste_types wt JOIN waste_quantities wq ON wt.waste_type_id = wq.waste_type_id GROUP BY wt.waste_type_name;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT wa.analysis_id, wa.analysis_date, wl.location_name FROM waste_analysis wa JOIN waste_locations wl ON wa.location_id = wl.location_id;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, AVG(wq.quantity) AS avg_quantity FROM waste_types wt JOIN waste_quantities wq ON wt.waste_type_id = wq.waste_type_id GROUP BY wt.waste_type_name;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT wr.report_id, wr.report_date, wl.location_name FROM waste_reporting wr JOIN waste_locations wl ON wr.location_id = wl.location_id;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM waste_locations WHERE location_id NOT IN (SELECT location_id FROM waste_analysis);",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT wt.waste_type_name, MAX(wq.quantity) AS max_quantity FROM waste_types wt JOIN waste_quantities wq ON wt.waste_type_id = wq.waste_type_id GROUP BY wt.waste_type_name;",
  "### TABLEDATA\n\nCREATE TABLE waste_types (\n  waste_type_id INT PRIMARY KEY,\n  waste_type_name TEXT\n);\n\nCREATE TABLE waste_quantities (\n  quantity_id INT PRIMARY KEY,\n  quantity DECIMAL,\n  waste_type_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_locations (\n  location_id INT PRIMARY KEY,\n  location_name TEXT\n);\n\nCREATE TABLE waste_reporting (\n  report_id INT PRIMARY KEY,\n  report_date DATE,\n  quantity_id INT,\n  location_id INT\n);\n\nCREATE TABLE waste_analysis (\n  analysis_id INT PRIMARY KEY,\n  analysis_date DATE,\n  analysis_result TEXT,\n  location_id INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT(wt.waste_type_name) FROM waste_types wt JOIN waste_quantities wq ON wt.waste_type_id = wq.waste_type_id;"
]