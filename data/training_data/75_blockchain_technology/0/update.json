[
  "### TABLEDATA\n\nCREATE TABLE user_authentication (\n  user_id INT,\n  username VARCHAR(50),\n  password_hash VARCHAR(100),\n  public_key VARCHAR(200)\n);\n\n### STATEMENT\n\nUPDATE user_authentication SET password_hash = 'new_password_hash' WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE user_authentication (\n  user_id INT,\n  username VARCHAR(50),\n  password_hash VARCHAR(100),\n  public_key VARCHAR(200)\n);\n\n### STATEMENT\n\nUPDATE user_authentication SET public_key = 'new_public_key' WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE user_authentication (\n  user_id INT,\n  username VARCHAR(50),\n  password_hash VARCHAR(100),\n  public_key VARCHAR(200)\n);\n\n### STATEMENT\n\nUPDATE user_authentication SET username = 'jane_doe', password_hash = 'another_password_hash' WHERE user_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE user_authentication (\n  user_id INT,\n  username VARCHAR(50),\n  password_hash VARCHAR(100),\n  public_key VARCHAR(200)\n);\n\n### STATEMENT\n\nUPDATE user_authentication SET password_hash = 'new_password' WHERE username = 'alice'",
  "### TABLEDATA\n\nCREATE TABLE user_authentication (\n  user_id INT,\n  username VARCHAR(50),\n  password_hash VARCHAR(100),\n  public_key VARCHAR(200)\n);\n\n### STATEMENT\n\nUPDATE user_authentication SET public_key = 'new_public_key' WHERE user_id = 123",
  "### TABLEDATA\n\nCREATE TABLE user_authentication (\n  user_id INT,\n  username VARCHAR(50),\n  password_hash VARCHAR(100),\n  public_key VARCHAR(200)\n);\n\n### STATEMENT\n\nUPDATE user_authentication SET password_hash = 'secure_password', public_key = 'new_public_key' WHERE username = 'bob'",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE wallets (\n    wallet_id SERIAL PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    wallet_name VARCHAR(50) NOT NULL,\n    balance DECIMAL(18, 2) DEFAULT 0.00\n);\n\n### STATEMENT\n\nUPDATE users SET email='newemail@example.com' WHERE user_id=1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE wallets (\n    wallet_id SERIAL PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    wallet_name VARCHAR(50) NOT NULL,\n    balance DECIMAL(18, 2) DEFAULT 0.00\n);\n\n### STATEMENT\n\nUPDATE wallets SET balance=100.50 WHERE wallet_id=2;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE wallets (\n    wallet_id SERIAL PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    wallet_name VARCHAR(50) NOT NULL,\n    balance DECIMAL(18, 2) DEFAULT 0.00\n);\n\n### STATEMENT\n\nUPDATE users SET password_hash='newpasswordhash' WHERE username='john_doe';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE wallets (\n    wallet_id SERIAL PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    wallet_name VARCHAR(50) NOT NULL,\n    balance DECIMAL(18, 2) DEFAULT 0.00\n);\n\n### STATEMENT\n\nUPDATE users SET password_hash = 'new_password' WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE wallets (\n    wallet_id SERIAL PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    wallet_name VARCHAR(50) NOT NULL,\n    balance DECIMAL(18, 2) DEFAULT 0.00\n);\n\n### STATEMENT\n\nUPDATE wallets SET balance = balance + 100.00 WHERE wallet_name = 'Savings';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password_hash TEXT NOT NULL\n);\n\nCREATE TABLE wallets (\n    wallet_id SERIAL PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    wallet_name VARCHAR(50) NOT NULL,\n    balance DECIMAL(18, 2) DEFAULT 0.00\n);\n\n### STATEMENT\n\nUPDATE wallets SET balance = balance - 50.00 WHERE user_id = 1 AND wallet_name = 'Checking';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password TEXT NOT NULL\n);\n\n\nCREATE TABLE wallets (\n    wallet_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    wallet_address TEXT UNIQUE NOT NULL\n);\n\n\nCREATE TABLE sessions (\n    session_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    token TEXT NOT NULL,\n    expiration_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE users SET password = 'newpassword' WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password TEXT NOT NULL\n);\n\n\nCREATE TABLE wallets (\n    wallet_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    wallet_address TEXT UNIQUE NOT NULL\n);\n\n\nCREATE TABLE sessions (\n    session_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    token TEXT NOT NULL,\n    expiration_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE wallets SET wallet_address = 'new_wallet_address' WHERE user_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password TEXT NOT NULL\n);\n\n\nCREATE TABLE wallets (\n    wallet_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    wallet_address TEXT UNIQUE NOT NULL\n);\n\n\nCREATE TABLE sessions (\n    session_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    token TEXT NOT NULL,\n    expiration_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE sessions SET token = 'new_token', expiration_time = '2022-12-31 23:59:59' WHERE user_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password TEXT NOT NULL\n);\n\n\nCREATE TABLE wallets (\n    wallet_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    wallet_address TEXT UNIQUE NOT NULL\n);\n\n\nCREATE TABLE sessions (\n    session_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    token TEXT NOT NULL,\n    expiration_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE users SET username='john_doe', password='newpassword' WHERE user_id='01ab23cd-45ef-6789-ij0k-lmno12pq34rs';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password TEXT NOT NULL\n);\n\n\nCREATE TABLE wallets (\n    wallet_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    wallet_address TEXT UNIQUE NOT NULL\n);\n\n\nCREATE TABLE sessions (\n    session_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    token TEXT NOT NULL,\n    expiration_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE wallets SET wallet_address='new_address' WHERE wallet_id='01ab23cd-45ef-6789-ij0k-lmno12pq34rs';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username TEXT UNIQUE NOT NULL,\n    password TEXT NOT NULL\n);\n\n\nCREATE TABLE wallets (\n    wallet_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    wallet_address TEXT UNIQUE NOT NULL\n);\n\n\nCREATE TABLE sessions (\n    session_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES users(user_id),\n    token TEXT NOT NULL,\n    expiration_time TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE sessions SET token='new_token', expiration_time='2022-12-31 23:59:59' WHERE session_id='01ab23cd-45ef-6789-ij0k-lmno12pq34rs';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    password_hash VARCHAR(255) NOT NULL,\n    wallet_address VARCHAR(255) UNIQUE\n);\n\n\nCREATE TABLE wallets (\n    wallet_id INT PRIMARY KEY,\n    wallet_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE,\n    balance DECIMAL(18,8) DEFAULT 0.0\n);\n\n\nCREATE TABLE transactions (\n    tx_id INT PRIMARY KEY,\n    wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE,\n    amount DECIMAL(18,8) NOT NULL,\n    tx_type VARCHAR(20) NOT NULL,\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE,\n    session_token VARCHAR(255) UNIQUE \n);\n\n### STATEMENT\n\nUPDATE users SET user_name = 'John Doe' WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    password_hash VARCHAR(255) NOT NULL,\n    wallet_address VARCHAR(255) UNIQUE\n);\n\n\nCREATE TABLE wallets (\n    wallet_id INT PRIMARY KEY,\n    wallet_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE,\n    balance DECIMAL(18,8) DEFAULT 0.0\n);\n\n\nCREATE TABLE transactions (\n    tx_id INT PRIMARY KEY,\n    wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE,\n    amount DECIMAL(18,8) NOT NULL,\n    tx_type VARCHAR(20) NOT NULL,\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE,\n    session_token VARCHAR(255) UNIQUE \n);\n\n### STATEMENT\n\nUPDATE wallets SET balance = 100.00 WHERE wallet_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    password_hash VARCHAR(255) NOT NULL,\n    wallet_address VARCHAR(255) UNIQUE\n);\n\n\nCREATE TABLE wallets (\n    wallet_id INT PRIMARY KEY,\n    wallet_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE,\n    balance DECIMAL(18,8) DEFAULT 0.0\n);\n\n\nCREATE TABLE transactions (\n    tx_id INT PRIMARY KEY,\n    wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE,\n    amount DECIMAL(18,8) NOT NULL,\n    tx_type VARCHAR(20) NOT NULL,\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE,\n    session_token VARCHAR(255) UNIQUE \n);\n\n### STATEMENT\n\nUPDATE transactions SET amount = 50.00, tx_type = 'Deposit' WHERE tx_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    password_hash VARCHAR(255) NOT NULL,\n    wallet_address VARCHAR(255) UNIQUE\n);\n\n\nCREATE TABLE wallets (\n    wallet_id INT PRIMARY KEY,\n    wallet_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE,\n    balance DECIMAL(18,8) DEFAULT 0.0\n);\n\n\nCREATE TABLE transactions (\n    tx_id INT PRIMARY KEY,\n    wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE,\n    amount DECIMAL(18,8) NOT NULL,\n    tx_type VARCHAR(20) NOT NULL,\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE,\n    session_token VARCHAR(255) UNIQUE \n);\n\n### STATEMENT\n\nUPDATE users SET password_hash = 'new_password' WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    password_hash VARCHAR(255) NOT NULL,\n    wallet_address VARCHAR(255) UNIQUE\n);\n\n\nCREATE TABLE wallets (\n    wallet_id INT PRIMARY KEY,\n    wallet_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE,\n    balance DECIMAL(18,8) DEFAULT 0.0\n);\n\n\nCREATE TABLE transactions (\n    tx_id INT PRIMARY KEY,\n    wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE,\n    amount DECIMAL(18,8) NOT NULL,\n    tx_type VARCHAR(20) NOT NULL,\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE,\n    session_token VARCHAR(255) UNIQUE \n);\n\n### STATEMENT\n\nUPDATE wallets SET balance = balance + 100.00 WHERE wallet_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    password_hash VARCHAR(255) NOT NULL,\n    wallet_address VARCHAR(255) UNIQUE\n);\n\n\nCREATE TABLE wallets (\n    wallet_id INT PRIMARY KEY,\n    wallet_name VARCHAR(100) NOT NULL,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE,\n    balance DECIMAL(18,8) DEFAULT 0.0\n);\n\n\nCREATE TABLE transactions (\n    tx_id INT PRIMARY KEY,\n    wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE,\n    amount DECIMAL(18,8) NOT NULL,\n    tx_type VARCHAR(20) NOT NULL,\n    timestamp TIMESTAMP\n);\n\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id) ON DELETE CASCADE,\n    session_token VARCHAR(255) UNIQUE \n);\n\n### STATEMENT\n\nUPDATE transactions SET amount = amount * 1.05, tx_type = 'interest' WHERE tx_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE wallets (\n    wallet_id SERIAL PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    address VARCHAR(100) NOT NULL,\n    balance DECIMAL(18, 5) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    wallet_id INT REFERENCES wallets(wallet_id),\n    amount DECIMAL(18, 5) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE access_logs (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    action VARCHAR(50) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE sessions (\n    session_id SERIAL PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    token VARCHAR(100) NOT NULL,\n    expiry_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE users\nSET email = 'new_email@example.com'\nWHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE wallets (\n    wallet_id SERIAL PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    address VARCHAR(100) NOT NULL,\n    balance DECIMAL(18, 5) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    wallet_id INT REFERENCES wallets(wallet_id),\n    amount DECIMAL(18, 5) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE access_logs (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    action VARCHAR(50) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE sessions (\n    session_id SERIAL PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    token VARCHAR(100) NOT NULL,\n    expiry_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE wallets\nSET balance = balance + 100.50\nWHERE wallet_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE wallets (\n    wallet_id SERIAL PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    address VARCHAR(100) NOT NULL,\n    balance DECIMAL(18, 5) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    wallet_id INT REFERENCES wallets(wallet_id),\n    amount DECIMAL(18, 5) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE access_logs (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    action VARCHAR(50) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE sessions (\n    session_id SERIAL PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    token VARCHAR(100) NOT NULL,\n    expiry_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE access_logs\nSET action = 'login'\nWHERE user_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE wallets (\n    wallet_id SERIAL PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    address VARCHAR(100) NOT NULL,\n    balance DECIMAL(18, 5) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    wallet_id INT REFERENCES wallets(wallet_id),\n    amount DECIMAL(18, 5) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE access_logs (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    action VARCHAR(50) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE sessions (\n    session_id SERIAL PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    token VARCHAR(100) NOT NULL,\n    expiry_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE users SET password = 'newpassword' WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE wallets (\n    wallet_id SERIAL PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    address VARCHAR(100) NOT NULL,\n    balance DECIMAL(18, 5) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    wallet_id INT REFERENCES wallets(wallet_id),\n    amount DECIMAL(18, 5) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE access_logs (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    action VARCHAR(50) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE sessions (\n    session_id SERIAL PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    token VARCHAR(100) NOT NULL,\n    expiry_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE wallets SET balance = balance + 100.00 WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE wallets (\n    wallet_id SERIAL PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    address VARCHAR(100) NOT NULL,\n    balance DECIMAL(18, 5) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    wallet_id INT REFERENCES wallets(wallet_id),\n    amount DECIMAL(18, 5) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE access_logs (\n    log_id SERIAL PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    action VARCHAR(50) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE sessions (\n    session_id SERIAL PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    token VARCHAR(100) NOT NULL,\n    expiry_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE transactions SET amount = amount + 50.00 WHERE wallet_id = 1;"
]