<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><stat>SHOW TABLES;</stat><divider><t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><stat>show tables;</stat><divider><t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><stat>SHOW COLUMNS FROM blockchain_transactions;</stat><divider><t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><stat>show columns from blockchain_transactions;</stat><divider><t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><stat>SHOW COLUMNS FROM blockchain_transactions;</stat><divider><t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><stat>show columns from blockchain_transactions;</stat><divider><t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><stat>SHOW COLUMNS FROM blockchain_transactions;</stat><divider><t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><stat>show columns from blockchain_transactions;</stat><divider><t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><stat>SHOW COLUMNS FROM blockchain_transactions;</stat><divider><t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><stat>show columns from blockchain_transactions;</stat><divider><t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><stat>SHOW COLUMNS FROM blockchain_transactions;</stat><divider><t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><stat>show columns from blockchain_transactions;</stat><divider><t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><stat>SHOW COLUMNS FROM blockchain_transactions;</stat><divider><t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><stat>show columns from blockchain_transactions;</stat><divider><t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><stat>SHOW INDEX FROM blockchain_blocks;</stat><divider><t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><stat>show index from blockchain_blocks;</stat><divider><t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><stat>SHOW INDEX FROM blockchain_blocks;</stat><divider><t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><stat>show index from blockchain_blocks;</stat><divider><t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><stat>SHOW INDEX FROM blockchain_blocks;</stat><divider><t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><stat>show index from blockchain_blocks;</stat><divider><t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><stat>SHOW INDEX FROM blockchain_blocks;</stat><divider><t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><stat>show index from blockchain_blocks;</stat><divider><t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><stat>SHOW INDEX FROM blockchain_blocks;</stat><divider><t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><stat>show index from blockchain_blocks;</stat><divider><t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><stat>SHOW INDEX FROM blockchain_blocks;</stat><divider><t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><stat>show index from blockchain_blocks;</stat>