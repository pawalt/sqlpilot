[
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  upgrade_id UUID PRIMARY KEY,\n  upgrade_name VARCHAR(255) NOT NULL,\n  upgrade_date DATE NOT NULL,\n  protocol_version INT NOT NULL\n)\n\n### STATEMENT\n\nUPDATE blockchain_upgrades SET protocol_version = 2 WHERE upgrade_id = '12345678-1234-1234-1234-123456789abc';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  upgrade_id UUID PRIMARY KEY,\n  upgrade_name VARCHAR(255) NOT NULL,\n  upgrade_date DATE NOT NULL,\n  protocol_version INT NOT NULL\n)\n\n### STATEMENT\n\nUPDATE blockchain_upgrades SET upgrade_date = '2022-12-31' WHERE upgrade_id = '87654321-4321-4321-4321-210987654321';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  upgrade_id UUID PRIMARY KEY,\n  upgrade_name VARCHAR(255) NOT NULL,\n  upgrade_date DATE NOT NULL,\n  protocol_version INT NOT NULL\n)\n\n### STATEMENT\n\nUPDATE blockchain_upgrades SET upgrade_name = 'New Upgrade' WHERE upgrade_id = '24681357-1357-1357-9753-753186342157';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  upgrade_id UUID PRIMARY KEY,\n  upgrade_name VARCHAR(255) NOT NULL,\n  upgrade_date DATE NOT NULL,\n  protocol_version INT NOT NULL\n)\n\n### STATEMENT\n\nUPDATE blockchain_upgrades SET protocol_version = 2 WHERE upgrade_id = 'c7a756d0-59e6-4bfb-892c-7b2a2b98dc00';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  upgrade_id UUID PRIMARY KEY,\n  upgrade_name VARCHAR(255) NOT NULL,\n  upgrade_date DATE NOT NULL,\n  protocol_version INT NOT NULL\n)\n\n### STATEMENT\n\nUPDATE blockchain_upgrades SET upgrade_date = '2022-08-15' WHERE upgrade_name = 'Genesis Upgrade';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  upgrade_id UUID PRIMARY KEY,\n  upgrade_name VARCHAR(255) NOT NULL,\n  upgrade_date DATE NOT NULL,\n  protocol_version INT NOT NULL\n)\n\n### STATEMENT\n\nUPDATE blockchain_upgrades SET upgrade_date = '2022-09-20', protocol_version = 3 WHERE upgrade_id = 'f7c73f20-5d05-484a-b3dd-124cef679104';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n    upgrade_id UUID PRIMARY KEY,\n    upgrade_name VARCHAR(255),\n    upgrade_description TEXT,\n    upgrade_timestamp TIMESTAMP\n);\n\nCREATE TABLE protocol_changes (\n    change_id UUID PRIMARY KEY,\n    change_description TEXT,\n    change_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE blockchain_upgrades SET upgrade_name = 'Upgrade 1' WHERE upgrade_id = '12345678-1234-5678-1234-567812345678';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n    upgrade_id UUID PRIMARY KEY,\n    upgrade_name VARCHAR(255),\n    upgrade_description TEXT,\n    upgrade_timestamp TIMESTAMP\n);\n\nCREATE TABLE protocol_changes (\n    change_id UUID PRIMARY KEY,\n    change_description TEXT,\n    change_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE blockchain_upgrades SET upgrade_description = 'This is an example upgrade description' WHERE upgrade_id = '87654321-5678-1234-1234-567812345678';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n    upgrade_id UUID PRIMARY KEY,\n    upgrade_name VARCHAR(255),\n    upgrade_description TEXT,\n    upgrade_timestamp TIMESTAMP\n);\n\nCREATE TABLE protocol_changes (\n    change_id UUID PRIMARY KEY,\n    change_description TEXT,\n    change_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE protocol_changes SET change_description = 'Updated protocol change description' WHERE change_id = '98765432-6789-4321-2345-678923456789';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n    upgrade_id UUID PRIMARY KEY,\n    upgrade_name VARCHAR(255),\n    upgrade_description TEXT,\n    upgrade_timestamp TIMESTAMP\n);\n\nCREATE TABLE protocol_changes (\n    change_id UUID PRIMARY KEY,\n    change_description TEXT,\n    change_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE blockchain_upgrades SET upgrade_description = 'New and improved upgrade description' WHERE upgrade_id = 'f7ca6d7e-2240-440b-ba56-2d3613466d8e';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n    upgrade_id UUID PRIMARY KEY,\n    upgrade_name VARCHAR(255),\n    upgrade_description TEXT,\n    upgrade_timestamp TIMESTAMP\n);\n\nCREATE TABLE protocol_changes (\n    change_id UUID PRIMARY KEY,\n    change_description TEXT,\n    change_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE protocol_changes SET change_description = 'Updated protocol change description', change_timestamp = '2022-01-15 12:00:00' WHERE change_id = 'a376e5f7-cd1d-4a03-bb40-af8dc1c1fa1a';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n    upgrade_id UUID PRIMARY KEY,\n    upgrade_name VARCHAR(255),\n    upgrade_description TEXT,\n    upgrade_timestamp TIMESTAMP\n);\n\nCREATE TABLE protocol_changes (\n    change_id UUID PRIMARY KEY,\n    change_description TEXT,\n    change_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE blockchain_upgrades SET upgrade_description = 'Enhanced features and performance improvements', upgrade_name = 'Version 2.0', upgrade_timestamp = '2022-02-28 15:30:00' WHERE upgrade_id = '1582b9f9-7773-4299-8368-5d1a4ec7a2c2';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  id SERIAL PRIMARY KEY,\n  upgrade_name VARCHAR(100) NOT NULL,\n  upgrade_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE protocol_changes (\n  id SERIAL PRIMARY KEY,\n  change_name VARCHAR(100) NOT NULL,\n  change_description TEXT\n);\n\nCREATE TABLE network_nodes (\n  id SERIAL PRIMARY KEY,\n  node_id UUID NOT NULL,\n  node_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPDATE blockchain_upgrades SET upgrade_name = 'Upgrade v2.0' WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  id SERIAL PRIMARY KEY,\n  upgrade_name VARCHAR(100) NOT NULL,\n  upgrade_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE protocol_changes (\n  id SERIAL PRIMARY KEY,\n  change_name VARCHAR(100) NOT NULL,\n  change_description TEXT\n);\n\nCREATE TABLE network_nodes (\n  id SERIAL PRIMARY KEY,\n  node_id UUID NOT NULL,\n  node_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPDATE protocol_changes SET change_description = 'Bug fixes and improvements' WHERE id = 3;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  id SERIAL PRIMARY KEY,\n  upgrade_name VARCHAR(100) NOT NULL,\n  upgrade_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE protocol_changes (\n  id SERIAL PRIMARY KEY,\n  change_name VARCHAR(100) NOT NULL,\n  change_description TEXT\n);\n\nCREATE TABLE network_nodes (\n  id SERIAL PRIMARY KEY,\n  node_id UUID NOT NULL,\n  node_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPDATE network_nodes SET node_type = 'Full Node' WHERE id = 5;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  id SERIAL PRIMARY KEY,\n  upgrade_name VARCHAR(100) NOT NULL,\n  upgrade_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE protocol_changes (\n  id SERIAL PRIMARY KEY,\n  change_name VARCHAR(100) NOT NULL,\n  change_description TEXT\n);\n\nCREATE TABLE network_nodes (\n  id SERIAL PRIMARY KEY,\n  node_id UUID NOT NULL,\n  node_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPDATE blockchain_upgrades SET upgrade_date = '2022-01-15' WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  id SERIAL PRIMARY KEY,\n  upgrade_name VARCHAR(100) NOT NULL,\n  upgrade_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE protocol_changes (\n  id SERIAL PRIMARY KEY,\n  change_name VARCHAR(100) NOT NULL,\n  change_description TEXT\n);\n\nCREATE TABLE network_nodes (\n  id SERIAL PRIMARY KEY,\n  node_id UUID NOT NULL,\n  node_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPDATE protocol_changes SET change_description = 'Updated description' WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  id SERIAL PRIMARY KEY,\n  upgrade_name VARCHAR(100) NOT NULL,\n  upgrade_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE protocol_changes (\n  id SERIAL PRIMARY KEY,\n  change_name VARCHAR(100) NOT NULL,\n  change_description TEXT\n);\n\nCREATE TABLE network_nodes (\n  id SERIAL PRIMARY KEY,\n  node_id UUID NOT NULL,\n  node_type VARCHAR(50)\n);\n\n### STATEMENT\n\nUPDATE network_nodes SET node_type = 'Main' WHERE node_id = '550e8400-e29b-41d4-a716-446655440000';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  upgrade_id INT PRIMARY KEY,\n  upgrade_name VARCHAR(255),\n  upgrade_description TEXT,\n  upgrade_date DATE\n)\n\nCREATE TABLE protocol_changes (\n  change_id INT PRIMARY KEY,\n  change_description TEXT,\n  change_date DATE\n)\n\nCREATE TABLE upgrade_details (\n  detail_id INT PRIMARY KEY,\n  upgrade_id INT,\n  change_id INT,\n  FOREIGN KEY (upgrade_id) REFERENCES blockchain_upgrades(upgrade_id),\n  FOREIGN KEY (change_id) REFERENCES protocol_changes(change_id)\n)\n\nCREATE TABLE upgrade_history (\n  history_id INT PRIMARY KEY,\n  upgrade_id INT,\n  change_id INT,\n  applied_date DATE,\n  FOREIGN KEY (upgrade_id) REFERENCES blockchain_upgrades(upgrade_id),\n  FOREIGN KEY (change_id) REFERENCES protocol_changes(change_id)\n)\n\n### STATEMENT\n\nUPDATE blockchain_upgrades SET upgrade_name = 'Blockchain Upgrade 2.0' WHERE upgrade_id = 2",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  upgrade_id INT PRIMARY KEY,\n  upgrade_name VARCHAR(255),\n  upgrade_description TEXT,\n  upgrade_date DATE\n)\n\nCREATE TABLE protocol_changes (\n  change_id INT PRIMARY KEY,\n  change_description TEXT,\n  change_date DATE\n)\n\nCREATE TABLE upgrade_details (\n  detail_id INT PRIMARY KEY,\n  upgrade_id INT,\n  change_id INT,\n  FOREIGN KEY (upgrade_id) REFERENCES blockchain_upgrades(upgrade_id),\n  FOREIGN KEY (change_id) REFERENCES protocol_changes(change_id)\n)\n\nCREATE TABLE upgrade_history (\n  history_id INT PRIMARY KEY,\n  upgrade_id INT,\n  change_id INT,\n  applied_date DATE,\n  FOREIGN KEY (upgrade_id) REFERENCES blockchain_upgrades(upgrade_id),\n  FOREIGN KEY (change_id) REFERENCES protocol_changes(change_id)\n)\n\n### STATEMENT\n\nUPDATE protocol_changes SET change_description = 'Updated consensus algorithm' WHERE change_id = 1",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  upgrade_id INT PRIMARY KEY,\n  upgrade_name VARCHAR(255),\n  upgrade_description TEXT,\n  upgrade_date DATE\n)\n\nCREATE TABLE protocol_changes (\n  change_id INT PRIMARY KEY,\n  change_description TEXT,\n  change_date DATE\n)\n\nCREATE TABLE upgrade_details (\n  detail_id INT PRIMARY KEY,\n  upgrade_id INT,\n  change_id INT,\n  FOREIGN KEY (upgrade_id) REFERENCES blockchain_upgrades(upgrade_id),\n  FOREIGN KEY (change_id) REFERENCES protocol_changes(change_id)\n)\n\nCREATE TABLE upgrade_history (\n  history_id INT PRIMARY KEY,\n  upgrade_id INT,\n  change_id INT,\n  applied_date DATE,\n  FOREIGN KEY (upgrade_id) REFERENCES blockchain_upgrades(upgrade_id),\n  FOREIGN KEY (change_id) REFERENCES protocol_changes(change_id)\n)\n\n### STATEMENT\n\nUPDATE upgrade_details SET upgrade_id = 2 WHERE detail_id = 1",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  upgrade_id INT PRIMARY KEY,\n  upgrade_name VARCHAR(255),\n  upgrade_description TEXT,\n  upgrade_date DATE\n)\n\nCREATE TABLE protocol_changes (\n  change_id INT PRIMARY KEY,\n  change_description TEXT,\n  change_date DATE\n)\n\nCREATE TABLE upgrade_details (\n  detail_id INT PRIMARY KEY,\n  upgrade_id INT,\n  change_id INT,\n  FOREIGN KEY (upgrade_id) REFERENCES blockchain_upgrades(upgrade_id),\n  FOREIGN KEY (change_id) REFERENCES protocol_changes(change_id)\n)\n\nCREATE TABLE upgrade_history (\n  history_id INT PRIMARY KEY,\n  upgrade_id INT,\n  change_id INT,\n  applied_date DATE,\n  FOREIGN KEY (upgrade_id) REFERENCES blockchain_upgrades(upgrade_id),\n  FOREIGN KEY (change_id) REFERENCES protocol_changes(change_id)\n)\n\n### STATEMENT\n\nUPDATE blockchain_upgrades SET upgrade_date = '2022-02-28' WHERE upgrade_id = 1",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  upgrade_id INT PRIMARY KEY,\n  upgrade_name VARCHAR(255),\n  upgrade_description TEXT,\n  upgrade_date DATE\n)\n\nCREATE TABLE protocol_changes (\n  change_id INT PRIMARY KEY,\n  change_description TEXT,\n  change_date DATE\n)\n\nCREATE TABLE upgrade_details (\n  detail_id INT PRIMARY KEY,\n  upgrade_id INT,\n  change_id INT,\n  FOREIGN KEY (upgrade_id) REFERENCES blockchain_upgrades(upgrade_id),\n  FOREIGN KEY (change_id) REFERENCES protocol_changes(change_id)\n)\n\nCREATE TABLE upgrade_history (\n  history_id INT PRIMARY KEY,\n  upgrade_id INT,\n  change_id INT,\n  applied_date DATE,\n  FOREIGN KEY (upgrade_id) REFERENCES blockchain_upgrades(upgrade_id),\n  FOREIGN KEY (change_id) REFERENCES protocol_changes(change_id)\n)\n\n### STATEMENT\n\nUPDATE protocol_changes SET change_date = '2022-03-15' WHERE change_id = 2",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  upgrade_id INT PRIMARY KEY,\n  upgrade_name VARCHAR(255),\n  upgrade_description TEXT,\n  upgrade_date DATE\n)\n\nCREATE TABLE protocol_changes (\n  change_id INT PRIMARY KEY,\n  change_description TEXT,\n  change_date DATE\n)\n\nCREATE TABLE upgrade_details (\n  detail_id INT PRIMARY KEY,\n  upgrade_id INT,\n  change_id INT,\n  FOREIGN KEY (upgrade_id) REFERENCES blockchain_upgrades(upgrade_id),\n  FOREIGN KEY (change_id) REFERENCES protocol_changes(change_id)\n)\n\nCREATE TABLE upgrade_history (\n  history_id INT PRIMARY KEY,\n  upgrade_id INT,\n  change_id INT,\n  applied_date DATE,\n  FOREIGN KEY (upgrade_id) REFERENCES blockchain_upgrades(upgrade_id),\n  FOREIGN KEY (change_id) REFERENCES protocol_changes(change_id)\n)\n\n### STATEMENT\n\nUPDATE upgrade_details SET upgrade_id = 3, change_id = 4 WHERE detail_id = 5",
  "### TABLEDATA\n\nCREATE TABLE upgrades (\n  id INT PRIMARY KEY,\n  upgrade_name VARCHAR(255) NOT NULL,\n  upgrade_date DATE NOT NULL,\n  upgrade_description TEXT\n);\n\nCREATE TABLE protocols (\n  id INT PRIMARY KEY,\n  protocol_name VARCHAR(255) NOT NULL,\n  protocol_version VARCHAR(50) NOT NULL,\n  protocol_description TEXT\n);\n\nCREATE TABLE networks (\n  id INT PRIMARY KEY,\n  network_name VARCHAR(255) NOT NULL,\n  network_type VARCHAR(50) NOT NULL,\n  network_description TEXT\n);\n\nCREATE TABLE upgrade_history (\n  id INT PRIMARY KEY,\n  upgrade_id INT NOT NULL,\n  protocol_id INT NOT NULL,\n  network_id INT NOT NULL,\n  upgrade_date DATE NOT NULL,\n  FOREIGN KEY (upgrade_id) REFERENCES upgrades(id),\n  FOREIGN KEY (protocol_id) REFERENCES protocols(id),\n  FOREIGN KEY (network_id) REFERENCES networks(id)\n);\n\nCREATE TABLE audit_log (\n  id INT PRIMARY KEY,\n  action VARCHAR(50) NOT NULL,\n  table_name VARCHAR(255) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPDATE upgrades SET upgrade_description = 'New upgrade description' WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE upgrades (\n  id INT PRIMARY KEY,\n  upgrade_name VARCHAR(255) NOT NULL,\n  upgrade_date DATE NOT NULL,\n  upgrade_description TEXT\n);\n\nCREATE TABLE protocols (\n  id INT PRIMARY KEY,\n  protocol_name VARCHAR(255) NOT NULL,\n  protocol_version VARCHAR(50) NOT NULL,\n  protocol_description TEXT\n);\n\nCREATE TABLE networks (\n  id INT PRIMARY KEY,\n  network_name VARCHAR(255) NOT NULL,\n  network_type VARCHAR(50) NOT NULL,\n  network_description TEXT\n);\n\nCREATE TABLE upgrade_history (\n  id INT PRIMARY KEY,\n  upgrade_id INT NOT NULL,\n  protocol_id INT NOT NULL,\n  network_id INT NOT NULL,\n  upgrade_date DATE NOT NULL,\n  FOREIGN KEY (upgrade_id) REFERENCES upgrades(id),\n  FOREIGN KEY (protocol_id) REFERENCES protocols(id),\n  FOREIGN KEY (network_id) REFERENCES networks(id)\n);\n\nCREATE TABLE audit_log (\n  id INT PRIMARY KEY,\n  action VARCHAR(50) NOT NULL,\n  table_name VARCHAR(255) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPDATE protocols SET protocol_description = 'New protocol description' WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE upgrades (\n  id INT PRIMARY KEY,\n  upgrade_name VARCHAR(255) NOT NULL,\n  upgrade_date DATE NOT NULL,\n  upgrade_description TEXT\n);\n\nCREATE TABLE protocols (\n  id INT PRIMARY KEY,\n  protocol_name VARCHAR(255) NOT NULL,\n  protocol_version VARCHAR(50) NOT NULL,\n  protocol_description TEXT\n);\n\nCREATE TABLE networks (\n  id INT PRIMARY KEY,\n  network_name VARCHAR(255) NOT NULL,\n  network_type VARCHAR(50) NOT NULL,\n  network_description TEXT\n);\n\nCREATE TABLE upgrade_history (\n  id INT PRIMARY KEY,\n  upgrade_id INT NOT NULL,\n  protocol_id INT NOT NULL,\n  network_id INT NOT NULL,\n  upgrade_date DATE NOT NULL,\n  FOREIGN KEY (upgrade_id) REFERENCES upgrades(id),\n  FOREIGN KEY (protocol_id) REFERENCES protocols(id),\n  FOREIGN KEY (network_id) REFERENCES networks(id)\n);\n\nCREATE TABLE audit_log (\n  id INT PRIMARY KEY,\n  action VARCHAR(50) NOT NULL,\n  table_name VARCHAR(255) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPDATE networks SET network_description = 'New network description' WHERE id = 3;",
  "### TABLEDATA\n\nCREATE TABLE upgrades (\n  id INT PRIMARY KEY,\n  upgrade_name VARCHAR(255) NOT NULL,\n  upgrade_date DATE NOT NULL,\n  upgrade_description TEXT\n);\n\nCREATE TABLE protocols (\n  id INT PRIMARY KEY,\n  protocol_name VARCHAR(255) NOT NULL,\n  protocol_version VARCHAR(50) NOT NULL,\n  protocol_description TEXT\n);\n\nCREATE TABLE networks (\n  id INT PRIMARY KEY,\n  network_name VARCHAR(255) NOT NULL,\n  network_type VARCHAR(50) NOT NULL,\n  network_description TEXT\n);\n\nCREATE TABLE upgrade_history (\n  id INT PRIMARY KEY,\n  upgrade_id INT NOT NULL,\n  protocol_id INT NOT NULL,\n  network_id INT NOT NULL,\n  upgrade_date DATE NOT NULL,\n  FOREIGN KEY (upgrade_id) REFERENCES upgrades(id),\n  FOREIGN KEY (protocol_id) REFERENCES protocols(id),\n  FOREIGN KEY (network_id) REFERENCES networks(id)\n);\n\nCREATE TABLE audit_log (\n  id INT PRIMARY KEY,\n  action VARCHAR(50) NOT NULL,\n  table_name VARCHAR(255) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPDATE upgrades SET upgrade_description = 'New upgrade description' WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE upgrades (\n  id INT PRIMARY KEY,\n  upgrade_name VARCHAR(255) NOT NULL,\n  upgrade_date DATE NOT NULL,\n  upgrade_description TEXT\n);\n\nCREATE TABLE protocols (\n  id INT PRIMARY KEY,\n  protocol_name VARCHAR(255) NOT NULL,\n  protocol_version VARCHAR(50) NOT NULL,\n  protocol_description TEXT\n);\n\nCREATE TABLE networks (\n  id INT PRIMARY KEY,\n  network_name VARCHAR(255) NOT NULL,\n  network_type VARCHAR(50) NOT NULL,\n  network_description TEXT\n);\n\nCREATE TABLE upgrade_history (\n  id INT PRIMARY KEY,\n  upgrade_id INT NOT NULL,\n  protocol_id INT NOT NULL,\n  network_id INT NOT NULL,\n  upgrade_date DATE NOT NULL,\n  FOREIGN KEY (upgrade_id) REFERENCES upgrades(id),\n  FOREIGN KEY (protocol_id) REFERENCES protocols(id),\n  FOREIGN KEY (network_id) REFERENCES networks(id)\n);\n\nCREATE TABLE audit_log (\n  id INT PRIMARY KEY,\n  action VARCHAR(50) NOT NULL,\n  table_name VARCHAR(255) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPDATE protocols SET protocol_description = 'Updated protocol description' WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE upgrades (\n  id INT PRIMARY KEY,\n  upgrade_name VARCHAR(255) NOT NULL,\n  upgrade_date DATE NOT NULL,\n  upgrade_description TEXT\n);\n\nCREATE TABLE protocols (\n  id INT PRIMARY KEY,\n  protocol_name VARCHAR(255) NOT NULL,\n  protocol_version VARCHAR(50) NOT NULL,\n  protocol_description TEXT\n);\n\nCREATE TABLE networks (\n  id INT PRIMARY KEY,\n  network_name VARCHAR(255) NOT NULL,\n  network_type VARCHAR(50) NOT NULL,\n  network_description TEXT\n);\n\nCREATE TABLE upgrade_history (\n  id INT PRIMARY KEY,\n  upgrade_id INT NOT NULL,\n  protocol_id INT NOT NULL,\n  network_id INT NOT NULL,\n  upgrade_date DATE NOT NULL,\n  FOREIGN KEY (upgrade_id) REFERENCES upgrades(id),\n  FOREIGN KEY (protocol_id) REFERENCES protocols(id),\n  FOREIGN KEY (network_id) REFERENCES networks(id)\n);\n\nCREATE TABLE audit_log (\n  id INT PRIMARY KEY,\n  action VARCHAR(50) NOT NULL,\n  table_name VARCHAR(255) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nUPDATE networks SET network_description = 'Revised network description' WHERE id = 3;"
]