[
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  upgrade_id UUID PRIMARY KEY,\n  upgrade_name VARCHAR(255) NOT NULL,\n  upgrade_date DATE NOT NULL,\n  protocol_version INT NOT NULL\n)\n\n### STATEMENT\n\nDELETE FROM blockchain_upgrades WHERE upgrade_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  upgrade_id UUID PRIMARY KEY,\n  upgrade_name VARCHAR(255) NOT NULL,\n  upgrade_date DATE NOT NULL,\n  protocol_version INT NOT NULL\n)\n\n### STATEMENT\n\nDELETE FROM blockchain_upgrades WHERE upgrade_name = 'Genesis Upgrade';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  upgrade_id UUID PRIMARY KEY,\n  upgrade_name VARCHAR(255) NOT NULL,\n  upgrade_date DATE NOT NULL,\n  protocol_version INT NOT NULL\n)\n\n### STATEMENT\n\nDELETE FROM blockchain_upgrades WHERE protocol_version = 2;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  upgrade_id UUID PRIMARY KEY,\n  upgrade_name VARCHAR(255) NOT NULL,\n  upgrade_date DATE NOT NULL,\n  protocol_version INT NOT NULL\n)\n\n### STATEMENT\n\nDELETE FROM blockchain_upgrades WHERE upgrade_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  upgrade_id UUID PRIMARY KEY,\n  upgrade_name VARCHAR(255) NOT NULL,\n  upgrade_date DATE NOT NULL,\n  protocol_version INT NOT NULL\n)\n\n### STATEMENT\n\nDELETE FROM blockchain_upgrades WHERE protocol_version > 5 AND upgrade_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  upgrade_id UUID PRIMARY KEY,\n  upgrade_name VARCHAR(255) NOT NULL,\n  upgrade_date DATE NOT NULL,\n  protocol_version INT NOT NULL\n)\n\n### STATEMENT\n\nDELETE FROM blockchain_upgrades WHERE upgrade_name = 'Hard Fork' AND protocol_version = 3;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n    upgrade_id UUID PRIMARY KEY,\n    upgrade_name VARCHAR(255),\n    upgrade_description TEXT,\n    upgrade_timestamp TIMESTAMP\n);\n\nCREATE TABLE protocol_changes (\n    change_id UUID PRIMARY KEY,\n    change_description TEXT,\n    change_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM blockchain_upgrades WHERE upgrade_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n    upgrade_id UUID PRIMARY KEY,\n    upgrade_name VARCHAR(255),\n    upgrade_description TEXT,\n    upgrade_timestamp TIMESTAMP\n);\n\nCREATE TABLE protocol_changes (\n    change_id UUID PRIMARY KEY,\n    change_description TEXT,\n    change_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM protocol_changes WHERE change_id = '123e4567-e89b-12d3-a456-426614174001';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n    upgrade_id UUID PRIMARY KEY,\n    upgrade_name VARCHAR(255),\n    upgrade_description TEXT,\n    upgrade_timestamp TIMESTAMP\n);\n\nCREATE TABLE protocol_changes (\n    change_id UUID PRIMARY KEY,\n    change_description TEXT,\n    change_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM blockchain_upgrades WHERE upgrade_timestamp < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n    upgrade_id UUID PRIMARY KEY,\n    upgrade_name VARCHAR(255),\n    upgrade_description TEXT,\n    upgrade_timestamp TIMESTAMP\n);\n\nCREATE TABLE protocol_changes (\n    change_id UUID PRIMARY KEY,\n    change_description TEXT,\n    change_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM blockchain_upgrades WHERE upgrade_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n    upgrade_id UUID PRIMARY KEY,\n    upgrade_name VARCHAR(255),\n    upgrade_description TEXT,\n    upgrade_timestamp TIMESTAMP\n);\n\nCREATE TABLE protocol_changes (\n    change_id UUID PRIMARY KEY,\n    change_description TEXT,\n    change_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM protocol_changes WHERE change_id = '123e4567-e89b-12d3-a456-426614174001';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n    upgrade_id UUID PRIMARY KEY,\n    upgrade_name VARCHAR(255),\n    upgrade_description TEXT,\n    upgrade_timestamp TIMESTAMP\n);\n\nCREATE TABLE protocol_changes (\n    change_id UUID PRIMARY KEY,\n    change_description TEXT,\n    change_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM blockchain_upgrades WHERE upgrade_timestamp < '2022-01-01 00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  id SERIAL PRIMARY KEY,\n  upgrade_name VARCHAR(100) NOT NULL,\n  upgrade_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE protocol_changes (\n  id SERIAL PRIMARY KEY,\n  change_name VARCHAR(100) NOT NULL,\n  change_description TEXT\n);\n\nCREATE TABLE network_nodes (\n  id SERIAL PRIMARY KEY,\n  node_id UUID NOT NULL,\n  node_type VARCHAR(50)\n);\n\n### STATEMENT\n\nDELETE FROM blockchain_upgrades WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  id SERIAL PRIMARY KEY,\n  upgrade_name VARCHAR(100) NOT NULL,\n  upgrade_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE protocol_changes (\n  id SERIAL PRIMARY KEY,\n  change_name VARCHAR(100) NOT NULL,\n  change_description TEXT\n);\n\nCREATE TABLE network_nodes (\n  id SERIAL PRIMARY KEY,\n  node_id UUID NOT NULL,\n  node_type VARCHAR(50)\n);\n\n### STATEMENT\n\nDELETE FROM protocol_changes WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  id SERIAL PRIMARY KEY,\n  upgrade_name VARCHAR(100) NOT NULL,\n  upgrade_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE protocol_changes (\n  id SERIAL PRIMARY KEY,\n  change_name VARCHAR(100) NOT NULL,\n  change_description TEXT\n);\n\nCREATE TABLE network_nodes (\n  id SERIAL PRIMARY KEY,\n  node_id UUID NOT NULL,\n  node_type VARCHAR(50)\n);\n\n### STATEMENT\n\nDELETE FROM network_nodes WHERE id = 3;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  id SERIAL PRIMARY KEY,\n  upgrade_name VARCHAR(100) NOT NULL,\n  upgrade_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE protocol_changes (\n  id SERIAL PRIMARY KEY,\n  change_name VARCHAR(100) NOT NULL,\n  change_description TEXT\n);\n\nCREATE TABLE network_nodes (\n  id SERIAL PRIMARY KEY,\n  node_id UUID NOT NULL,\n  node_type VARCHAR(50)\n);\n\n### STATEMENT\n\nDELETE FROM blockchain_upgrades WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  id SERIAL PRIMARY KEY,\n  upgrade_name VARCHAR(100) NOT NULL,\n  upgrade_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE protocol_changes (\n  id SERIAL PRIMARY KEY,\n  change_name VARCHAR(100) NOT NULL,\n  change_description TEXT\n);\n\nCREATE TABLE network_nodes (\n  id SERIAL PRIMARY KEY,\n  node_id UUID NOT NULL,\n  node_type VARCHAR(50)\n);\n\n### STATEMENT\n\nDELETE FROM protocol_changes WHERE change_name = 'Security Upgrade';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  id SERIAL PRIMARY KEY,\n  upgrade_name VARCHAR(100) NOT NULL,\n  upgrade_date TIMESTAMP NOT NULL\n);\n\nCREATE TABLE protocol_changes (\n  id SERIAL PRIMARY KEY,\n  change_name VARCHAR(100) NOT NULL,\n  change_description TEXT\n);\n\nCREATE TABLE network_nodes (\n  id SERIAL PRIMARY KEY,\n  node_id UUID NOT NULL,\n  node_type VARCHAR(50)\n);\n\n### STATEMENT\n\nDELETE FROM network_nodes WHERE node_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  upgrade_id INT PRIMARY KEY,\n  upgrade_name VARCHAR(255),\n  upgrade_description TEXT,\n  upgrade_date DATE\n)\n\nCREATE TABLE protocol_changes (\n  change_id INT PRIMARY KEY,\n  change_description TEXT,\n  change_date DATE\n)\n\nCREATE TABLE upgrade_details (\n  detail_id INT PRIMARY KEY,\n  upgrade_id INT,\n  change_id INT,\n  FOREIGN KEY (upgrade_id) REFERENCES blockchain_upgrades(upgrade_id),\n  FOREIGN KEY (change_id) REFERENCES protocol_changes(change_id)\n)\n\nCREATE TABLE upgrade_history (\n  history_id INT PRIMARY KEY,\n  upgrade_id INT,\n  change_id INT,\n  applied_date DATE,\n  FOREIGN KEY (upgrade_id) REFERENCES blockchain_upgrades(upgrade_id),\n  FOREIGN KEY (change_id) REFERENCES protocol_changes(change_id)\n)\n\n### STATEMENT\n\nDELETE FROM blockchain_upgrades WHERE upgrade_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  upgrade_id INT PRIMARY KEY,\n  upgrade_name VARCHAR(255),\n  upgrade_description TEXT,\n  upgrade_date DATE\n)\n\nCREATE TABLE protocol_changes (\n  change_id INT PRIMARY KEY,\n  change_description TEXT,\n  change_date DATE\n)\n\nCREATE TABLE upgrade_details (\n  detail_id INT PRIMARY KEY,\n  upgrade_id INT,\n  change_id INT,\n  FOREIGN KEY (upgrade_id) REFERENCES blockchain_upgrades(upgrade_id),\n  FOREIGN KEY (change_id) REFERENCES protocol_changes(change_id)\n)\n\nCREATE TABLE upgrade_history (\n  history_id INT PRIMARY KEY,\n  upgrade_id INT,\n  change_id INT,\n  applied_date DATE,\n  FOREIGN KEY (upgrade_id) REFERENCES blockchain_upgrades(upgrade_id),\n  FOREIGN KEY (change_id) REFERENCES protocol_changes(change_id)\n)\n\n### STATEMENT\n\nDELETE FROM protocol_changes WHERE change_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  upgrade_id INT PRIMARY KEY,\n  upgrade_name VARCHAR(255),\n  upgrade_description TEXT,\n  upgrade_date DATE\n)\n\nCREATE TABLE protocol_changes (\n  change_id INT PRIMARY KEY,\n  change_description TEXT,\n  change_date DATE\n)\n\nCREATE TABLE upgrade_details (\n  detail_id INT PRIMARY KEY,\n  upgrade_id INT,\n  change_id INT,\n  FOREIGN KEY (upgrade_id) REFERENCES blockchain_upgrades(upgrade_id),\n  FOREIGN KEY (change_id) REFERENCES protocol_changes(change_id)\n)\n\nCREATE TABLE upgrade_history (\n  history_id INT PRIMARY KEY,\n  upgrade_id INT,\n  change_id INT,\n  applied_date DATE,\n  FOREIGN KEY (upgrade_id) REFERENCES blockchain_upgrades(upgrade_id),\n  FOREIGN KEY (change_id) REFERENCES protocol_changes(change_id)\n)\n\n### STATEMENT\n\nDELETE FROM upgrade_details WHERE detail_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  upgrade_id INT PRIMARY KEY,\n  upgrade_name VARCHAR(255),\n  upgrade_description TEXT,\n  upgrade_date DATE\n)\n\nCREATE TABLE protocol_changes (\n  change_id INT PRIMARY KEY,\n  change_description TEXT,\n  change_date DATE\n)\n\nCREATE TABLE upgrade_details (\n  detail_id INT PRIMARY KEY,\n  upgrade_id INT,\n  change_id INT,\n  FOREIGN KEY (upgrade_id) REFERENCES blockchain_upgrades(upgrade_id),\n  FOREIGN KEY (change_id) REFERENCES protocol_changes(change_id)\n)\n\nCREATE TABLE upgrade_history (\n  history_id INT PRIMARY KEY,\n  upgrade_id INT,\n  change_id INT,\n  applied_date DATE,\n  FOREIGN KEY (upgrade_id) REFERENCES blockchain_upgrades(upgrade_id),\n  FOREIGN KEY (change_id) REFERENCES protocol_changes(change_id)\n)\n\n### STATEMENT\n\nDELETE FROM upgrade_details WHERE upgrade_id = 1 AND change_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  upgrade_id INT PRIMARY KEY,\n  upgrade_name VARCHAR(255),\n  upgrade_description TEXT,\n  upgrade_date DATE\n)\n\nCREATE TABLE protocol_changes (\n  change_id INT PRIMARY KEY,\n  change_description TEXT,\n  change_date DATE\n)\n\nCREATE TABLE upgrade_details (\n  detail_id INT PRIMARY KEY,\n  upgrade_id INT,\n  change_id INT,\n  FOREIGN KEY (upgrade_id) REFERENCES blockchain_upgrades(upgrade_id),\n  FOREIGN KEY (change_id) REFERENCES protocol_changes(change_id)\n)\n\nCREATE TABLE upgrade_history (\n  history_id INT PRIMARY KEY,\n  upgrade_id INT,\n  change_id INT,\n  applied_date DATE,\n  FOREIGN KEY (upgrade_id) REFERENCES blockchain_upgrades(upgrade_id),\n  FOREIGN KEY (change_id) REFERENCES protocol_changes(change_id)\n)\n\n### STATEMENT\n\nDELETE FROM upgrade_history WHERE applied_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_upgrades (\n  upgrade_id INT PRIMARY KEY,\n  upgrade_name VARCHAR(255),\n  upgrade_description TEXT,\n  upgrade_date DATE\n)\n\nCREATE TABLE protocol_changes (\n  change_id INT PRIMARY KEY,\n  change_description TEXT,\n  change_date DATE\n)\n\nCREATE TABLE upgrade_details (\n  detail_id INT PRIMARY KEY,\n  upgrade_id INT,\n  change_id INT,\n  FOREIGN KEY (upgrade_id) REFERENCES blockchain_upgrades(upgrade_id),\n  FOREIGN KEY (change_id) REFERENCES protocol_changes(change_id)\n)\n\nCREATE TABLE upgrade_history (\n  history_id INT PRIMARY KEY,\n  upgrade_id INT,\n  change_id INT,\n  applied_date DATE,\n  FOREIGN KEY (upgrade_id) REFERENCES blockchain_upgrades(upgrade_id),\n  FOREIGN KEY (change_id) REFERENCES protocol_changes(change_id)\n)\n\n### STATEMENT\n\nDELETE FROM protocol_changes WHERE change_id IN (SELECT change_id FROM upgrade_details WHERE upgrade_id = 3);",
  "### TABLEDATA\n\nCREATE TABLE upgrades (\n  id INT PRIMARY KEY,\n  upgrade_name VARCHAR(255) NOT NULL,\n  upgrade_date DATE NOT NULL,\n  upgrade_description TEXT\n);\n\nCREATE TABLE protocols (\n  id INT PRIMARY KEY,\n  protocol_name VARCHAR(255) NOT NULL,\n  protocol_version VARCHAR(50) NOT NULL,\n  protocol_description TEXT\n);\n\nCREATE TABLE networks (\n  id INT PRIMARY KEY,\n  network_name VARCHAR(255) NOT NULL,\n  network_type VARCHAR(50) NOT NULL,\n  network_description TEXT\n);\n\nCREATE TABLE upgrade_history (\n  id INT PRIMARY KEY,\n  upgrade_id INT NOT NULL,\n  protocol_id INT NOT NULL,\n  network_id INT NOT NULL,\n  upgrade_date DATE NOT NULL,\n  FOREIGN KEY (upgrade_id) REFERENCES upgrades(id),\n  FOREIGN KEY (protocol_id) REFERENCES protocols(id),\n  FOREIGN KEY (network_id) REFERENCES networks(id)\n);\n\nCREATE TABLE audit_log (\n  id INT PRIMARY KEY,\n  action VARCHAR(50) NOT NULL,\n  table_name VARCHAR(255) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nDELETE FROM upgrades WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE upgrades (\n  id INT PRIMARY KEY,\n  upgrade_name VARCHAR(255) NOT NULL,\n  upgrade_date DATE NOT NULL,\n  upgrade_description TEXT\n);\n\nCREATE TABLE protocols (\n  id INT PRIMARY KEY,\n  protocol_name VARCHAR(255) NOT NULL,\n  protocol_version VARCHAR(50) NOT NULL,\n  protocol_description TEXT\n);\n\nCREATE TABLE networks (\n  id INT PRIMARY KEY,\n  network_name VARCHAR(255) NOT NULL,\n  network_type VARCHAR(50) NOT NULL,\n  network_description TEXT\n);\n\nCREATE TABLE upgrade_history (\n  id INT PRIMARY KEY,\n  upgrade_id INT NOT NULL,\n  protocol_id INT NOT NULL,\n  network_id INT NOT NULL,\n  upgrade_date DATE NOT NULL,\n  FOREIGN KEY (upgrade_id) REFERENCES upgrades(id),\n  FOREIGN KEY (protocol_id) REFERENCES protocols(id),\n  FOREIGN KEY (network_id) REFERENCES networks(id)\n);\n\nCREATE TABLE audit_log (\n  id INT PRIMARY KEY,\n  action VARCHAR(50) NOT NULL,\n  table_name VARCHAR(255) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nDELETE FROM protocols WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE upgrades (\n  id INT PRIMARY KEY,\n  upgrade_name VARCHAR(255) NOT NULL,\n  upgrade_date DATE NOT NULL,\n  upgrade_description TEXT\n);\n\nCREATE TABLE protocols (\n  id INT PRIMARY KEY,\n  protocol_name VARCHAR(255) NOT NULL,\n  protocol_version VARCHAR(50) NOT NULL,\n  protocol_description TEXT\n);\n\nCREATE TABLE networks (\n  id INT PRIMARY KEY,\n  network_name VARCHAR(255) NOT NULL,\n  network_type VARCHAR(50) NOT NULL,\n  network_description TEXT\n);\n\nCREATE TABLE upgrade_history (\n  id INT PRIMARY KEY,\n  upgrade_id INT NOT NULL,\n  protocol_id INT NOT NULL,\n  network_id INT NOT NULL,\n  upgrade_date DATE NOT NULL,\n  FOREIGN KEY (upgrade_id) REFERENCES upgrades(id),\n  FOREIGN KEY (protocol_id) REFERENCES protocols(id),\n  FOREIGN KEY (network_id) REFERENCES networks(id)\n);\n\nCREATE TABLE audit_log (\n  id INT PRIMARY KEY,\n  action VARCHAR(50) NOT NULL,\n  table_name VARCHAR(255) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nDELETE FROM networks WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE upgrades (\n  id INT PRIMARY KEY,\n  upgrade_name VARCHAR(255) NOT NULL,\n  upgrade_date DATE NOT NULL,\n  upgrade_description TEXT\n);\n\nCREATE TABLE protocols (\n  id INT PRIMARY KEY,\n  protocol_name VARCHAR(255) NOT NULL,\n  protocol_version VARCHAR(50) NOT NULL,\n  protocol_description TEXT\n);\n\nCREATE TABLE networks (\n  id INT PRIMARY KEY,\n  network_name VARCHAR(255) NOT NULL,\n  network_type VARCHAR(50) NOT NULL,\n  network_description TEXT\n);\n\nCREATE TABLE upgrade_history (\n  id INT PRIMARY KEY,\n  upgrade_id INT NOT NULL,\n  protocol_id INT NOT NULL,\n  network_id INT NOT NULL,\n  upgrade_date DATE NOT NULL,\n  FOREIGN KEY (upgrade_id) REFERENCES upgrades(id),\n  FOREIGN KEY (protocol_id) REFERENCES protocols(id),\n  FOREIGN KEY (network_id) REFERENCES networks(id)\n);\n\nCREATE TABLE audit_log (\n  id INT PRIMARY KEY,\n  action VARCHAR(50) NOT NULL,\n  table_name VARCHAR(255) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nDELETE FROM upgrades WHERE id = 1 AND upgrade_name = 'Example Upgrade'",
  "### TABLEDATA\n\nCREATE TABLE upgrades (\n  id INT PRIMARY KEY,\n  upgrade_name VARCHAR(255) NOT NULL,\n  upgrade_date DATE NOT NULL,\n  upgrade_description TEXT\n);\n\nCREATE TABLE protocols (\n  id INT PRIMARY KEY,\n  protocol_name VARCHAR(255) NOT NULL,\n  protocol_version VARCHAR(50) NOT NULL,\n  protocol_description TEXT\n);\n\nCREATE TABLE networks (\n  id INT PRIMARY KEY,\n  network_name VARCHAR(255) NOT NULL,\n  network_type VARCHAR(50) NOT NULL,\n  network_description TEXT\n);\n\nCREATE TABLE upgrade_history (\n  id INT PRIMARY KEY,\n  upgrade_id INT NOT NULL,\n  protocol_id INT NOT NULL,\n  network_id INT NOT NULL,\n  upgrade_date DATE NOT NULL,\n  FOREIGN KEY (upgrade_id) REFERENCES upgrades(id),\n  FOREIGN KEY (protocol_id) REFERENCES protocols(id),\n  FOREIGN KEY (network_id) REFERENCES networks(id)\n);\n\nCREATE TABLE audit_log (\n  id INT PRIMARY KEY,\n  action VARCHAR(50) NOT NULL,\n  table_name VARCHAR(255) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nDELETE FROM protocols WHERE id = 2 AND protocol_version = '1.0'",
  "### TABLEDATA\n\nCREATE TABLE upgrades (\n  id INT PRIMARY KEY,\n  upgrade_name VARCHAR(255) NOT NULL,\n  upgrade_date DATE NOT NULL,\n  upgrade_description TEXT\n);\n\nCREATE TABLE protocols (\n  id INT PRIMARY KEY,\n  protocol_name VARCHAR(255) NOT NULL,\n  protocol_version VARCHAR(50) NOT NULL,\n  protocol_description TEXT\n);\n\nCREATE TABLE networks (\n  id INT PRIMARY KEY,\n  network_name VARCHAR(255) NOT NULL,\n  network_type VARCHAR(50) NOT NULL,\n  network_description TEXT\n);\n\nCREATE TABLE upgrade_history (\n  id INT PRIMARY KEY,\n  upgrade_id INT NOT NULL,\n  protocol_id INT NOT NULL,\n  network_id INT NOT NULL,\n  upgrade_date DATE NOT NULL,\n  FOREIGN KEY (upgrade_id) REFERENCES upgrades(id),\n  FOREIGN KEY (protocol_id) REFERENCES protocols(id),\n  FOREIGN KEY (network_id) REFERENCES networks(id)\n);\n\nCREATE TABLE audit_log (\n  id INT PRIMARY KEY,\n  action VARCHAR(50) NOT NULL,\n  table_name VARCHAR(255) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nDELETE FROM networks WHERE network_name = 'Example Network'"
]