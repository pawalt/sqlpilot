<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT * FROM blockchain_transactions;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select * from blockchain_transactions;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT * FROM blockchain_transactions;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select * from blockchain_transactions;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT * FROM blockchain_transactions;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select * from blockchain_transactions;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT * FROM blockchain_transactions;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select * from blockchain_transactions;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT * FROM blockchain_transactions;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select * from blockchain_transactions;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT * FROM blockchain_transactions;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select * from blockchain_transactions;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT transaction_id, from_address, to_address, amount FROM blockchain_transactions WHERE amount > 1000;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select transaction_id, from_address, to_address, amount from blockchain_transactions where amount > 1000;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT transaction_id, from_address, to_address, amount FROM blockchain_transactions WHERE amount > 1000;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select transaction_id, from_address, to_address, amount from blockchain_transactions where amount > 1000;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT transaction_id, from_address, to_address, amount FROM blockchain_transactions WHERE amount > 1000;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select transaction_id, from_address, to_address, amount from blockchain_transactions where amount > 1000;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT transaction_id, from_address, to_address, amount FROM blockchain_transactions WHERE amount > 1000;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select transaction_id, from_address, to_address, amount from blockchain_transactions where amount > 1000;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT transaction_id, from_address, to_address, amount FROM blockchain_transactions WHERE amount > 1000;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select transaction_id, from_address, to_address, amount from blockchain_transactions where amount > 1000;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT transaction_id, from_address, to_address, amount FROM blockchain_transactions WHERE amount > 1000;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select transaction_id, from_address, to_address, amount from blockchain_transactions where amount > 1000;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT block_id, block_hash, previous_block_hash FROM blockchain_blocks;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select block_id, block_hash, previous_block_hash from blockchain_blocks;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT block_id, block_hash, previous_block_hash FROM blockchain_blocks;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select block_id, block_hash, previous_block_hash from blockchain_blocks;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT block_id, block_hash, previous_block_hash FROM blockchain_blocks;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select block_id, block_hash, previous_block_hash from blockchain_blocks;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT block_id, block_hash, previous_block_hash FROM blockchain_blocks;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select block_id, block_hash, previous_block_hash from blockchain_blocks;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT block_id, block_hash, previous_block_hash FROM blockchain_blocks;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select block_id, block_hash, previous_block_hash from blockchain_blocks;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT block_id, block_hash, previous_block_hash FROM blockchain_blocks;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select block_id, block_hash, previous_block_hash from blockchain_blocks;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT user_name, balance, registration_date FROM blockchain_users WHERE balance < 0;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select user_name, balance, registration_date from blockchain_users where balance < 0;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, balance, registration_date FROM blockchain_users WHERE balance < 0;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select user_name, balance, registration_date from blockchain_users where balance < 0;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT user_name, balance, registration_date FROM blockchain_users WHERE balance < 0;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select user_name, balance, registration_date from blockchain_users where balance < 0;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, balance, registration_date FROM blockchain_users WHERE balance < 0;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select user_name, balance, registration_date from blockchain_users where balance < 0;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, balance, registration_date FROM blockchain_users WHERE balance < 0;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select user_name, balance, registration_date from blockchain_users where balance < 0;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, balance, registration_date FROM blockchain_users WHERE balance < 0;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select user_name, balance, registration_date from blockchain_users where balance < 0;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT * FROM blockchain_users ORDER BY last_login DESC LIMIT 5;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select * from blockchain_users order by last_login desc limit 5;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT * FROM blockchain_users ORDER BY last_login DESC LIMIT 5;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select * from blockchain_users order by last_login desc limit 5;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT * FROM blockchain_users ORDER BY last_login DESC LIMIT 5;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select * from blockchain_users order by last_login desc limit 5;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT * FROM blockchain_users ORDER BY last_login DESC LIMIT 5;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select * from blockchain_users order by last_login desc limit 5;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT * FROM blockchain_users ORDER BY last_login DESC LIMIT 5;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select * from blockchain_users order by last_login desc limit 5;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT * FROM blockchain_users ORDER BY last_login DESC LIMIT 5;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select * from blockchain_users order by last_login desc limit 5;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT user_name, balance FROM blockchain_users WHERE registration_date >= '2022-01-01';</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select user_name, balance from blockchain_users where registration_date >= '2022-01-01';</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, balance FROM blockchain_users WHERE registration_date >= '2022-01-01';</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select user_name, balance from blockchain_users where registration_date >= '2022-01-01';</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT user_name, balance FROM blockchain_users WHERE registration_date >= '2022-01-01';</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select user_name, balance from blockchain_users where registration_date >= '2022-01-01';</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, balance FROM blockchain_users WHERE registration_date >= '2022-01-01';</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select user_name, balance from blockchain_users where registration_date >= '2022-01-01';</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, balance FROM blockchain_users WHERE registration_date >= '2022-01-01';</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select user_name, balance from blockchain_users where registration_date >= '2022-01-01';</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, balance FROM blockchain_users WHERE registration_date >= '2022-01-01';</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select user_name, balance from blockchain_users where registration_date >= '2022-01-01';</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT user_id, user_name, balance FROM blockchain_users WHERE balance BETWEEN 500 AND 1000;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select user_id, user_name, balance from blockchain_users where balance between 500 and 1000;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT user_id, user_name, balance FROM blockchain_users WHERE balance BETWEEN 500 AND 1000;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select user_id, user_name, balance from blockchain_users where balance between 500 and 1000;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT user_id, user_name, balance FROM blockchain_users WHERE balance BETWEEN 500 AND 1000;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select user_id, user_name, balance from blockchain_users where balance between 500 and 1000;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT user_id, user_name, balance FROM blockchain_users WHERE balance BETWEEN 500 AND 1000;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select user_id, user_name, balance from blockchain_users where balance between 500 and 1000;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT user_id, user_name, balance FROM blockchain_users WHERE balance BETWEEN 500 AND 1000;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select user_id, user_name, balance from blockchain_users where balance between 500 and 1000;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT user_id, user_name, balance FROM blockchain_users WHERE balance BETWEEN 500 AND 1000;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select user_id, user_name, balance from blockchain_users where balance between 500 and 1000;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT SUM(balance) FROM blockchain_users;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select sum(balance) from blockchain_users;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT SUM(balance) FROM blockchain_users;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select sum(balance) from blockchain_users;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT SUM(balance) FROM blockchain_users;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select sum(balance) from blockchain_users;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT SUM(balance) FROM blockchain_users;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select sum(balance) from blockchain_users;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT SUM(balance) FROM blockchain_users;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select sum(balance) from blockchain_users;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT SUM(balance) FROM blockchain_users;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select sum(balance) from blockchain_users;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT AVG(balance) FROM blockchain_users;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select avg(balance) from blockchain_users;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT AVG(balance) FROM blockchain_users;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select avg(balance) from blockchain_users;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT AVG(balance) FROM blockchain_users;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select avg(balance) from blockchain_users;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT AVG(balance) FROM blockchain_users;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select avg(balance) from blockchain_users;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT AVG(balance) FROM blockchain_users;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select avg(balance) from blockchain_users;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT AVG(balance) FROM blockchain_users;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select avg(balance) from blockchain_users;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT MAX(balance) FROM blockchain_users;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select max(balance) from blockchain_users;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT MAX(balance) FROM blockchain_users;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select max(balance) from blockchain_users;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT MAX(balance) FROM blockchain_users;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select max(balance) from blockchain_users;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT MAX(balance) FROM blockchain_users;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select max(balance) from blockchain_users;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT MAX(balance) FROM blockchain_users;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select max(balance) from blockchain_users;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT MAX(balance) FROM blockchain_users;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select max(balance) from blockchain_users;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT MIN(balance) FROM blockchain_users;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select min(balance) from blockchain_users;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT MIN(balance) FROM blockchain_users;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select min(balance) from blockchain_users;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT MIN(balance) FROM blockchain_users;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select min(balance) from blockchain_users;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT MIN(balance) FROM blockchain_users;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select min(balance) from blockchain_users;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT MIN(balance) FROM blockchain_users;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select min(balance) from blockchain_users;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT MIN(balance) FROM blockchain_users;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select min(balance) from blockchain_users;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT COUNT(user_id) FROM blockchain_users;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select count(user_id) from blockchain_users;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT COUNT(user_id) FROM blockchain_users;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select count(user_id) from blockchain_users;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT COUNT(user_id) FROM blockchain_users;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select count(user_id) from blockchain_users;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT COUNT(user_id) FROM blockchain_users;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select count(user_id) from blockchain_users;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT COUNT(user_id) FROM blockchain_users;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select count(user_id) from blockchain_users;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT COUNT(user_id) FROM blockchain_users;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select count(user_id) from blockchain_users;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT user_name, COUNT(transaction_id) FROM blockchain_users JOIN blockchain_transactions ON blockchain_users.user_id = blockchain_transactions.from_address GROUP BY user_name;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select user_name, count(transaction_id) from blockchain_users join blockchain_transactions on blockchain_users.user_id = blockchain_transactions.from_address group by user_name;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, COUNT(transaction_id) FROM blockchain_users JOIN blockchain_transactions ON blockchain_users.user_id = blockchain_transactions.from_address GROUP BY user_name;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select user_name, count(transaction_id) from blockchain_users join blockchain_transactions on blockchain_users.user_id = blockchain_transactions.from_address group by user_name;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT user_name, COUNT(transaction_id) FROM blockchain_users JOIN blockchain_transactions ON blockchain_users.user_id = blockchain_transactions.from_address GROUP BY user_name;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select user_name, count(transaction_id) from blockchain_users join blockchain_transactions on blockchain_users.user_id = blockchain_transactions.from_address group by user_name;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, COUNT(transaction_id) FROM blockchain_users JOIN blockchain_transactions ON blockchain_users.user_id = blockchain_transactions.from_address GROUP BY user_name;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select user_name, count(transaction_id) from blockchain_users join blockchain_transactions on blockchain_users.user_id = blockchain_transactions.from_address group by user_name;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, COUNT(transaction_id) FROM blockchain_users JOIN blockchain_transactions ON blockchain_users.user_id = blockchain_transactions.from_address GROUP BY user_name;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select user_name, count(transaction_id) from blockchain_users join blockchain_transactions on blockchain_users.user_id = blockchain_transactions.from_address group by user_name;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, COUNT(transaction_id) FROM blockchain_users JOIN blockchain_transactions ON blockchain_users.user_id = blockchain_transactions.from_address GROUP BY user_name;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select user_name, count(transaction_id) from blockchain_users join blockchain_transactions on blockchain_users.user_id = blockchain_transactions.from_address group by user_name;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT user_name, MAX(balance) FROM blockchain_users GROUP BY user_name HAVING MAX(balance) > 5000;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select user_name, max(balance) from blockchain_users group by user_name having max(balance) > 5000;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, MAX(balance) FROM blockchain_users GROUP BY user_name HAVING MAX(balance) > 5000;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select user_name, max(balance) from blockchain_users group by user_name having max(balance) > 5000;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT user_name, MAX(balance) FROM blockchain_users GROUP BY user_name HAVING MAX(balance) > 5000;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select user_name, max(balance) from blockchain_users group by user_name having max(balance) > 5000;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, MAX(balance) FROM blockchain_users GROUP BY user_name HAVING MAX(balance) > 5000;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select user_name, max(balance) from blockchain_users group by user_name having max(balance) > 5000;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, MAX(balance) FROM blockchain_users GROUP BY user_name HAVING MAX(balance) > 5000;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select user_name, max(balance) from blockchain_users group by user_name having max(balance) > 5000;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, MAX(balance) FROM blockchain_users GROUP BY user_name HAVING MAX(balance) > 5000;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select user_name, max(balance) from blockchain_users group by user_name having max(balance) > 5000;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT user_name, MIN(balance) FROM blockchain_users GROUP BY user_name HAVING MIN(balance) < 0;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select user_name, min(balance) from blockchain_users group by user_name having min(balance) < 0;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, MIN(balance) FROM blockchain_users GROUP BY user_name HAVING MIN(balance) < 0;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select user_name, min(balance) from blockchain_users group by user_name having min(balance) < 0;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT user_name, MIN(balance) FROM blockchain_users GROUP BY user_name HAVING MIN(balance) < 0;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select user_name, min(balance) from blockchain_users group by user_name having min(balance) < 0;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, MIN(balance) FROM blockchain_users GROUP BY user_name HAVING MIN(balance) < 0;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select user_name, min(balance) from blockchain_users group by user_name having min(balance) < 0;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, MIN(balance) FROM blockchain_users GROUP BY user_name HAVING MIN(balance) < 0;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select user_name, min(balance) from blockchain_users group by user_name having min(balance) < 0;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, MIN(balance) FROM blockchain_users GROUP BY user_name HAVING MIN(balance) < 0;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select user_name, min(balance) from blockchain_users group by user_name having min(balance) < 0;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT user_name, AVG(balance) FROM blockchain_users GROUP BY user_name HAVING AVG(balance) < 1000;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select user_name, avg(balance) from blockchain_users group by user_name having avg(balance) < 1000;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, AVG(balance) FROM blockchain_users GROUP BY user_name HAVING AVG(balance) < 1000;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select user_name, avg(balance) from blockchain_users group by user_name having avg(balance) < 1000;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT user_name, AVG(balance) FROM blockchain_users GROUP BY user_name HAVING AVG(balance) < 1000;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select user_name, avg(balance) from blockchain_users group by user_name having avg(balance) < 1000;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, AVG(balance) FROM blockchain_users GROUP BY user_name HAVING AVG(balance) < 1000;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select user_name, avg(balance) from blockchain_users group by user_name having avg(balance) < 1000;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, AVG(balance) FROM blockchain_users GROUP BY user_name HAVING AVG(balance) < 1000;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select user_name, avg(balance) from blockchain_users group by user_name having avg(balance) < 1000;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, AVG(balance) FROM blockchain_users GROUP BY user_name HAVING AVG(balance) < 1000;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select user_name, avg(balance) from blockchain_users group by user_name having avg(balance) < 1000;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT user_name, SUM(balance) FROM blockchain_users GROUP BY user_name HAVING SUM(balance) > 10000;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select user_name, sum(balance) from blockchain_users group by user_name having sum(balance) > 10000;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, SUM(balance) FROM blockchain_users GROUP BY user_name HAVING SUM(balance) > 10000;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select user_name, sum(balance) from blockchain_users group by user_name having sum(balance) > 10000;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT user_name, SUM(balance) FROM blockchain_users GROUP BY user_name HAVING SUM(balance) > 10000;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select user_name, sum(balance) from blockchain_users group by user_name having sum(balance) > 10000;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, SUM(balance) FROM blockchain_users GROUP BY user_name HAVING SUM(balance) > 10000;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select user_name, sum(balance) from blockchain_users group by user_name having sum(balance) > 10000;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, SUM(balance) FROM blockchain_users GROUP BY user_name HAVING SUM(balance) > 10000;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select user_name, sum(balance) from blockchain_users group by user_name having sum(balance) > 10000;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, SUM(balance) FROM blockchain_users GROUP BY user_name HAVING SUM(balance) > 10000;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select user_name, sum(balance) from blockchain_users group by user_name having sum(balance) > 10000;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT user_name, COUNT(transaction_id) FROM blockchain_users JOIN blockchain_transactions ON blockchain_users.user_id = blockchain_transactions.from_address GROUP BY user_name HAVING COUNT(transaction_id) > 10;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select user_name, count(transaction_id) from blockchain_users join blockchain_transactions on blockchain_users.user_id = blockchain_transactions.from_address group by user_name having count(transaction_id) > 10;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, COUNT(transaction_id) FROM blockchain_users JOIN blockchain_transactions ON blockchain_users.user_id = blockchain_transactions.from_address GROUP BY user_name HAVING COUNT(transaction_id) > 10;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select user_name, count(transaction_id) from blockchain_users join blockchain_transactions on blockchain_users.user_id = blockchain_transactions.from_address group by user_name having count(transaction_id) > 10;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT user_name, COUNT(transaction_id) FROM blockchain_users JOIN blockchain_transactions ON blockchain_users.user_id = blockchain_transactions.from_address GROUP BY user_name HAVING COUNT(transaction_id) > 10;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select user_name, count(transaction_id) from blockchain_users join blockchain_transactions on blockchain_users.user_id = blockchain_transactions.from_address group by user_name having count(transaction_id) > 10;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, COUNT(transaction_id) FROM blockchain_users JOIN blockchain_transactions ON blockchain_users.user_id = blockchain_transactions.from_address GROUP BY user_name HAVING COUNT(transaction_id) > 10;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select user_name, count(transaction_id) from blockchain_users join blockchain_transactions on blockchain_users.user_id = blockchain_transactions.from_address group by user_name having count(transaction_id) > 10;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, COUNT(transaction_id) FROM blockchain_users JOIN blockchain_transactions ON blockchain_users.user_id = blockchain_transactions.from_address GROUP BY user_name HAVING COUNT(transaction_id) > 10;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select user_name, count(transaction_id) from blockchain_users join blockchain_transactions on blockchain_users.user_id = blockchain_transactions.from_address group by user_name having count(transaction_id) > 10;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, COUNT(transaction_id) FROM blockchain_users JOIN blockchain_transactions ON blockchain_users.user_id = blockchain_transactions.from_address GROUP BY user_name HAVING COUNT(transaction_id) > 10;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select user_name, count(transaction_id) from blockchain_users join blockchain_transactions on blockchain_users.user_id = blockchain_transactions.from_address group by user_name having count(transaction_id) > 10;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT user_name, AVG(balance) FROM blockchain_users GROUP BY user_name HAVING AVG(balance) < (SELECT AVG(balance) FROM blockchain_users);</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select user_name, avg(balance) from blockchain_users group by user_name having avg(balance) < (select avg(balance) from blockchain_users);</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, AVG(balance) FROM blockchain_users GROUP BY user_name HAVING AVG(balance) < (SELECT AVG(balance) FROM blockchain_users);</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select user_name, avg(balance) from blockchain_users group by user_name having avg(balance) < (select avg(balance) from blockchain_users);</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT user_name, AVG(balance) FROM blockchain_users GROUP BY user_name HAVING AVG(balance) < (SELECT AVG(balance) FROM blockchain_users);</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select user_name, avg(balance) from blockchain_users group by user_name having avg(balance) < (select avg(balance) from blockchain_users);</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, AVG(balance) FROM blockchain_users GROUP BY user_name HAVING AVG(balance) < (SELECT AVG(balance) FROM blockchain_users);</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select user_name, avg(balance) from blockchain_users group by user_name having avg(balance) < (select avg(balance) from blockchain_users);</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, AVG(balance) FROM blockchain_users GROUP BY user_name HAVING AVG(balance) < (SELECT AVG(balance) FROM blockchain_users);</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select user_name, avg(balance) from blockchain_users group by user_name having avg(balance) < (select avg(balance) from blockchain_users);</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, AVG(balance) FROM blockchain_users GROUP BY user_name HAVING AVG(balance) < (SELECT AVG(balance) FROM blockchain_users);</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select user_name, avg(balance) from blockchain_users group by user_name having avg(balance) < (select avg(balance) from blockchain_users);</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT user_name, SUM(balance) FROM blockchain_users GROUP BY user_name HAVING SUM(balance) > (SELECT SUM(balance) FROM blockchain_users) / 2;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select user_name, sum(balance) from blockchain_users group by user_name having sum(balance) > (select sum(balance) from blockchain_users) / 2;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, SUM(balance) FROM blockchain_users GROUP BY user_name HAVING SUM(balance) > (SELECT SUM(balance) FROM blockchain_users) / 2;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select user_name, sum(balance) from blockchain_users group by user_name having sum(balance) > (select sum(balance) from blockchain_users) / 2;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT user_name, SUM(balance) FROM blockchain_users GROUP BY user_name HAVING SUM(balance) > (SELECT SUM(balance) FROM blockchain_users) / 2;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select user_name, sum(balance) from blockchain_users group by user_name having sum(balance) > (select sum(balance) from blockchain_users) / 2;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, SUM(balance) FROM blockchain_users GROUP BY user_name HAVING SUM(balance) > (SELECT SUM(balance) FROM blockchain_users) / 2;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select user_name, sum(balance) from blockchain_users group by user_name having sum(balance) > (select sum(balance) from blockchain_users) / 2;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, SUM(balance) FROM blockchain_users GROUP BY user_name HAVING SUM(balance) > (SELECT SUM(balance) FROM blockchain_users) / 2;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select user_name, sum(balance) from blockchain_users group by user_name having sum(balance) > (select sum(balance) from blockchain_users) / 2;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, SUM(balance) FROM blockchain_users GROUP BY user_name HAVING SUM(balance) > (SELECT SUM(balance) FROM blockchain_users) / 2;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select user_name, sum(balance) from blockchain_users group by user_name having sum(balance) > (select sum(balance) from blockchain_users) / 2;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT user_name, MIN(balance) FROM blockchain_users GROUP BY user_name HAVING MIN(balance) < (SELECT AVG(balance) FROM blockchain_users) / 2;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select user_name, min(balance) from blockchain_users group by user_name having min(balance) < (select avg(balance) from blockchain_users) / 2;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, MIN(balance) FROM blockchain_users GROUP BY user_name HAVING MIN(balance) < (SELECT AVG(balance) FROM blockchain_users) / 2;</s>
<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select user_name, min(balance) from blockchain_users group by user_name having min(balance) < (select avg(balance) from blockchain_users) / 2;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>SELECT user_name, MIN(balance) FROM blockchain_users GROUP BY user_name HAVING MIN(balance) < (SELECT AVG(balance) FROM blockchain_users) / 2;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><s>select user_name, min(balance) from blockchain_users group by user_name having min(balance) < (select avg(balance) from blockchain_users) / 2;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, MIN(balance) FROM blockchain_users GROUP BY user_name HAVING MIN(balance) < (SELECT AVG(balance) FROM blockchain_users) / 2;</s>
<t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select user_name, min(balance) from blockchain_users group by user_name having min(balance) < (select avg(balance) from blockchain_users) / 2;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, MIN(balance) FROM blockchain_users GROUP BY user_name HAVING MIN(balance) < (SELECT AVG(balance) FROM blockchain_users) / 2;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><s>select user_name, min(balance) from blockchain_users group by user_name having min(balance) < (select avg(balance) from blockchain_users) / 2;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>SELECT user_name, MIN(balance) FROM blockchain_users GROUP BY user_name HAVING MIN(balance) < (SELECT AVG(balance) FROM blockchain_users) / 2;</s>
<t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><s>select user_name, min(balance) from blockchain_users group by user_name having min(balance) < (select avg(balance) from blockchain_users) / 2;</s>
