[
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of Work', NULL, 'Proof of Stake')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of Stake', 'Proof of Work', 'Delegated Proof of Stake')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Delegated Proof of Stake', 'Proof of Stake', 'Proof of Authority')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of Authority', 'Delegated Proof of Stake', 'Proof of History')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of History', 'Proof of Authority', 'Practical Byzantine Fault Tolerance')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Practical Byzantine Fault Tolerance', 'Proof of History', 'Raft')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Raft', 'Practical Byzantine Fault Tolerance', 'HoneyBadger BFT')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('HoneyBadger BFT', 'Raft', 'Tendermint')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Tendermint', 'HoneyBadger BFT', 'Proof of Elapsed Time')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of Elapsed Time', 'Tendermint', 'Proof of Space')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of Space', 'Proof of Elapsed Time', 'Proof of Identity')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of Identity', 'Proof of Space', 'Proof of Burn')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of Burn', 'Proof of Identity', 'Proof of Authority')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of Authority', 'Proof of Burn', 'Proof of Personhood')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of Personhood', 'Proof of Authority', 'Proof of Data')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of Data', 'Proof of Personhood', 'Proof of Knowledge')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of Knowledge', 'Proof of Data', 'Proof of Stake')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of Stake', 'Proof of Knowledge', 'Practical Byzantine Fault Tolerance')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Practical Byzantine Fault Tolerance', 'Proof of Stake', 'Raft')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Raft', 'Practical Byzantine Fault Tolerance', 'HoneyBadger BFT')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of Work', NULL, 'Proof of Stake')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of Authority', NULL, 'Round-Robin')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Delegated Proof of Stake', 'Proof of Work', 'DPoS')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of Burn', 'Proof of Work', 'Proof of Activity')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of Activity', NULL, 'Proof of Burn')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Weighted Delegated Proof of Stake', NULL, 'WDPoS')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of Capacity', 'Proof of Work', 'Proof of Space-Time')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of Location', 'Proof of Work', 'Proof of Identity')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of History', 'Proof of Work', 'Proof of Time')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of Personhood', NULL, 'Proof of Humanity')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of Resource', 'Proof of Work', 'Proof of Space')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of Ownership', 'Proof of Work', 'Proof of Stake')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of Reputation', NULL, 'Proof of Authority')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of Burn', 'Proof of Work', 'Proof of Activity')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of Transaction', 'Proof of Work', 'Proof of Stake')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of Knowledge', NULL, 'Proof of Identity')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of Assignment', 'Proof of Work', 'Proof of Stake')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of Service', 'Proof of Work', 'Proof of Human')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of Impact', NULL, 'Proof of Humanity')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_history (\n  consensus_id SERIAL PRIMARY KEY,\n  consensus_algorithm VARCHAR(50) NOT NULL,\n  previous_algorithm VARCHAR(50),\n  next_algorithm VARCHAR(50) NOT NULL,\n  change_timestamp TIMESTAMP DEFAULT NOW()\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (consensus_algorithm, previous_algorithm, next_algorithm) VALUES ('Proof of Space-Time', 'Proof of Work', 'Proof of Space')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (1, 'SHA-256', '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (2, 'SHA-512', '2022-01-02');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (3, 'MD5', '2022-01-03');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (4, 'SHA-1', '2022-01-04');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (5, 'SHA-256', '2022-01-05');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (6, 'SHA-512', '2022-01-06');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (7, 'MD5', '2022-01-07');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (8, 'SHA-1', '2022-01-08');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (9, 'SHA-256', '2022-01-09');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (10, 'SHA-512', '2022-01-10');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (11, 'MD5', '2022-01-11');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (12, 'SHA-1', '2022-01-12');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (13, 'SHA-256', '2022-01-13');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (14, 'SHA-512', '2022-01-14');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (15, 'MD5', '2022-01-15');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (16, 'SHA-1', '2022-01-16');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (17, 'SHA-256', '2022-01-17');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (18, 'SHA-512', '2022-01-18');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (19, 'MD5', '2022-01-19');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (20, 'SHA-1', '2022-01-20');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (1, 'SHA-256', '2022-10-01');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (2, 'SHA-384', '2022-10-05');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (3, 'SHA-512', '2022-10-10');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (4, 'MD5', '2022-10-15');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (5, 'SHA-256', '2022-10-20');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (6, 'SHA-384', '2022-10-25');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (7, 'SHA-512', '2022-10-30');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (8, 'MD5', '2022-11-01');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (9, 'SHA-256', '2022-11-05');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (10, 'SHA-384', '2022-11-10');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (11, 'SHA-512', '2022-11-15');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (12, 'MD5', '2022-11-20');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (13, 'SHA-256', '2022-11-25');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (14, 'SHA-384', '2022-11-30');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (15, 'SHA-512', '2022-12-01');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (16, 'MD5', '2022-12-05');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (17, 'SHA-256', '2022-12-10');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (18, 'SHA-384', '2022-12-15');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (19, 'SHA-512', '2022-12-20');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_history (\n    id INT PRIMARY KEY,\n    algorithm VARCHAR(50) NOT NULL,\n    change_date DATE NOT NULL\n);\n\nCREATE TABLE audit_log (\n    log_id SERIAL PRIMARY KEY,\n    event_timestamp TIMESTAMP NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_history (id, algorithm, change_date) VALUES (20, 'MD5', '2022-12-25');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consesus_algorithm_changes (block_id, algorithm_name, from_version, to_version) VALUES (1, 'Proof of Work', NULL, 'Version 1.0')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consesus_algorithm_changes (block_id, algorithm_name, from_version, to_version) VALUES (2, 'Proof of Stake', 'Version 2.0', 'Version 3.0')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consesus_algorithm_changes (block_id, algorithm_name, from_version, to_version) VALUES (3, 'Delegated Proof of Stake', 'Version 1.0', 'Version 2.0')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consesus_algorithm_changes (block_id, algorithm_name, from_version, to_version) VALUES (4, 'Proof of Authority', NULL, 'Version 1.0')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consesus_algorithm_changes (block_id, algorithm_name, from_version, to_version) VALUES (5, 'Proof of Time', NULL, 'Version 1.0')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO audit_trail (event_id, event_timestamp, event_description) VALUES (1, '2022-07-20 08:00:00', 'System upgrade initiated')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO audit_trail (event_id, event_timestamp, event_description) VALUES (2, '2022-07-20 09:00:00', 'Data backup completed')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO audit_trail (event_id, event_timestamp, event_description) VALUES (3, '2022-07-20 10:00:00', 'Database migration started')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO audit_trail (event_id, event_timestamp, event_description) VALUES (4, '2022-07-20 10:30:00', 'Database migration completed')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO audit_trail (event_id, event_timestamp, event_description) VALUES (5, '2022-07-21 08:00:00', 'System maintenance scheduled')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO block_transactions (transaction_id, block_id, transaction_data) VALUES (1, 1, 'Transaction data 1')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO block_transactions (transaction_id, block_id, transaction_data) VALUES (2, 2, 'Transaction data 2')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO block_transactions (transaction_id, block_id, transaction_data) VALUES (3, 3, 'Transaction data 3')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO block_transactions (transaction_id, block_id, transaction_data) VALUES (4, 4, 'Transaction data 4')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO block_transactions (transaction_id, block_id, transaction_data) VALUES (5, 5, 'Transaction data 5')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consesus_algorithm_changes (block_id, algorithm_name, from_version, to_version) VALUES (6, 'Proof of Authority', 'Version 1.0', 'Version 2.0')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consesus_algorithm_changes (block_id, algorithm_name, from_version, to_version) VALUES (7, 'Proof of Work', 'Version 2.0', 'Version 3.0')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consesus_algorithm_changes (block_id, algorithm_name, from_version, to_version) VALUES (8, 'Proof of Stake', 'Version 1.0', 'Version 2.0')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consesus_algorithm_changes (block_id, algorithm_name, from_version, to_version) VALUES (9, 'Delegated Proof of Stake', 'Version 2.0', 'Version 3.0')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consesus_algorithm_changes (block_id, algorithm_name, from_version, to_version) VALUES (10, 'Proof of Time', 'Version 1.0', 'Version 2.0')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consesus_algorithm_changes VALUES (1, 'PoW', NULL, 'PoW-2.0')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO audit_trail VALUES (1, '2022-10-15 08:00:00', 'Block 1 added to blockchain')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO block_transactions VALUES (1, 1, 'Transaction 1 data')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consesus_algorithm_changes VALUES (2, 'PoS', 'PoS-1.0', 'PoS-2.0')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO audit_trail VALUES (2, '2022-10-15 09:00:00', 'Block 2 added to blockchain')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO block_transactions VALUES (2, 2, 'Transaction 2 data')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consesus_algorithm_changes VALUES (3, 'DPoS', 'DPoS-1.0', 'DPoS-2.0')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO audit_trail VALUES (3, '2022-10-15 10:00:00', 'Block 3 added to blockchain')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO block_transactions VALUES (3, 3, 'Transaction 3 data')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consesus_algorithm_changes VALUES (4, 'PoA', 'PoA-1.0', 'PoA-2.0')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO audit_trail VALUES (4, '2022-10-15 11:00:00', 'Block 4 added to blockchain')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO block_transactions VALUES (4, 4, 'Transaction 4 data')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consesus_algorithm_changes VALUES (5, 'dBFT', 'dBFT-1.0', 'dBFT-2.0')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO audit_trail VALUES (5, '2022-10-15 12:00:00', 'Block 5 added to blockchain')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO block_transactions VALUES (5, 5, 'Transaction 5 data')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consesus_algorithm_changes VALUES (6, 'PoET', 'PoET-1.0', 'PoET-2.0')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO audit_trail VALUES (6, '2022-10-15 13:00:00', 'Block 6 added to blockchain')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO block_transactions VALUES (6, 6, 'Transaction 6 data')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consesus_algorithm_changes VALUES (7, 'Raft', 'Raft-1.0', 'Raft-2.0')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO audit_trail VALUES (7, '2022-10-15 14:00:00', 'Block 7 added to blockchain')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consesus_algorithm_changes (\n  block_id INT PRIMARY KEY,\n  algorithm_name TEXT NOT NULL,\n  from_version TEXT,\n  to_version TEXT NOT NULL\n);\n\nCREATE TABLE audit_trail (\n  event_id INT PRIMARY KEY,\n  event_timestamp TIMESTAMP NOT NULL,\n  event_description TEXT\n);\n\nCREATE TABLE block_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_id INT REFERENCES blockchain_consesus_algorithm_changes(block_id),\n  transaction_data TEXT\n);\n\n### STATEMENT\n\nINSERT INTO block_transactions VALUES (7, 7, 'Transaction 7 data')",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);\n\nCREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);\n\nCREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);\n\nCREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_algorithm_changes (id, algorithm_name, change_date, change_description) VALUES (1, 'Proof of Work', '2022-01-01', 'Implemented PoW consensus');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);\n\nCREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);\n\nCREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);\n\nCREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_algorithm_changes (id, algorithm_name, change_date, change_description) VALUES (2, 'Proof of Stake', '2022-02-15', 'Switched to PoS algorithm');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);\n\nCREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);\n\nCREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);\n\nCREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_algorithm_changes (id, algorithm_name, change_date, change_description) VALUES (3, 'Delegated Proof of Stake', '2022-03-10', 'Adopted DPoS for consensus');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);\n\nCREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);\n\nCREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);\n\nCREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_algorithm_changes (id, algorithm_name, change_date, change_description) VALUES (4, 'Proof of Authority', '2022-05-20', 'Transitioned to PoA mechanism');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);\n\nCREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);\n\nCREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);\n\nCREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_algorithm_changes (id, algorithm_name, change_date, change_description) VALUES (5, 'Raft Consensus', '2022-07-30', 'Introduced Raft protocol for consensus');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);\n\nCREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);\n\nCREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);\n\nCREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_algorithm_changes (id, algorithm_name, change_date, change_description) VALUES (6, 'Proof of Elapsed Time', '2022-09-05', 'Implemented PoET mechanism');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);\n\nCREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);\n\nCREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);\n\nCREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_algorithm_changes (id, algorithm_name, change_date, change_description) VALUES (7, 'Practical Byzantine Fault Tolerance', '2022-11-10', 'Adopted PBFT consensus for scalability');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);\n\nCREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);\n\nCREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);\n\nCREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_algorithm_changes (id, algorithm_name, change_date, change_description) VALUES (8, 'Directed Acyclic Graph', '2022-12-25', 'Switched to DAG structure for consensus');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);\n\nCREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);\n\nCREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);\n\nCREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_algorithm_changes (id, algorithm_name, change_date, change_description) VALUES (9, 'Proof of Weight', '2023-02-15', 'Introduced PoWeight as consensus algorithm');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);\n\nCREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);\n\nCREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);\n\nCREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_algorithm_changes (id, algorithm_name, change_date, change_description) VALUES (10, 'Simplified Byzantine Fault Tolerance', '2023-04-01', 'Implemented SBFT for better fault tolerance');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);\n\nCREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);\n\nCREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);\n\nCREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_algorithm_changes (id, algorithm_name, change_date, change_description) VALUES (11, 'Proof of Burn', '2023-07-10', 'Adopted PoB mechanism for consensus');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);\n\nCREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);\n\nCREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);\n\nCREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_algorithm_changes (id, algorithm_name, change_date, change_description) VALUES (12, 'Proof of Importance', '2023-09-20', 'Switched to PoI algorithm for rewards distribution');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);\n\nCREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);\n\nCREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);\n\nCREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_algorithm_changes (id, algorithm_name, change_date, change_description) VALUES (13, 'Proof of Space-Time', '2023-11-25', 'Introduced PoST for consensus mechanism');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);\n\nCREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);\n\nCREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);\n\nCREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_algorithm_changes (id, algorithm_name, change_date, change_description) VALUES (14, 'Honey Badger BFT', '2024-03-01', 'Adopted HoneyBadgerBFT for Byzantine fault tolerance');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);\n\nCREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);\n\nCREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);\n\nCREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_algorithm_changes (id, algorithm_name, change_date, change_description) VALUES (15, 'Tendermint', '2024-05-10', 'Implemented Tendermint protocol for consensus');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);\n\nCREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);\n\nCREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);\n\nCREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_algorithm_changes (id, algorithm_name, change_date, change_description) VALUES (16, 'Proof of Authority (Clique)', '2024-08-15', 'Transitioned to PoA (Clique) algorithm');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);\n\nCREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);\n\nCREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);\n\nCREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_algorithm_changes (id, algorithm_name, change_date, change_description) VALUES (17, 'Proof of Activity', '2024-10-30', 'Introduced PoA mechanism for hybrid consensus');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);\n\nCREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);\n\nCREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);\n\nCREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_algorithm_changes (id, algorithm_name, change_date, change_description) VALUES (18, 'Stellar Consensus Protocol', '2025-01-01', 'Adopted SCP for decentralized consensus');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);\n\nCREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);\n\nCREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);\n\nCREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_algorithm_changes (id, algorithm_name, change_date, change_description) VALUES (19, 'Sovereign Proof of Stake', '2025-03-15', 'Switched to SPoS for governance model');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);\n\nCREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);\n\nCREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);\n\nCREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_algorithm_changes (id, algorithm_name, change_date, change_description) VALUES (20, 'Ouroboros', '2025-06-20', 'Implemented Ouroboros for secure proof of stake');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);\n\nCREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);\n\nCREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);\n\nCREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_algorithm_changes (id, algorithm_name, change_date, change_description) VALUES (1, 'Proof of Stake', '2022-01-01', 'Upgrade to PoS consensus algorithm');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);\n\nCREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);\n\nCREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);\n\nCREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_algorithm_changes (id, algorithm_name, change_date, change_description) VALUES (2, 'Proof of Work', '2022-03-15', 'Downgrade to PoW consensus algorithm');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);\n\nCREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);\n\nCREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);\n\nCREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nINSERT INTO blockchain_nodes (node_id, node_name, ip_address, node_type) VALUES ('550e8400-e29b-41d4-a716-446655440000', 'Node 1', '192.168.1.1', 'Main Node');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);\n\nCREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);\n\nCREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);\n\nCREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nINSERT INTO blockchain_nodes (node_id, node_name, ip_address, node_type) VALUES ('287ed6a5-6621-4af3-8c68-9ebf3a3591fa', 'Node 2', '192.168.1.2', 'Backup Node');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);\n\nCREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);\n\nCREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);\n\nCREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (algorithm_id, node_id, activation_date, deactivation_date) VALUES (1, '550e8400-e29b-41d4-a716-446655440000', '2022-01-01', '2022-02-01');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);\n\nCREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);\n\nCREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);\n\nCREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (algorithm_id, node_id, activation_date, deactivation_date) VALUES (2, '550e8400-e29b-41d4-a716-446655440000', '2022-03-15', NULL);",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);\n\nCREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);\n\nCREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);\n\nCREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (algorithm_id, node_id, activation_date, deactivation_date) VALUES (1, '287ed6a5-6621-4af3-8c68-9ebf3a3591fa', '2022-01-01', '2022-02-01');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);\n\nCREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);\n\nCREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);\n\nCREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nINSERT INTO blockchain_consensus_history (algorithm_id, node_id, activation_date, deactivation_date) VALUES (2, '287ed6a5-6621-4af3-8c68-9ebf3a3591fa', '2022-03-15', NULL);",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);\n\nCREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);\n\nCREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);\n\nCREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nINSERT INTO blockchain_audit_log (action_type, action_description, action_timestamp) VALUES ('Algorithm Upgrade', 'Proof of Stake activation', '2022-01-01 12:00:00');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_consensus_algorithm_changes ( \n    id INT PRIMARY KEY, \n    algorithm_name TEXT NOT NULL, \n    change_date DATE NOT NULL, \n    change_description TEXT \n);\n\nCREATE TABLE blockchain_nodes ( \n    node_id UUID PRIMARY KEY, \n    node_name TEXT NOT NULL, \n    ip_address INET NOT NULL, \n    node_type TEXT \n);\n\nCREATE TABLE blockchain_consensus_history ( \n    history_id SERIAL PRIMARY KEY, \n    algorithm_id INT REFERENCES blockchain_consensus_algorithm_changes(id), \n    node_id UUID REFERENCES blockchain_nodes(node_id), \n    activation_date DATE NOT NULL, \n    deactivation_date DATE \n);\n\nCREATE TABLE blockchain_audit_log ( \n    log_id SERIAL PRIMARY KEY, \n    action_type TEXT NOT NULL, \n    action_description TEXT, \n    action_timestamp TIMESTAMP NOT NULL \n);\n\n### STATEMENT\n\nINSERT INTO blockchain_audit_log (action_type, action_description, action_timestamp) VALUES ('Algorithm Downgrade', 'Proof of Work deactivation', '2022-03-15 15:30:00');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO consensus_algorithm_history (id, algorithm_name, change_date, change_description) VALUES (1, 'PoW', '2022-01-01', 'Switched to PoW algorithm');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO consensus_algorithm_history (id, algorithm_name, change_date, change_description) VALUES (2, 'PoS', '2022-02-15', 'Upgraded to PoS algorithm');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO consensus_algorithm_history (id, algorithm_name, change_date, change_description) VALUES (3, 'DPoS', '2022-03-20', 'Adopted DPoS consensus');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO consensus_algorithm_history (id, algorithm_name, change_date) VALUES (4, 'PoA', '2022-04-10');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO consensus_algorithm_history (id, algorithm_name, change_date, change_description) VALUES (5, 'dBFT', '2022-05-05', 'Implemented dBFT mechanism');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO consensus_block (block_id, block_hash, algorithm_id, timestamp) VALUES (1, 'HASH1', 1, '2022-01-01 12:00:00');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO consensus_block (block_id, block_hash, algorithm_id, timestamp) VALUES (2, 'HASH2', 2, '2022-02-15 18:30:00');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO consensus_block (block_id, block_hash, algorithm_id, timestamp) VALUES (3, 'HASH3', 3, '2022-03-20 08:45:00');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO consensus_block (block_id, block_hash, algorithm_id, timestamp) VALUES (4, 'HASH4', 4, '2022-04-10 16:20:00');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO consensus_block (block_id, block_hash, algorithm_id, timestamp) VALUES (5, 'HASH5', 5, '2022-05-05 10:10:00');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO validator (validator_id, validator_name, public_key) VALUES (1, 'Validator1', 'PUBKEY1');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO validator (validator_id, validator_name, public_key) VALUES (2, 'Validator2', 'PUBKEY2');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO validator (validator_id, validator_name, public_key) VALUES (3, 'Validator3', 'PUBKEY3');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO validator (validator_id, validator_name, public_key) VALUES (4, 'Validator4', 'PUBKEY4');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO validator (validator_id, validator_name, public_key) VALUES (5, 'Validator5', 'PUBKEY5');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO validator_history (history_id, validator_id, change_date, change_description) VALUES (1, 1, '2022-01-01', 'Validator added');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO validator_history (history_id, validator_id, change_date, change_description) VALUES (2, 2, '2022-02-15', 'Validator updated info');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO validator_history (history_id, validator_id, change_date, change_description) VALUES (3, 3, '2022-03-20', 'Validator removed');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO validator_history (history_id, validator_id, change_date) VALUES (4, 4, '2022-04-10');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO validator_history (history_id, validator_id, change_date, change_description) VALUES (5, 5, '2022-05-05', 'Validator status changed');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO block_validator (block_id, validator_id) VALUES (1, 1);",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO block_validator (block_id, validator_id) VALUES (2, 2);",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO block_validator (block_id, validator_id) VALUES (3, 3);",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO block_validator (block_id, validator_id) VALUES (4, 4);",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO block_validator (block_id, validator_id) VALUES (5, 5);",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO consensus_algorithm_history (id, algorithm_name, change_date, change_description) VALUES (1, 'Proof of Work', '2021-01-10', 'Initial implementation');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO consensus_block (block_id, block_hash, algorithm_id, timestamp) VALUES (1, 'abcd1234', 1, '2021-01-10 12:00:00');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO validator (validator_id, validator_name, public_key) VALUES (1, 'Validator1', 'public_key_1');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO validator_history (history_id, validator_id, change_date, change_description) VALUES (1, 1, '2021-01-10', 'Validator added');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO block_validator (block_id, validator_id) VALUES (1, 1);",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO consensus_algorithm_history (id, algorithm_name, change_date, change_description) VALUES (2, 'Proof of Authority', '2021-02-15', 'Upgrade to PoA consensus');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO consensus_block (block_id, block_hash, algorithm_id, timestamp) VALUES (2, 'efgh5678', 2, '2021-02-15 10:00:00');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO validator (validator_id, validator_name, public_key) VALUES (2, 'Validator2', 'public_key_2');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO validator_history (history_id, validator_id, change_date, change_description) VALUES (2, 2, '2021-02-15', 'Validator added');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO block_validator (block_id, validator_id) VALUES (2, 2);",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO consensus_algorithm_history (id, algorithm_name, change_date, change_description) VALUES (3, 'Proof of Stake', '2021-03-20', 'Transition to PoS algorithm');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO consensus_block (block_id, block_hash, algorithm_id, timestamp) VALUES (3, 'ijkl9012', 3, '2021-03-20 08:00:00');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO validator (validator_id, validator_name, public_key) VALUES (3, 'Validator3', 'public_key_3');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO validator_history (history_id, validator_id, change_date, change_description) VALUES (3, 3, '2021-03-20', 'Validator added');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO block_validator (block_id, validator_id) VALUES (3, 3);",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO consensus_algorithm_history (id, algorithm_name, change_date, change_description) VALUES (4, 'Delegated Proof of Stake', '2021-04-25', 'Introducing DPoS for scalability');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO consensus_block (block_id, block_hash, algorithm_id, timestamp) VALUES (4, 'mnop3456', 4, '2021-04-25 14:00:00');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO validator (validator_id, validator_name, public_key) VALUES (4, 'Validator4', 'public_key_4');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO validator_history (history_id, validator_id, change_date, change_description) VALUES (4, 4, '2021-04-25', 'Validator added');",
  "### TABLEDATA\n\nCREATE TABLE consensus_algorithm_history (\n    id INT PRIMARY KEY,\n    algorithm_name TEXT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT\n);\n\nCREATE TABLE consensus_block (\n    block_id INT PRIMARY KEY,\n    block_hash TEXT NOT NULL,\n    algorithm_id INT NOT NULL,\n    timestamp TIMESTAMP NOT NULL,\n    FOREIGN KEY (algorithm_id) REFERENCES consensus_algorithm_history(id)\n);\n\nCREATE TABLE validator (\n    validator_id INT PRIMARY KEY,\n    validator_name TEXT NOT NULL,\n    public_key TEXT NOT NULL\n);\n\nCREATE TABLE validator_history (\n    history_id INT PRIMARY KEY,\n    validator_id INT NOT NULL,\n    change_date DATE NOT NULL,\n    change_description TEXT,\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\nCREATE TABLE block_validator (\n    block_id INT NOT NULL,\n    validator_id INT NOT NULL,\n    PRIMARY KEY (block_id, validator_id),\n    FOREIGN KEY (block_id) REFERENCES consensus_block(block_id),\n    FOREIGN KEY (validator_id) REFERENCES validator(validator_id)\n);\n\n### STATEMENT\n\nINSERT INTO block_validator (block_id, validator_id) VALUES (4, 4);"
]