<t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><stat>CREATE TABLE blockchain_transactions (transaction_id INT PRIMARY KEY, block_id INT, from_address VARCHAR(255), to_address VARCHAR(255), amount DECIMAL(10, 2), timestamp TIMESTAMP);</stat><divider><t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><stat>create table blockchain_transactions (transaction_id int primary key, block_id int, from_address varchar(255), to_address varchar(255), amount decimal(10, 2), timestamp timestamp);</stat><divider><t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><stat>CREATE TABLE blockchain_transactions (transaction_id INT PRIMARY KEY, block_id INT, from_address VARCHAR(255), to_address VARCHAR(255), amount DECIMAL(10, 2), timestamp TIMESTAMP);</stat><divider><t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><stat>create table blockchain_transactions (transaction_id int primary key, block_id int, from_address varchar(255), to_address varchar(255), amount decimal(10, 2), timestamp timestamp);</stat><divider><t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><stat>CREATE TABLE blockchain_transactions (transaction_id INT PRIMARY KEY, block_id INT, from_address VARCHAR(255), to_address VARCHAR(255), amount DECIMAL(10, 2), timestamp TIMESTAMP);</stat><divider><t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><stat>create table blockchain_transactions (transaction_id int primary key, block_id int, from_address varchar(255), to_address varchar(255), amount decimal(10, 2), timestamp timestamp);</stat><divider><t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><stat>CREATE TABLE blockchain_transactions (transaction_id INT PRIMARY KEY, block_id INT, from_address VARCHAR(255), to_address VARCHAR(255), amount DECIMAL(10, 2), timestamp TIMESTAMP);</stat><divider><t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><stat>create table blockchain_transactions (transaction_id int primary key, block_id int, from_address varchar(255), to_address varchar(255), amount decimal(10, 2), timestamp timestamp);</stat><divider><t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><stat>CREATE TABLE blockchain_transactions (transaction_id INT PRIMARY KEY, block_id INT, from_address VARCHAR(255), to_address VARCHAR(255), amount DECIMAL(10, 2), timestamp TIMESTAMP);</stat><divider><t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><stat>create table blockchain_transactions (transaction_id int primary key, block_id int, from_address varchar(255), to_address varchar(255), amount decimal(10, 2), timestamp timestamp);</stat><divider><t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><stat>CREATE TABLE blockchain_transactions (transaction_id INT PRIMARY KEY, block_id INT, from_address VARCHAR(255), to_address VARCHAR(255), amount DECIMAL(10, 2), timestamp TIMESTAMP);</stat><divider><t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><stat>create table blockchain_transactions (transaction_id int primary key, block_id int, from_address varchar(255), to_address varchar(255), amount decimal(10, 2), timestamp timestamp);</stat><divider><t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><stat>CREATE TABLE blockchain_blocks (block_id INT PRIMARY KEY, block_hash VARCHAR(255), previous_block_hash VARCHAR(255), timestamp TIMESTAMP);</stat><divider><t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><stat>create table blockchain_blocks (block_id int primary key, block_hash varchar(255), previous_block_hash varchar(255), timestamp timestamp);</stat><divider><t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><stat>CREATE TABLE blockchain_blocks (block_id INT PRIMARY KEY, block_hash VARCHAR(255), previous_block_hash VARCHAR(255), timestamp TIMESTAMP);</stat><divider><t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><stat>create table blockchain_blocks (block_id int primary key, block_hash varchar(255), previous_block_hash varchar(255), timestamp timestamp);</stat><divider><t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><stat>CREATE TABLE blockchain_blocks (block_id INT PRIMARY KEY, block_hash VARCHAR(255), previous_block_hash VARCHAR(255), timestamp TIMESTAMP);</stat><divider><t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><stat>create table blockchain_blocks (block_id int primary key, block_hash varchar(255), previous_block_hash varchar(255), timestamp timestamp);</stat><divider><t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><stat>CREATE TABLE blockchain_blocks (block_id INT PRIMARY KEY, block_hash VARCHAR(255), previous_block_hash VARCHAR(255), timestamp TIMESTAMP);</stat><divider><t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><stat>create table blockchain_blocks (block_id int primary key, block_hash varchar(255), previous_block_hash varchar(255), timestamp timestamp);</stat><divider><t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><stat>CREATE TABLE blockchain_blocks (block_id INT PRIMARY KEY, block_hash VARCHAR(255), previous_block_hash VARCHAR(255), timestamp TIMESTAMP);</stat><divider><t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><stat>create table blockchain_blocks (block_id int primary key, block_hash varchar(255), previous_block_hash varchar(255), timestamp timestamp);</stat><divider><t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><stat>CREATE TABLE blockchain_blocks (block_id INT PRIMARY KEY, block_hash VARCHAR(255), previous_block_hash VARCHAR(255), timestamp TIMESTAMP);</stat><divider><t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><stat>create table blockchain_blocks (block_id int primary key, block_hash varchar(255), previous_block_hash varchar(255), timestamp timestamp);</stat><divider><t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><stat>CREATE TABLE blockchain_users (user_id INT PRIMARY KEY, user_name VARCHAR(255), balance DECIMAL(10, 2), registration_date TIMESTAMP, last_login TIMESTAMP);</stat><divider><t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><stat>create table blockchain_users (user_id int primary key, user_name varchar(255), balance decimal(10, 2), registration_date timestamp, last_login timestamp);</stat><divider><t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><stat>CREATE TABLE blockchain_users (user_id INT PRIMARY KEY, user_name VARCHAR(255), balance DECIMAL(10, 2), registration_date TIMESTAMP, last_login TIMESTAMP);</stat><divider><t>CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><stat>create table blockchain_users (user_id int primary key, user_name varchar(255), balance decimal(10, 2), registration_date timestamp, last_login timestamp);</stat><divider><t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><stat>CREATE TABLE blockchain_users (user_id INT PRIMARY KEY, user_name VARCHAR(255), balance DECIMAL(10, 2), registration_date TIMESTAMP, last_login TIMESTAMP);</stat><divider><t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);
</t><stat>create table blockchain_users (user_id int primary key, user_name varchar(255), balance decimal(10, 2), registration_date timestamp, last_login timestamp);</stat><divider><t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><stat>CREATE TABLE blockchain_users (user_id INT PRIMARY KEY, user_name VARCHAR(255), balance DECIMAL(10, 2), registration_date TIMESTAMP, last_login TIMESTAMP);</stat><divider><t>CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><stat>create table blockchain_users (user_id int primary key, user_name varchar(255), balance decimal(10, 2), registration_date timestamp, last_login timestamp);</stat><divider><t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><stat>CREATE TABLE blockchain_users (user_id INT PRIMARY KEY, user_name VARCHAR(255), balance DECIMAL(10, 2), registration_date TIMESTAMP, last_login TIMESTAMP);</stat><divider><t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);
</t><stat>create table blockchain_users (user_id int primary key, user_name varchar(255), balance decimal(10, 2), registration_date timestamp, last_login timestamp);</stat><divider><t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><stat>CREATE TABLE blockchain_users (user_id INT PRIMARY KEY, user_name VARCHAR(255), balance DECIMAL(10, 2), registration_date TIMESTAMP, last_login TIMESTAMP);</stat><divider><t>CREATE TABLE blockchain_users (
    user_id INT PRIMARY KEY,
    user_name VARCHAR(255),
    balance DECIMAL(10, 2),
    registration_date TIMESTAMP,
    last_login TIMESTAMP
);


CREATE TABLE blockchain_blocks (
    block_id INT PRIMARY KEY,
    block_hash VARCHAR(255),
    previous_block_hash VARCHAR(255),
    timestamp TIMESTAMP
);


CREATE TABLE blockchain_transactions (
    transaction_id INT PRIMARY KEY,
    block_id INT,
    from_address VARCHAR(255),
    to_address VARCHAR(255),
    amount DECIMAL(10, 2),
    timestamp TIMESTAMP
);
</t><stat>create table blockchain_users (user_id int primary key, user_name varchar(255), balance decimal(10, 2), registration_date timestamp, last_login timestamp);</stat>