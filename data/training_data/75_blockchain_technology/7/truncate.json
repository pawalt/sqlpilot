[
  "### TABLEDATA\n\nCREATE TABLE nft_ownership_history (\n    nft_id UUID,\n    owner_address VARCHAR(255),\n    previous_owner_address VARCHAR(255),\n    transfer_timestamp TIMESTAMP,\n    PRIMARY KEY (nft_id, transfer_timestamp)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE nft_ownership_history;",
  "### TABLEDATA\n\nCREATE TABLE nft_ownership_history (\n    nft_id UUID,\n    owner_address VARCHAR(255),\n    previous_owner_address VARCHAR(255),\n    transfer_timestamp TIMESTAMP,\n    PRIMARY KEY (nft_id, transfer_timestamp)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE nft_ownership_history CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE nft_ownership_history (\n    nft_id UUID,\n    owner_address VARCHAR(255),\n    previous_owner_address VARCHAR(255),\n    transfer_timestamp TIMESTAMP,\n    PRIMARY KEY (nft_id, transfer_timestamp)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE nft_ownership_history RESTART IDENTITY;",
  "### TABLEDATA\n\nCREATE TABLE nft_ownership_history (\n    nft_id UUID,\n    owner_address VARCHAR(255),\n    previous_owner_address VARCHAR(255),\n    transfer_timestamp TIMESTAMP,\n    PRIMARY KEY (nft_id, transfer_timestamp)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE nft_ownership_history;",
  "### TABLEDATA\n\nCREATE TABLE nft_ownership_history (\n    nft_id UUID,\n    owner_address VARCHAR(255),\n    previous_owner_address VARCHAR(255),\n    transfer_timestamp TIMESTAMP,\n    PRIMARY KEY (nft_id, transfer_timestamp)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE nft_ownership_history CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE nft_ownership_history (\n    nft_id UUID,\n    owner_address VARCHAR(255),\n    previous_owner_address VARCHAR(255),\n    transfer_timestamp TIMESTAMP,\n    PRIMARY KEY (nft_id, transfer_timestamp)\n)\n\n### STATEMENT\n\nTRUNCATE TABLE nft_ownership_history RESTART IDENTITY;",
  "### TABLEDATA\n\nCREATE TABLE NFT_Ownership_History (\n  NFT_ID UUID PRIMARY KEY,\n  Owner_ID UUID,\n  Previous_Owner_ID UUID,\n  Timestamp TIMESTAMP\n);\n\n\nCREATE TABLE NFT_Metadata (\n  NFT_ID UUID PRIMARY KEY,\n  Token_Name VARCHAR(255),\n  Token_Description TEXT,\n  Token_Image_URL VARCHAR(255)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE NFT_Ownership_History;",
  "### TABLEDATA\n\nCREATE TABLE NFT_Ownership_History (\n  NFT_ID UUID PRIMARY KEY,\n  Owner_ID UUID,\n  Previous_Owner_ID UUID,\n  Timestamp TIMESTAMP\n);\n\n\nCREATE TABLE NFT_Metadata (\n  NFT_ID UUID PRIMARY KEY,\n  Token_Name VARCHAR(255),\n  Token_Description TEXT,\n  Token_Image_URL VARCHAR(255)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE NFT_Metadata;",
  "### TABLEDATA\n\nCREATE TABLE NFT_Ownership_History (\n  NFT_ID UUID PRIMARY KEY,\n  Owner_ID UUID,\n  Previous_Owner_ID UUID,\n  Timestamp TIMESTAMP\n);\n\n\nCREATE TABLE NFT_Metadata (\n  NFT_ID UUID PRIMARY KEY,\n  Token_Name VARCHAR(255),\n  Token_Description TEXT,\n  Token_Image_URL VARCHAR(255)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE NFT_Ownership_History;",
  "### TABLEDATA\n\nCREATE TABLE NFT_Ownership_History (\n  NFT_ID UUID PRIMARY KEY,\n  Owner_ID UUID,\n  Previous_Owner_ID UUID,\n  Timestamp TIMESTAMP\n);\n\n\nCREATE TABLE NFT_Metadata (\n  NFT_ID UUID PRIMARY KEY,\n  Token_Name VARCHAR(255),\n  Token_Description TEXT,\n  Token_Image_URL VARCHAR(255)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE NFT_Metadata;",
  "### TABLEDATA\n\nCREATE TABLE NFT_Ownership_History (\n  NFT_ID UUID PRIMARY KEY,\n  Owner_ID UUID,\n  Previous_Owner_ID UUID,\n  Timestamp TIMESTAMP\n);\n\n\nCREATE TABLE NFT_Metadata (\n  NFT_ID UUID PRIMARY KEY,\n  Token_Name VARCHAR(255),\n  Token_Description TEXT,\n  Token_Image_URL VARCHAR(255)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE NFT_Ownership_History, NFT_Metadata;",
  "### TABLEDATA\n\nCREATE TABLE NFTOwners (\n    id serial PRIMARY KEY,\n    owner_id INT NOT NULL,\n    nft_id INT NOT NULL,\n    owned_since TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE NFTs (\n    nft_id serial PRIMARY KEY,\n    nft_name VARCHAR(255) NOT NULL,\n    creator_id INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Owners (\n    owner_id serial PRIMARY KEY,\n    owner_name VARCHAR(255) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE NFTOwners;",
  "### TABLEDATA\n\nCREATE TABLE NFTOwners (\n    id serial PRIMARY KEY,\n    owner_id INT NOT NULL,\n    nft_id INT NOT NULL,\n    owned_since TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE NFTs (\n    nft_id serial PRIMARY KEY,\n    nft_name VARCHAR(255) NOT NULL,\n    creator_id INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Owners (\n    owner_id serial PRIMARY KEY,\n    owner_name VARCHAR(255) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE NFTs;",
  "### TABLEDATA\n\nCREATE TABLE NFTOwners (\n    id serial PRIMARY KEY,\n    owner_id INT NOT NULL,\n    nft_id INT NOT NULL,\n    owned_since TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE NFTs (\n    nft_id serial PRIMARY KEY,\n    nft_name VARCHAR(255) NOT NULL,\n    creator_id INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Owners (\n    owner_id serial PRIMARY KEY,\n    owner_name VARCHAR(255) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE Owners;",
  "### TABLEDATA\n\nCREATE TABLE NFTOwners (\n    id serial PRIMARY KEY,\n    owner_id INT NOT NULL,\n    nft_id INT NOT NULL,\n    owned_since TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE NFTs (\n    nft_id serial PRIMARY KEY,\n    nft_name VARCHAR(255) NOT NULL,\n    creator_id INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Owners (\n    owner_id serial PRIMARY KEY,\n    owner_name VARCHAR(255) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE NFTOwners;",
  "### TABLEDATA\n\nCREATE TABLE NFTOwners (\n    id serial PRIMARY KEY,\n    owner_id INT NOT NULL,\n    nft_id INT NOT NULL,\n    owned_since TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE NFTs (\n    nft_id serial PRIMARY KEY,\n    nft_name VARCHAR(255) NOT NULL,\n    creator_id INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Owners (\n    owner_id serial PRIMARY KEY,\n    owner_name VARCHAR(255) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE NFTs;",
  "### TABLEDATA\n\nCREATE TABLE NFTOwners (\n    id serial PRIMARY KEY,\n    owner_id INT NOT NULL,\n    nft_id INT NOT NULL,\n    owned_since TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE NFTs (\n    nft_id serial PRIMARY KEY,\n    nft_name VARCHAR(255) NOT NULL,\n    creator_id INT NOT NULL,\n    created_at TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE Owners (\n    owner_id serial PRIMARY KEY,\n    owner_name VARCHAR(255) NOT NULL,\n    country VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE Owners;",
  "### TABLEDATA\n\nCREATE TABLE NFTTokenOwners (\n    token_id INT PRIMARY KEY,\n    owner_address VARCHAR(255),\n    ownership_start_date DATE,\n    ownership_end_date DATE\n);\n\nCREATE TABLE Owners (\n    owner_address VARCHAR(255) PRIMARY KEY,\n    owner_name VARCHAR(255),\n    owner_email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    token_id INT,\n    buyer_address VARCHAR(255),\n    seller_address VARCHAR(255),\n    transaction_date DATE\n);\n\nCREATE TABLE TokenMetadata (\n    token_id INT PRIMARY KEY,\n    token_name VARCHAR(255),\n    token_description TEXT,\n    token_image_url TEXT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE NFTTokenOwners;",
  "### TABLEDATA\n\nCREATE TABLE NFTTokenOwners (\n    token_id INT PRIMARY KEY,\n    owner_address VARCHAR(255),\n    ownership_start_date DATE,\n    ownership_end_date DATE\n);\n\nCREATE TABLE Owners (\n    owner_address VARCHAR(255) PRIMARY KEY,\n    owner_name VARCHAR(255),\n    owner_email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    token_id INT,\n    buyer_address VARCHAR(255),\n    seller_address VARCHAR(255),\n    transaction_date DATE\n);\n\nCREATE TABLE TokenMetadata (\n    token_id INT PRIMARY KEY,\n    token_name VARCHAR(255),\n    token_description TEXT,\n    token_image_url TEXT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE Owners;",
  "### TABLEDATA\n\nCREATE TABLE NFTTokenOwners (\n    token_id INT PRIMARY KEY,\n    owner_address VARCHAR(255),\n    ownership_start_date DATE,\n    ownership_end_date DATE\n);\n\nCREATE TABLE Owners (\n    owner_address VARCHAR(255) PRIMARY KEY,\n    owner_name VARCHAR(255),\n    owner_email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    token_id INT,\n    buyer_address VARCHAR(255),\n    seller_address VARCHAR(255),\n    transaction_date DATE\n);\n\nCREATE TABLE TokenMetadata (\n    token_id INT PRIMARY KEY,\n    token_name VARCHAR(255),\n    token_description TEXT,\n    token_image_url TEXT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE Transactions;",
  "### TABLEDATA\n\nCREATE TABLE NFTTokenOwners (\n    token_id INT PRIMARY KEY,\n    owner_address VARCHAR(255),\n    ownership_start_date DATE,\n    ownership_end_date DATE\n);\n\nCREATE TABLE Owners (\n    owner_address VARCHAR(255) PRIMARY KEY,\n    owner_name VARCHAR(255),\n    owner_email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    token_id INT,\n    buyer_address VARCHAR(255),\n    seller_address VARCHAR(255),\n    transaction_date DATE\n);\n\nCREATE TABLE TokenMetadata (\n    token_id INT PRIMARY KEY,\n    token_name VARCHAR(255),\n    token_description TEXT,\n    token_image_url TEXT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE NFTTokenOwners;",
  "### TABLEDATA\n\nCREATE TABLE NFTTokenOwners (\n    token_id INT PRIMARY KEY,\n    owner_address VARCHAR(255),\n    ownership_start_date DATE,\n    ownership_end_date DATE\n);\n\nCREATE TABLE Owners (\n    owner_address VARCHAR(255) PRIMARY KEY,\n    owner_name VARCHAR(255),\n    owner_email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    token_id INT,\n    buyer_address VARCHAR(255),\n    seller_address VARCHAR(255),\n    transaction_date DATE\n);\n\nCREATE TABLE TokenMetadata (\n    token_id INT PRIMARY KEY,\n    token_name VARCHAR(255),\n    token_description TEXT,\n    token_image_url TEXT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE Owners;",
  "### TABLEDATA\n\nCREATE TABLE NFTTokenOwners (\n    token_id INT PRIMARY KEY,\n    owner_address VARCHAR(255),\n    ownership_start_date DATE,\n    ownership_end_date DATE\n);\n\nCREATE TABLE Owners (\n    owner_address VARCHAR(255) PRIMARY KEY,\n    owner_name VARCHAR(255),\n    owner_email VARCHAR(255)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    token_id INT,\n    buyer_address VARCHAR(255),\n    seller_address VARCHAR(255),\n    transaction_date DATE\n);\n\nCREATE TABLE TokenMetadata (\n    token_id INT PRIMARY KEY,\n    token_name VARCHAR(255),\n    token_description TEXT,\n    token_image_url TEXT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE Transactions;",
  "### TABLEDATA\n\nCREATE TABLE NFTOwners (\n    id SERIAL PRIMARY KEY,\n    owner_id INT NOT NULL,\n    nft_id INT NOT NULL,\n    owned_since TIMESTAMP\n);\n\nCREATE TABLE NFTs (\n    id SERIAL PRIMARY KEY,\n    token_id VARCHAR(50) NOT NULL,\n    token_name VARCHAR(50) NOT NULL,\n    token_metadata JSONB\n);\n\nCREATE TABLE Owners (\n    id SERIAL PRIMARY KEY,\n    owner_name VARCHAR(50) NOT NULL,\n    owner_address VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Transactions (\n    id SERIAL PRIMARY KEY,\n    transaction_type VARCHAR(50) NOT NULL,\n    nft_id INT NOT NULL,\n    owner_id INT NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE OwnershipHistory (\n    id SERIAL PRIMARY KEY,\n    nft_id INT NOT NULL,\n    previous_owner_id INT,\n    current_owner_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transfer_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE NFTOwners;",
  "### TABLEDATA\n\nCREATE TABLE NFTOwners (\n    id SERIAL PRIMARY KEY,\n    owner_id INT NOT NULL,\n    nft_id INT NOT NULL,\n    owned_since TIMESTAMP\n);\n\nCREATE TABLE NFTs (\n    id SERIAL PRIMARY KEY,\n    token_id VARCHAR(50) NOT NULL,\n    token_name VARCHAR(50) NOT NULL,\n    token_metadata JSONB\n);\n\nCREATE TABLE Owners (\n    id SERIAL PRIMARY KEY,\n    owner_name VARCHAR(50) NOT NULL,\n    owner_address VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Transactions (\n    id SERIAL PRIMARY KEY,\n    transaction_type VARCHAR(50) NOT NULL,\n    nft_id INT NOT NULL,\n    owner_id INT NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE OwnershipHistory (\n    id SERIAL PRIMARY KEY,\n    nft_id INT NOT NULL,\n    previous_owner_id INT,\n    current_owner_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transfer_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE NFTs;",
  "### TABLEDATA\n\nCREATE TABLE NFTOwners (\n    id SERIAL PRIMARY KEY,\n    owner_id INT NOT NULL,\n    nft_id INT NOT NULL,\n    owned_since TIMESTAMP\n);\n\nCREATE TABLE NFTs (\n    id SERIAL PRIMARY KEY,\n    token_id VARCHAR(50) NOT NULL,\n    token_name VARCHAR(50) NOT NULL,\n    token_metadata JSONB\n);\n\nCREATE TABLE Owners (\n    id SERIAL PRIMARY KEY,\n    owner_name VARCHAR(50) NOT NULL,\n    owner_address VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Transactions (\n    id SERIAL PRIMARY KEY,\n    transaction_type VARCHAR(50) NOT NULL,\n    nft_id INT NOT NULL,\n    owner_id INT NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE OwnershipHistory (\n    id SERIAL PRIMARY KEY,\n    nft_id INT NOT NULL,\n    previous_owner_id INT,\n    current_owner_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transfer_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE Owners;",
  "### TABLEDATA\n\nCREATE TABLE NFTOwners (\n    id SERIAL PRIMARY KEY,\n    owner_id INT NOT NULL,\n    nft_id INT NOT NULL,\n    owned_since TIMESTAMP\n);\n\nCREATE TABLE NFTs (\n    id SERIAL PRIMARY KEY,\n    token_id VARCHAR(50) NOT NULL,\n    token_name VARCHAR(50) NOT NULL,\n    token_metadata JSONB\n);\n\nCREATE TABLE Owners (\n    id SERIAL PRIMARY KEY,\n    owner_name VARCHAR(50) NOT NULL,\n    owner_address VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Transactions (\n    id SERIAL PRIMARY KEY,\n    transaction_type VARCHAR(50) NOT NULL,\n    nft_id INT NOT NULL,\n    owner_id INT NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE OwnershipHistory (\n    id SERIAL PRIMARY KEY,\n    nft_id INT NOT NULL,\n    previous_owner_id INT,\n    current_owner_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transfer_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE NFTOwners;",
  "### TABLEDATA\n\nCREATE TABLE NFTOwners (\n    id SERIAL PRIMARY KEY,\n    owner_id INT NOT NULL,\n    nft_id INT NOT NULL,\n    owned_since TIMESTAMP\n);\n\nCREATE TABLE NFTs (\n    id SERIAL PRIMARY KEY,\n    token_id VARCHAR(50) NOT NULL,\n    token_name VARCHAR(50) NOT NULL,\n    token_metadata JSONB\n);\n\nCREATE TABLE Owners (\n    id SERIAL PRIMARY KEY,\n    owner_name VARCHAR(50) NOT NULL,\n    owner_address VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Transactions (\n    id SERIAL PRIMARY KEY,\n    transaction_type VARCHAR(50) NOT NULL,\n    nft_id INT NOT NULL,\n    owner_id INT NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE OwnershipHistory (\n    id SERIAL PRIMARY KEY,\n    nft_id INT NOT NULL,\n    previous_owner_id INT,\n    current_owner_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transfer_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE NFTs;",
  "### TABLEDATA\n\nCREATE TABLE NFTOwners (\n    id SERIAL PRIMARY KEY,\n    owner_id INT NOT NULL,\n    nft_id INT NOT NULL,\n    owned_since TIMESTAMP\n);\n\nCREATE TABLE NFTs (\n    id SERIAL PRIMARY KEY,\n    token_id VARCHAR(50) NOT NULL,\n    token_name VARCHAR(50) NOT NULL,\n    token_metadata JSONB\n);\n\nCREATE TABLE Owners (\n    id SERIAL PRIMARY KEY,\n    owner_name VARCHAR(50) NOT NULL,\n    owner_address VARCHAR(100) UNIQUE\n);\n\nCREATE TABLE Transactions (\n    id SERIAL PRIMARY KEY,\n    transaction_type VARCHAR(50) NOT NULL,\n    nft_id INT NOT NULL,\n    owner_id INT NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE OwnershipHistory (\n    id SERIAL PRIMARY KEY,\n    nft_id INT NOT NULL,\n    previous_owner_id INT,\n    current_owner_id INT NOT NULL,\n    transaction_id INT NOT NULL,\n    transfer_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE Owners;"
]