[
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(512) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nUPDATE blockchain_participants SET participant_name = 'Alice' WHERE participant_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(512) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nUPDATE blockchain_participants SET public_key = 'xyz123' WHERE participant_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(512) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nUPDATE blockchain_participants SET participant_name = 'Bob', public_key = 'abc456' WHERE participant_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(512) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nUPDATE blockchain_participants SET participant_name = 'Alice' WHERE participant_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(512) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nUPDATE blockchain_participants SET participant_name = 'Bob', public_key = 'abc123' WHERE participant_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(512) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nUPDATE blockchain_participants SET public_key = 'xyz456' WHERE participant_name = 'Charlie';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    public_key VARCHAR(255)\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    participant_id INT,\n    transaction_amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES blockchain_participants(participant_id)\n);\n\n### STATEMENT\n\nUPDATE blockchain_participants SET participant_name = 'Alice' WHERE participant_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    public_key VARCHAR(255)\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    participant_id INT,\n    transaction_amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES blockchain_participants(participant_id)\n);\n\n### STATEMENT\n\nUPDATE transactions SET transaction_amount = 100.00 WHERE transaction_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    public_key VARCHAR(255)\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    participant_id INT,\n    transaction_amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES blockchain_participants(participant_id)\n);\n\n### STATEMENT\n\nUPDATE blockchain_participants SET public_key = 'abcdef123456789' WHERE participant_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    public_key VARCHAR(255)\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    participant_id INT,\n    transaction_amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES blockchain_participants(participant_id)\n);\n\n### STATEMENT\n\nUPDATE blockchain_participants SET participant_name = 'Alice' WHERE participant_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    public_key VARCHAR(255)\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    participant_id INT,\n    transaction_amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES blockchain_participants(participant_id)\n);\n\n### STATEMENT\n\nUPDATE transactions SET transaction_amount = 100.50 WHERE transaction_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    public_key VARCHAR(255)\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    participant_id INT,\n    transaction_amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES blockchain_participants(participant_id)\n);\n\n### STATEMENT\n\nUPDATE blockchain_participants SET public_key = 'new_public_key' WHERE participant_name = 'Bob';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    amount FLOAT NOT NULL\n);\n\nCREATE TABLE verification_requests (\n    request_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    verified BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nUPDATE blockchain_participants SET participant_name = 'Alice' WHERE participant_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    amount FLOAT NOT NULL\n);\n\nCREATE TABLE verification_requests (\n    request_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    verified BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nUPDATE transactions SET amount = 100.0 WHERE transaction_id = '223e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    amount FLOAT NOT NULL\n);\n\nCREATE TABLE verification_requests (\n    request_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    verified BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nUPDATE verification_requests SET verified = TRUE WHERE request_id = '323e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    amount FLOAT NOT NULL\n);\n\nCREATE TABLE verification_requests (\n    request_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    verified BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nUPDATE blockchain_participants SET participant_name = 'Alice' WHERE participant_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    amount FLOAT NOT NULL\n);\n\nCREATE TABLE verification_requests (\n    request_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    verified BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nUPDATE transactions SET amount = 100.50 WHERE transaction_id = '223e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    amount FLOAT NOT NULL\n);\n\nCREATE TABLE verification_requests (\n    request_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    verified BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nUPDATE verification_requests SET verified = TRUE WHERE request_id = '323e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id SERIAL PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    sender_id INT NOT NULL,\n    receiver_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE participant_history (\n    history_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    action_description TEXT,\n    action_timestamp TIMESTAMP\n);\n\nCREATE TABLE verification_logs (\n    log_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    verification_status BOOLEAN NOT NULL,\n    verification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE blockchain_participants SET public_key = 'updated_public_key' WHERE participant_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id SERIAL PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    sender_id INT NOT NULL,\n    receiver_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE participant_history (\n    history_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    action_description TEXT,\n    action_timestamp TIMESTAMP\n);\n\nCREATE TABLE verification_logs (\n    log_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    verification_status BOOLEAN NOT NULL,\n    verification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE transactions SET amount = 500.00 WHERE transaction_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id SERIAL PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    sender_id INT NOT NULL,\n    receiver_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE participant_history (\n    history_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    action_description TEXT,\n    action_timestamp TIMESTAMP\n);\n\nCREATE TABLE verification_logs (\n    log_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    verification_status BOOLEAN NOT NULL,\n    verification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE participant_history SET action_description = 'Participant details updated' WHERE history_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id SERIAL PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    sender_id INT NOT NULL,\n    receiver_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE participant_history (\n    history_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    action_description TEXT,\n    action_timestamp TIMESTAMP\n);\n\nCREATE TABLE verification_logs (\n    log_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    verification_status BOOLEAN NOT NULL,\n    verification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE blockchain_participants SET address = 'New Address' WHERE participant_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id SERIAL PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    sender_id INT NOT NULL,\n    receiver_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE participant_history (\n    history_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    action_description TEXT,\n    action_timestamp TIMESTAMP\n);\n\nCREATE TABLE verification_logs (\n    log_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    verification_status BOOLEAN NOT NULL,\n    verification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE transactions SET amount = 1500 WHERE transaction_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id SERIAL PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    sender_id INT NOT NULL,\n    receiver_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE participant_history (\n    history_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    action_description TEXT,\n    action_timestamp TIMESTAMP\n);\n\nCREATE TABLE verification_logs (\n    log_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    verification_status BOOLEAN NOT NULL,\n    verification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE participant_history SET action_description = 'Updated action description' WHERE history_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name TEXT NOT NULL,\n  public_key TEXT NOT NULL\n)\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  sender_id INT,\n  receiver_id INT,\n  amount DECIMAL,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_blocks (\n  block_id INT PRIMARY KEY,\n  previous_block_id INT,\n  nonce INT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_wallets (\n  wallet_id INT PRIMARY KEY,\n  participant_id INT,\n  balance DECIMAL\n)\n\nCREATE TABLE blockchain_verification (\n  verification_id INT PRIMARY KEY,\n  participant_id INT,\n  verified_at TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE blockchain_participants SET participant_name = 'Alice' WHERE participant_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name TEXT NOT NULL,\n  public_key TEXT NOT NULL\n)\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  sender_id INT,\n  receiver_id INT,\n  amount DECIMAL,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_blocks (\n  block_id INT PRIMARY KEY,\n  previous_block_id INT,\n  nonce INT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_wallets (\n  wallet_id INT PRIMARY KEY,\n  participant_id INT,\n  balance DECIMAL\n)\n\nCREATE TABLE blockchain_verification (\n  verification_id INT PRIMARY KEY,\n  participant_id INT,\n  verified_at TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE blockchain_transactions SET amount = 100.50 WHERE transaction_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name TEXT NOT NULL,\n  public_key TEXT NOT NULL\n)\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  sender_id INT,\n  receiver_id INT,\n  amount DECIMAL,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_blocks (\n  block_id INT PRIMARY KEY,\n  previous_block_id INT,\n  nonce INT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_wallets (\n  wallet_id INT PRIMARY KEY,\n  participant_id INT,\n  balance DECIMAL\n)\n\nCREATE TABLE blockchain_verification (\n  verification_id INT PRIMARY KEY,\n  participant_id INT,\n  verified_at TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE blockchain_blocks SET nonce = 12345 WHERE block_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name TEXT NOT NULL,\n  public_key TEXT NOT NULL\n)\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  sender_id INT,\n  receiver_id INT,\n  amount DECIMAL,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_blocks (\n  block_id INT PRIMARY KEY,\n  previous_block_id INT,\n  nonce INT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_wallets (\n  wallet_id INT PRIMARY KEY,\n  participant_id INT,\n  balance DECIMAL\n)\n\nCREATE TABLE blockchain_verification (\n  verification_id INT PRIMARY KEY,\n  participant_id INT,\n  verified_at TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE blockchain_participants SET public_key = 'new_public_key' WHERE participant_id = 1",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name TEXT NOT NULL,\n  public_key TEXT NOT NULL\n)\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  sender_id INT,\n  receiver_id INT,\n  amount DECIMAL,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_blocks (\n  block_id INT PRIMARY KEY,\n  previous_block_id INT,\n  nonce INT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_wallets (\n  wallet_id INT PRIMARY KEY,\n  participant_id INT,\n  balance DECIMAL\n)\n\nCREATE TABLE blockchain_verification (\n  verification_id INT PRIMARY KEY,\n  participant_id INT,\n  verified_at TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE blockchain_transactions SET amount = 150.25 WHERE transaction_id = 2",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name TEXT NOT NULL,\n  public_key TEXT NOT NULL\n)\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  sender_id INT,\n  receiver_id INT,\n  amount DECIMAL,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_blocks (\n  block_id INT PRIMARY KEY,\n  previous_block_id INT,\n  nonce INT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_wallets (\n  wallet_id INT PRIMARY KEY,\n  participant_id INT,\n  balance DECIMAL\n)\n\nCREATE TABLE blockchain_verification (\n  verification_id INT PRIMARY KEY,\n  participant_id INT,\n  verified_at TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE blockchain_blocks SET nonce = 1234, timestamp = '2022-01-01 12:00:00' WHERE block_id = 3"
]