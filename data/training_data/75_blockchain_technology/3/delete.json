[
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(512) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nDELETE FROM blockchain_participants WHERE participant_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(512) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nDELETE FROM blockchain_participants WHERE participant_name = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(512) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nDELETE FROM blockchain_participants WHERE public_key = 'abcdef123456';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(512) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nDELETE FROM blockchain_participants WHERE participant_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(512) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nDELETE FROM blockchain_participants WHERE participant_name = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(512) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nDELETE FROM blockchain_participants WHERE participant_id IN (SELECT participant_id FROM blockchain_participants WHERE participant_name = 'Bob');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    public_key VARCHAR(255)\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    participant_id INT,\n    transaction_amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES blockchain_participants(participant_id)\n);\n\n### STATEMENT\n\nDELETE FROM blockchain_participants WHERE participant_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    public_key VARCHAR(255)\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    participant_id INT,\n    transaction_amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES blockchain_participants(participant_id)\n);\n\n### STATEMENT\n\nDELETE FROM transactions WHERE transaction_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    public_key VARCHAR(255)\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    participant_id INT,\n    transaction_amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES blockchain_participants(participant_id)\n);\n\n### STATEMENT\n\nDELETE FROM blockchain_participants WHERE participant_name = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    public_key VARCHAR(255)\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    participant_id INT,\n    transaction_amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES blockchain_participants(participant_id)\n);\n\n### STATEMENT\n\nDELETE FROM transactions WHERE participant_id = 2 AND transaction_amount > 1000.00;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    public_key VARCHAR(255)\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    participant_id INT,\n    transaction_amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES blockchain_participants(participant_id)\n);\n\n### STATEMENT\n\nDELETE FROM blockchain_participants WHERE participant_name LIKE 'Alice%';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    public_key VARCHAR(255)\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    participant_id INT,\n    transaction_amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES blockchain_participants(participant_id)\n);\n\n### STATEMENT\n\nDELETE FROM transactions WHERE transaction_date < '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    amount FLOAT NOT NULL\n);\n\nCREATE TABLE verification_requests (\n    request_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    verified BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nDELETE FROM blockchain_participants WHERE participant_id = 'fd18b95a-29c9-4b8f-8393-61ac0b1d3c17';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    amount FLOAT NOT NULL\n);\n\nCREATE TABLE verification_requests (\n    request_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    verified BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nDELETE FROM transactions WHERE transaction_id = '43394756-9604-4b3d-b94b-eb4050d65423';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    amount FLOAT NOT NULL\n);\n\nCREATE TABLE verification_requests (\n    request_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    verified BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nDELETE FROM verification_requests WHERE request_id = 'fbce6cd0-4e0a-4566-9d1b-91db4413f372';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    amount FLOAT NOT NULL\n);\n\nCREATE TABLE verification_requests (\n    request_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    verified BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nDELETE FROM transactions WHERE amount > 1000",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    amount FLOAT NOT NULL\n);\n\nCREATE TABLE verification_requests (\n    request_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    verified BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nDELETE FROM verification_requests WHERE verified = FALSE",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    amount FLOAT NOT NULL\n);\n\nCREATE TABLE verification_requests (\n    request_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    verified BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nDELETE FROM blockchain_participants WHERE participant_name = 'Alice'",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id SERIAL PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    sender_id INT NOT NULL,\n    receiver_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE participant_history (\n    history_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    action_description TEXT,\n    action_timestamp TIMESTAMP\n);\n\nCREATE TABLE verification_logs (\n    log_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    verification_status BOOLEAN NOT NULL,\n    verification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM blockchain_participants WHERE participant_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id SERIAL PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    sender_id INT NOT NULL,\n    receiver_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE participant_history (\n    history_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    action_description TEXT,\n    action_timestamp TIMESTAMP\n);\n\nCREATE TABLE verification_logs (\n    log_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    verification_status BOOLEAN NOT NULL,\n    verification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM transactions WHERE transaction_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id SERIAL PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    sender_id INT NOT NULL,\n    receiver_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE participant_history (\n    history_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    action_description TEXT,\n    action_timestamp TIMESTAMP\n);\n\nCREATE TABLE verification_logs (\n    log_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    verification_status BOOLEAN NOT NULL,\n    verification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM participant_history WHERE history_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id SERIAL PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    sender_id INT NOT NULL,\n    receiver_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE participant_history (\n    history_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    action_description TEXT,\n    action_timestamp TIMESTAMP\n);\n\nCREATE TABLE verification_logs (\n    log_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    verification_status BOOLEAN NOT NULL,\n    verification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM blockchain_participants WHERE participant_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id SERIAL PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    sender_id INT NOT NULL,\n    receiver_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE participant_history (\n    history_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    action_description TEXT,\n    action_timestamp TIMESTAMP\n);\n\nCREATE TABLE verification_logs (\n    log_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    verification_status BOOLEAN NOT NULL,\n    verification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM transactions WHERE transaction_id IN (SELECT transaction_id FROM transactions WHERE sender_id = 1 OR receiver_id = 1);",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id SERIAL PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    sender_id INT NOT NULL,\n    receiver_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE participant_history (\n    history_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    action_description TEXT,\n    action_timestamp TIMESTAMP\n);\n\nCREATE TABLE verification_logs (\n    log_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    verification_status BOOLEAN NOT NULL,\n    verification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nDELETE FROM participant_history WHERE participant_id IN (SELECT participant_id FROM blockchain_participants WHERE participant_name LIKE 'John%');",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name TEXT NOT NULL,\n  public_key TEXT NOT NULL\n)\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  sender_id INT,\n  receiver_id INT,\n  amount DECIMAL,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_blocks (\n  block_id INT PRIMARY KEY,\n  previous_block_id INT,\n  nonce INT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_wallets (\n  wallet_id INT PRIMARY KEY,\n  participant_id INT,\n  balance DECIMAL\n)\n\nCREATE TABLE blockchain_verification (\n  verification_id INT PRIMARY KEY,\n  participant_id INT,\n  verified_at TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM blockchain_participants WHERE participant_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name TEXT NOT NULL,\n  public_key TEXT NOT NULL\n)\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  sender_id INT,\n  receiver_id INT,\n  amount DECIMAL,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_blocks (\n  block_id INT PRIMARY KEY,\n  previous_block_id INT,\n  nonce INT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_wallets (\n  wallet_id INT PRIMARY KEY,\n  participant_id INT,\n  balance DECIMAL\n)\n\nCREATE TABLE blockchain_verification (\n  verification_id INT PRIMARY KEY,\n  participant_id INT,\n  verified_at TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM blockchain_transactions WHERE transaction_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name TEXT NOT NULL,\n  public_key TEXT NOT NULL\n)\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  sender_id INT,\n  receiver_id INT,\n  amount DECIMAL,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_blocks (\n  block_id INT PRIMARY KEY,\n  previous_block_id INT,\n  nonce INT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_wallets (\n  wallet_id INT PRIMARY KEY,\n  participant_id INT,\n  balance DECIMAL\n)\n\nCREATE TABLE blockchain_verification (\n  verification_id INT PRIMARY KEY,\n  participant_id INT,\n  verified_at TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM blockchain_blocks WHERE block_id = 50;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name TEXT NOT NULL,\n  public_key TEXT NOT NULL\n)\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  sender_id INT,\n  receiver_id INT,\n  amount DECIMAL,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_blocks (\n  block_id INT PRIMARY KEY,\n  previous_block_id INT,\n  nonce INT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_wallets (\n  wallet_id INT PRIMARY KEY,\n  participant_id INT,\n  balance DECIMAL\n)\n\nCREATE TABLE blockchain_verification (\n  verification_id INT PRIMARY KEY,\n  participant_id INT,\n  verified_at TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM blockchain_wallets WHERE balance < 0.00",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name TEXT NOT NULL,\n  public_key TEXT NOT NULL\n)\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  sender_id INT,\n  receiver_id INT,\n  amount DECIMAL,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_blocks (\n  block_id INT PRIMARY KEY,\n  previous_block_id INT,\n  nonce INT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_wallets (\n  wallet_id INT PRIMARY KEY,\n  participant_id INT,\n  balance DECIMAL\n)\n\nCREATE TABLE blockchain_verification (\n  verification_id INT PRIMARY KEY,\n  participant_id INT,\n  verified_at TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM blockchain_transactions WHERE timestamp < '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name TEXT NOT NULL,\n  public_key TEXT NOT NULL\n)\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  sender_id INT,\n  receiver_id INT,\n  amount DECIMAL,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_blocks (\n  block_id INT PRIMARY KEY,\n  previous_block_id INT,\n  nonce INT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_wallets (\n  wallet_id INT PRIMARY KEY,\n  participant_id INT,\n  balance DECIMAL\n)\n\nCREATE TABLE blockchain_verification (\n  verification_id INT PRIMARY KEY,\n  participant_id INT,\n  verified_at TIMESTAMP\n)\n\n### STATEMENT\n\nDELETE FROM blockchain_blocks WHERE timestamp < (SELECT MIN(timestamp) FROM blockchain_blocks)"
]