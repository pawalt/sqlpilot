[
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(512) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE blockchain_participants;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(512) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE blockchain_participants RESTART IDENTITY;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(512) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE blockchain_participants CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(512) UNIQUE NOT NULL\n);\n\n### STATEMENT\n\nTRUNCATE TABLE blockchain_participants;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    public_key VARCHAR(255)\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    participant_id INT,\n    transaction_amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES blockchain_participants(participant_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE blockchain_participants;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    public_key VARCHAR(255)\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    participant_id INT,\n    transaction_amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES blockchain_participants(participant_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE transactions;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    public_key VARCHAR(255)\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    participant_id INT,\n    transaction_amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES blockchain_participants(participant_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE blockchain_participants CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    public_key VARCHAR(255)\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    participant_id INT,\n    transaction_amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES blockchain_participants(participant_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE transactions;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    public_key VARCHAR(255)\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    participant_id INT,\n    transaction_amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES blockchain_participants(participant_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE blockchain_participants CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(255),\n    public_key VARCHAR(255)\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    participant_id INT,\n    transaction_amount DECIMAL(10,2),\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (participant_id) REFERENCES blockchain_participants(participant_id)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE transactions RESTART IDENTITY;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    amount FLOAT NOT NULL\n);\n\nCREATE TABLE verification_requests (\n    request_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    verified BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nTRUNCATE TABLE blockchain_participants;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    amount FLOAT NOT NULL\n);\n\nCREATE TABLE verification_requests (\n    request_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    verified BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nTRUNCATE TABLE transactions;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    amount FLOAT NOT NULL\n);\n\nCREATE TABLE verification_requests (\n    request_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    verified BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nTRUNCATE TABLE verification_requests;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    amount FLOAT NOT NULL\n);\n\nCREATE TABLE verification_requests (\n    request_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    verified BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nTRUNCATE TABLE blockchain_participants CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    amount FLOAT NOT NULL\n);\n\nCREATE TABLE verification_requests (\n    request_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    verified BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nTRUNCATE TABLE transactions;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id UUID PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) UNIQUE\n);\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    amount FLOAT NOT NULL\n);\n\nCREATE TABLE verification_requests (\n    request_id UUID PRIMARY KEY,\n    participant_id UUID REFERENCES blockchain_participants(participant_id),\n    verified BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nTRUNCATE TABLE verification_requests;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id SERIAL PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    sender_id INT NOT NULL,\n    receiver_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE participant_history (\n    history_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    action_description TEXT,\n    action_timestamp TIMESTAMP\n);\n\nCREATE TABLE verification_logs (\n    log_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    verification_status BOOLEAN NOT NULL,\n    verification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE blockchain_participants;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id SERIAL PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    sender_id INT NOT NULL,\n    receiver_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE participant_history (\n    history_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    action_description TEXT,\n    action_timestamp TIMESTAMP\n);\n\nCREATE TABLE verification_logs (\n    log_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    verification_status BOOLEAN NOT NULL,\n    verification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE transactions;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id SERIAL PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    sender_id INT NOT NULL,\n    receiver_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE participant_history (\n    history_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    action_description TEXT,\n    action_timestamp TIMESTAMP\n);\n\nCREATE TABLE verification_logs (\n    log_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    verification_status BOOLEAN NOT NULL,\n    verification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE participant_history;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id SERIAL PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    sender_id INT NOT NULL,\n    receiver_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE participant_history (\n    history_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    action_description TEXT,\n    action_timestamp TIMESTAMP\n);\n\nCREATE TABLE verification_logs (\n    log_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    verification_status BOOLEAN NOT NULL,\n    verification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE verification_logs;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id SERIAL PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    sender_id INT NOT NULL,\n    receiver_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE participant_history (\n    history_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    action_description TEXT,\n    action_timestamp TIMESTAMP\n);\n\nCREATE TABLE verification_logs (\n    log_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    verification_status BOOLEAN NOT NULL,\n    verification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE blockchain_participants CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id SERIAL PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    sender_id INT NOT NULL,\n    receiver_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE participant_history (\n    history_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    action_description TEXT,\n    action_timestamp TIMESTAMP\n);\n\nCREATE TABLE verification_logs (\n    log_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    verification_status BOOLEAN NOT NULL,\n    verification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE transactions CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n    participant_id SERIAL PRIMARY KEY,\n    participant_name VARCHAR(255) NOT NULL,\n    public_key VARCHAR(255) NOT NULL,\n    address VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    sender_id INT NOT NULL,\n    receiver_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE participant_history (\n    history_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    action_description TEXT,\n    action_timestamp TIMESTAMP\n);\n\nCREATE TABLE verification_logs (\n    log_id SERIAL PRIMARY KEY,\n    participant_id INT NOT NULL,\n    verification_status BOOLEAN NOT NULL,\n    verification_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE participant_history CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name TEXT NOT NULL,\n  public_key TEXT NOT NULL\n)\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  sender_id INT,\n  receiver_id INT,\n  amount DECIMAL,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_blocks (\n  block_id INT PRIMARY KEY,\n  previous_block_id INT,\n  nonce INT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_wallets (\n  wallet_id INT PRIMARY KEY,\n  participant_id INT,\n  balance DECIMAL\n)\n\nCREATE TABLE blockchain_verification (\n  verification_id INT PRIMARY KEY,\n  participant_id INT,\n  verified_at TIMESTAMP\n)\n\n### STATEMENT\n\nTRUNCATE TABLE blockchain_participants;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name TEXT NOT NULL,\n  public_key TEXT NOT NULL\n)\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  sender_id INT,\n  receiver_id INT,\n  amount DECIMAL,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_blocks (\n  block_id INT PRIMARY KEY,\n  previous_block_id INT,\n  nonce INT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_wallets (\n  wallet_id INT PRIMARY KEY,\n  participant_id INT,\n  balance DECIMAL\n)\n\nCREATE TABLE blockchain_verification (\n  verification_id INT PRIMARY KEY,\n  participant_id INT,\n  verified_at TIMESTAMP\n)\n\n### STATEMENT\n\nTRUNCATE TABLE blockchain_transactions;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name TEXT NOT NULL,\n  public_key TEXT NOT NULL\n)\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  sender_id INT,\n  receiver_id INT,\n  amount DECIMAL,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_blocks (\n  block_id INT PRIMARY KEY,\n  previous_block_id INT,\n  nonce INT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_wallets (\n  wallet_id INT PRIMARY KEY,\n  participant_id INT,\n  balance DECIMAL\n)\n\nCREATE TABLE blockchain_verification (\n  verification_id INT PRIMARY KEY,\n  participant_id INT,\n  verified_at TIMESTAMP\n)\n\n### STATEMENT\n\nTRUNCATE TABLE blockchain_blocks;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name TEXT NOT NULL,\n  public_key TEXT NOT NULL\n)\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  sender_id INT,\n  receiver_id INT,\n  amount DECIMAL,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_blocks (\n  block_id INT PRIMARY KEY,\n  previous_block_id INT,\n  nonce INT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_wallets (\n  wallet_id INT PRIMARY KEY,\n  participant_id INT,\n  balance DECIMAL\n)\n\nCREATE TABLE blockchain_verification (\n  verification_id INT PRIMARY KEY,\n  participant_id INT,\n  verified_at TIMESTAMP\n)\n\n### STATEMENT\n\nTRUNCATE TABLE blockchain_participants CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name TEXT NOT NULL,\n  public_key TEXT NOT NULL\n)\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  sender_id INT,\n  receiver_id INT,\n  amount DECIMAL,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_blocks (\n  block_id INT PRIMARY KEY,\n  previous_block_id INT,\n  nonce INT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_wallets (\n  wallet_id INT PRIMARY KEY,\n  participant_id INT,\n  balance DECIMAL\n)\n\nCREATE TABLE blockchain_verification (\n  verification_id INT PRIMARY KEY,\n  participant_id INT,\n  verified_at TIMESTAMP\n)\n\n### STATEMENT\n\nTRUNCATE TABLE blockchain_transactions CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_participants (\n  participant_id INT PRIMARY KEY,\n  participant_name TEXT NOT NULL,\n  public_key TEXT NOT NULL\n)\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  sender_id INT,\n  receiver_id INT,\n  amount DECIMAL,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_blocks (\n  block_id INT PRIMARY KEY,\n  previous_block_id INT,\n  nonce INT,\n  timestamp TIMESTAMP\n)\n\nCREATE TABLE blockchain_wallets (\n  wallet_id INT PRIMARY KEY,\n  participant_id INT,\n  balance DECIMAL\n)\n\nCREATE TABLE blockchain_verification (\n  verification_id INT PRIMARY KEY,\n  participant_id INT,\n  verified_at TIMESTAMP\n)\n\n### STATEMENT\n\nTRUNCATE TABLE blockchain_blocks CASCADE;"
]