[
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('1', 1000, 'hash1', '2022-01-01 00:00:00', 'sender1', 'receiver1', 10.50) ON CONFLICT (transaction_id) DO UPDATE SET block_number = 1000, transaction_hash = 'hash1', timestamp = '2022-01-01 00:00:00', sender_address = 'sender1', receiver_address = 'receiver1', amount = 10.50;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('2', 2000, 'hash2', '2022-01-02 00:00:00', 'sender2', 'receiver2', 20.30) ON CONFLICT (transaction_id) DO UPDATE SET block_number = 2000, transaction_hash = 'hash2', timestamp = '2022-01-02 00:00:00', sender_address = 'sender2', receiver_address = 'receiver2', amount = 20.30;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('3', 3000, 'hash3', '2022-01-03 00:00:00', 'sender3', 'receiver3', 30.70) ON CONFLICT (transaction_id) DO UPDATE SET block_number = 3000, transaction_hash = 'hash3', timestamp = '2022-01-03 00:00:00', sender_address = 'sender3', receiver_address = 'receiver3', amount = 30.70;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('4', 4000, 'hash4', '2022-01-04 00:00:00', 'sender4', 'receiver4', 40.60) ON CONFLICT (transaction_id) DO UPDATE SET block_number = 4000, transaction_hash = 'hash4', timestamp = '2022-01-04 00:00:00', sender_address = 'sender4', receiver_address = 'receiver4', amount = 40.60;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('5', 5000, 'hash5', '2022-01-05 00:00:00', 'sender5', 'receiver5', 50.90) ON CONFLICT (transaction_id) DO UPDATE SET block_number = 5000, transaction_hash = 'hash5', timestamp = '2022-01-05 00:00:00', sender_address = 'sender5', receiver_address = 'receiver5', amount = 50.90;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('6', 6000, 'hash6', '2022-01-06 00:00:00', 'sender6', 'receiver6', 60.40) ON CONFLICT (transaction_id) DO UPDATE SET block_number = 6000, transaction_hash = 'hash6', timestamp = '2022-01-06 00:00:00', sender_address = 'sender6', receiver_address = 'receiver6', amount = 60.40;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('7', 7000, 'hash7', '2022-01-07 00:00:00', 'sender7', 'receiver7', 70.20) ON CONFLICT (transaction_id) DO UPDATE SET block_number = 7000, transaction_hash = 'hash7', timestamp = '2022-01-07 00:00:00', sender_address = 'sender7', receiver_address = 'receiver7', amount = 70.20;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('8', 8000, 'hash8', '2022-01-08 00:00:00', 'sender8', 'receiver8', 80.80) ON CONFLICT (transaction_id) DO UPDATE SET block_number = 8000, transaction_hash = 'hash8', timestamp = '2022-01-08 00:00:00', sender_address = 'sender8', receiver_address = 'receiver8', amount = 80.80;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('9', 9000, 'hash9', '2022-01-09 00:00:00', 'sender9', 'receiver9', 90.10) ON CONFLICT (transaction_id) DO UPDATE SET block_number = 9000, transaction_hash = 'hash9', timestamp = '2022-01-09 00:00:00', sender_address = 'sender9', receiver_address = 'receiver9', amount = 90.10;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('10', 10000, 'hash10', '2022-01-10 00:00:00', 'sender10', 'receiver10', 100.00) ON CONFLICT (transaction_id) DO UPDATE SET block_number = 10000, transaction_hash = 'hash10', timestamp = '2022-01-10 00:00:00', sender_address = 'sender10', receiver_address = 'receiver10', amount = 100.00;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('11', 11000, 'hash11', '2022-01-11 00:00:00', 'sender11', 'receiver11', 110.60) ON CONFLICT (transaction_id) DO UPDATE SET block_number = 11000, transaction_hash = 'hash11', timestamp = '2022-01-11 00:00:00', sender_address = 'sender11', receiver_address = 'receiver11', amount = 110.60;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('12', 12000, 'hash12', '2022-01-12 00:00:00', 'sender12', 'receiver12', 120.90) ON CONFLICT (transaction_id) DO UPDATE SET block_number = 12000, transaction_hash = 'hash12', timestamp = '2022-01-12 00:00:00', sender_address = 'sender12', receiver_address = 'receiver12', amount = 120.90;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('13', 13000, 'hash13', '2022-01-13 00:00:00', 'sender13', 'receiver13', 130.40) ON CONFLICT (transaction_id) DO UPDATE SET block_number = 13000, transaction_hash = 'hash13', timestamp = '2022-01-13 00:00:00', sender_address = 'sender13', receiver_address = 'receiver13', amount = 130.40;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('14', 14000, 'hash14', '2022-01-14 00:00:00', 'sender14', 'receiver14', 140.30) ON CONFLICT (transaction_id) DO UPDATE SET block_number = 14000, transaction_hash = 'hash14', timestamp = '2022-01-14 00:00:00', sender_address = 'sender14', receiver_address = 'receiver14', amount = 140.30;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('15', 15000, 'hash15', '2022-01-15 00:00:00', 'sender15', 'receiver15', 150.80) ON CONFLICT (transaction_id) DO UPDATE SET block_number = 15000, transaction_hash = 'hash15', timestamp = '2022-01-15 00:00:00', sender_address = 'sender15', receiver_address = 'receiver15', amount = 150.80;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('16', 16000, 'hash16', '2022-01-16 00:00:00', 'sender16', 'receiver16', 160.50) ON CONFLICT (transaction_id) DO UPDATE SET block_number = 16000, transaction_hash = 'hash16', timestamp = '2022-01-16 00:00:00', sender_address = 'sender16', receiver_address = 'receiver16', amount = 160.50;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('17', 17000, 'hash17', '2022-01-17 00:00:00', 'sender17', 'receiver17', 170.20) ON CONFLICT (transaction_id) DO UPDATE SET block_number = 17000, transaction_hash = 'hash17', timestamp = '2022-01-17 00:00:00', sender_address = 'sender17', receiver_address = 'receiver17', amount = 170.20;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('18', 18000, 'hash18', '2022-01-18 00:00:00', 'sender18', 'receiver18', 180.70) ON CONFLICT (transaction_id) DO UPDATE SET block_number = 18000, transaction_hash = 'hash18', timestamp = '2022-01-18 00:00:00', sender_address = 'sender18', receiver_address = 'receiver18', amount = 180.70;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('19', 19000, 'hash19', '2022-01-19 00:00:00', 'sender19', 'receiver19', 190.90) ON CONFLICT (transaction_id) DO UPDATE SET block_number = 19000, transaction_hash = 'hash19', timestamp = '2022-01-19 00:00:00', sender_address = 'sender19', receiver_address = 'receiver19', amount = 190.90;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('20', 20000, 'hash20', '2022-01-20 00:00:00', 'sender20', 'receiver20', 200.30) ON CONFLICT (transaction_id) DO UPDATE SET block_number = 20000, transaction_hash = 'hash20', timestamp = '2022-01-20 00:00:00', sender_address = 'sender20', receiver_address = 'receiver20', amount = 200.30;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('1111', 1001, 'hash1', '2021-10-10 08:00:00', 'sender1', 'receiver1', 100.00) ON CONFLICT (transaction_id) DO UPDATE SET block_number = EXCLUDED.block_number, transaction_hash = EXCLUDED.transaction_hash, timestamp = EXCLUDED.timestamp, sender_address = EXCLUDED.sender_address, receiver_address = EXCLUDED.receiver_address, amount = EXCLUDED.amount;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('2222', 1002, 'hash2', '2021-10-11 09:00:00', 'sender2', 'receiver2', 200.00) ON CONFLICT (transaction_id) DO UPDATE SET block_number = EXCLUDED.block_number, transaction_hash = EXCLUDED.transaction_hash, timestamp = EXCLUDED.timestamp, sender_address = EXCLUDED.sender_address, receiver_address = EXCLUDED.receiver_address, amount = EXCLUDED.amount;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('3333', 1003, 'hash3', '2021-10-12 10:00:00', 'sender3', 'receiver3', 300.00) ON CONFLICT (transaction_id) DO UPDATE SET block_number = EXCLUDED.block_number, transaction_hash = EXCLUDED.transaction_hash, timestamp = EXCLUDED.timestamp, sender_address = EXCLUDED.sender_address, receiver_address = EXCLUDED.receiver_address, amount = EXCLUDED.amount;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('4444', 1004, 'hash4', '2021-10-13 11:00:00', 'sender4', 'receiver4', 400.00) ON CONFLICT (transaction_id) DO UPDATE SET block_number = EXCLUDED.block_number, transaction_hash = EXCLUDED.transaction_hash, timestamp = EXCLUDED.timestamp, sender_address = EXCLUDED.sender_address, receiver_address = EXCLUDED.receiver_address, amount = EXCLUDED.amount;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('5555', 1005, 'hash5', '2021-10-14 12:00:00', 'sender5', 'receiver5', 500.00) ON CONFLICT (transaction_id) DO UPDATE SET block_number = EXCLUDED.block_number, transaction_hash = EXCLUDED.transaction_hash, timestamp = EXCLUDED.timestamp, sender_address = EXCLUDED.sender_address, receiver_address = EXCLUDED.receiver_address, amount = EXCLUDED.amount;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('6666', 1006, 'hash6', '2021-10-15 13:00:00', 'sender6', 'receiver6', 600.00) ON CONFLICT (transaction_id) DO UPDATE SET block_number = EXCLUDED.block_number, transaction_hash = EXCLUDED.transaction_hash, timestamp = EXCLUDED.timestamp, sender_address = EXCLUDED.sender_address, receiver_address = EXCLUDED.receiver_address, amount = EXCLUDED.amount;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('7777', 1007, 'hash7', '2021-10-16 14:00:00', 'sender7', 'receiver7', 700.00) ON CONFLICT (transaction_id) DO UPDATE SET block_number = EXCLUDED.block_number, transaction_hash = EXCLUDED.transaction_hash, timestamp = EXCLUDED.timestamp, sender_address = EXCLUDED.sender_address, receiver_address = EXCLUDED.receiver_address, amount = EXCLUDED.amount;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('8888', 1008, 'hash8', '2021-10-17 15:00:00', 'sender8', 'receiver8', 800.00) ON CONFLICT (transaction_id) DO UPDATE SET block_number = EXCLUDED.block_number, transaction_hash = EXCLUDED.transaction_hash, timestamp = EXCLUDED.timestamp, sender_address = EXCLUDED.sender_address, receiver_address = EXCLUDED.receiver_address, amount = EXCLUDED.amount;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('9999', 1009, 'hash9', '2021-10-18 16:00:00', 'sender9', 'receiver9', 900.00) ON CONFLICT (transaction_id) DO UPDATE SET block_number = EXCLUDED.block_number, transaction_hash = EXCLUDED.transaction_hash, timestamp = EXCLUDED.timestamp, sender_address = EXCLUDED.sender_address, receiver_address = EXCLUDED.receiver_address, amount = EXCLUDED.amount;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('1010', 1010, 'hash10', '2021-10-19 17:00:00', 'sender10', 'receiver10', 1000.00) ON CONFLICT (transaction_id) DO UPDATE SET block_number = EXCLUDED.block_number, transaction_hash = EXCLUDED.transaction_hash, timestamp = EXCLUDED.timestamp, sender_address = EXCLUDED.sender_address, receiver_address = EXCLUDED.receiver_address, amount = EXCLUDED.amount;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('1111', 1011, 'new_hash1', '2021-10-20 18:00:00', 'new_sender1', 'new_receiver1', 1100.00) ON CONFLICT (transaction_id) DO UPDATE SET block_number = EXCLUDED.block_number, transaction_hash = EXCLUDED.transaction_hash, timestamp = EXCLUDED.timestamp, sender_address = EXCLUDED.sender_address, receiver_address = EXCLUDED.receiver_address, amount = EXCLUDED.amount;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('1222', 1012, 'new_hash2', '2021-10-21 19:00:00', 'new_sender2', 'new_receiver2', 1200.00) ON CONFLICT (transaction_id) DO UPDATE SET block_number = EXCLUDED.block_number, transaction_hash = EXCLUDED.transaction_hash, timestamp = EXCLUDED.timestamp, sender_address = EXCLUDED.sender_address, receiver_address = EXCLUDED.receiver_address, amount = EXCLUDED.amount;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('1333', 1013, 'new_hash3', '2021-10-22 20:00:00', 'new_sender3', 'new_receiver3', 1300.00) ON CONFLICT (transaction_id) DO UPDATE SET block_number = EXCLUDED.block_number, transaction_hash = EXCLUDED.transaction_hash, timestamp = EXCLUDED.timestamp, sender_address = EXCLUDED.sender_address, receiver_address = EXCLUDED.receiver_address, amount = EXCLUDED.amount;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('1444', 1014, 'new_hash4', '2021-10-23 21:00:00', 'new_sender4', 'new_receiver4', 1400.00) ON CONFLICT (transaction_id) DO UPDATE SET block_number = EXCLUDED.block_number, transaction_hash = EXCLUDED.transaction_hash, timestamp = EXCLUDED.timestamp, sender_address = EXCLUDED.sender_address, receiver_address = EXCLUDED.receiver_address, amount = EXCLUDED.amount;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('1555', 1015, 'new_hash5', '2021-10-24 22:00:00', 'new_sender5', 'new_receiver5', 1500.00) ON CONFLICT (transaction_id) DO UPDATE SET block_number = EXCLUDED.block_number, transaction_hash = EXCLUDED.transaction_hash, timestamp = EXCLUDED.timestamp, sender_address = EXCLUDED.sender_address, receiver_address = EXCLUDED.receiver_address, amount = EXCLUDED.amount;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('1666', 1016, 'new_hash6', '2021-10-25 23:00:00', 'new_sender6', 'new_receiver6', 1600.00) ON CONFLICT (transaction_id) DO UPDATE SET block_number = EXCLUDED.block_number, transaction_hash = EXCLUDED.transaction_hash, timestamp = EXCLUDED.timestamp, sender_address = EXCLUDED.sender_address, receiver_address = EXCLUDED.receiver_address, amount = EXCLUDED.amount;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('1777', 1017, 'new_hash7', '2021-10-26 00:00:00', 'new_sender7', 'new_receiver7', 1700.00) ON CONFLICT (transaction_id) DO UPDATE SET block_number = EXCLUDED.block_number, transaction_hash = EXCLUDED.transaction_hash, timestamp = EXCLUDED.timestamp, sender_address = EXCLUDED.sender_address, receiver_address = EXCLUDED.receiver_address, amount = EXCLUDED.amount;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('1888', 1018, 'new_hash8', '2021-10-27 01:00:00', 'new_sender8', 'new_receiver8', 1800.00) ON CONFLICT (transaction_id) DO UPDATE SET block_number = EXCLUDED.block_number, transaction_hash = EXCLUDED.transaction_hash, timestamp = EXCLUDED.timestamp, sender_address = EXCLUDED.sender_address, receiver_address = EXCLUDED.receiver_address, amount = EXCLUDED.amount;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, timestamp, sender_address, receiver_address, amount) VALUES ('1999', 1019, 'new_hash9', '2021-10-28 02:00:00', 'new_sender9', 'new_receiver9', 1900.00) ON CONFLICT (transaction_id) DO UPDATE SET block_number = EXCLUDED.block_number, transaction_hash = EXCLUDED.transaction_hash, timestamp = EXCLUDED.timestamp, sender_address = EXCLUDED.sender_address, receiver_address = EXCLUDED.receiver_address, amount = EXCLUDED.amount;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO blockchain_transactions (id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (1, 'hash1', '2022-01-01', 'sender1', 'receiver1', 100.00) ON DUPLICATE KEY UPDATE transaction_hash='hash1_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO blockchain_transactions (id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (2, 'hash2', '2022-01-02', 'sender2', 'receiver2', 200.00) ON DUPLICATE KEY UPDATE transaction_hash='hash2_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO blockchain_transactions (id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (3, 'hash3', '2022-01-03', 'sender2', 'receiver3', 300.00) ON DUPLICATE KEY UPDATE transaction_hash='hash3_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO blockchain_transactions (id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (4, 'hash4', '2022-01-04', 'sender3', 'receiver2', 400.00) ON DUPLICATE KEY UPDATE transaction_hash='hash4_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO blockchain_transactions (id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (5, 'hash5', '2022-01-05', 'sender1', 'receiver3', 500.00) ON DUPLICATE KEY UPDATE transaction_hash='hash5_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO blockchain_transactions (id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (6, 'hash6', '2022-01-06', 'sender1', 'receiver2', 600.00) ON DUPLICATE KEY UPDATE transaction_hash='hash6_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO blockchain_transactions (id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (7, 'hash7', '2022-01-07', 'sender3', 'receiver1', 700.00) ON DUPLICATE KEY UPDATE transaction_hash='hash7_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO blockchain_transactions (id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (8, 'hash8', '2022-01-08', 'sender2', 'receiver3', 800.00) ON DUPLICATE KEY UPDATE transaction_hash='hash8_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO blockchain_transactions (id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (9, 'hash9', '2022-01-09', 'sender1', 'receiver2', 900.00) ON DUPLICATE KEY UPDATE transaction_hash='hash9_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO blockchain_transactions (id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (10, 'hash10', '2022-01-10', 'sender3', 'receiver1', 1000.00) ON DUPLICATE KEY UPDATE transaction_hash='hash10_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO blockchain_blocks (block_number, block_hash, block_timestamp, num_transactions, miner_address) VALUES (1, 'block_hash1', '2022-01-01 12:00:00', 5, 'miner1') ON DUPLICATE KEY UPDATE block_hash='block_hash1_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO blockchain_blocks (block_number, block_hash, block_timestamp, num_transactions, miner_address) VALUES (2, 'block_hash2', '2022-01-02 12:00:00', 3, 'miner2') ON DUPLICATE KEY UPDATE block_hash='block_hash2_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO blockchain_blocks (block_number, block_hash, block_timestamp, num_transactions, miner_address) VALUES (3, 'block_hash3', '2022-01-03 12:00:00', 6, 'miner3') ON DUPLICATE KEY UPDATE block_hash='block_hash3_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO blockchain_blocks (block_number, block_hash, block_timestamp, num_transactions, miner_address) VALUES (4, 'block_hash4', '2022-01-04 12:00:00', 4, 'miner1') ON DUPLICATE KEY UPDATE block_hash='block_hash4_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO blockchain_blocks (block_number, block_hash, block_timestamp, num_transactions, miner_address) VALUES (5, 'block_hash5', '2022-01-05 12:00:00', 7, 'miner2') ON DUPLICATE KEY UPDATE block_hash='block_hash5_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO blockchain_blocks (block_number, block_hash, block_timestamp, num_transactions, miner_address) VALUES (6, 'block_hash6', '2022-01-06 12:00:00', 5, 'miner3') ON DUPLICATE KEY UPDATE block_hash='block_hash6_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO blockchain_blocks (block_number, block_hash, block_timestamp, num_transactions, miner_address) VALUES (7, 'block_hash7', '2022-01-07 12:00:00', 8, 'miner1') ON DUPLICATE KEY UPDATE block_hash='block_hash7_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO blockchain_blocks (block_number, block_hash, block_timestamp, num_transactions, miner_address) VALUES (8, 'block_hash8', '2022-01-08 12:00:00', 6, 'miner3') ON DUPLICATE KEY UPDATE block_hash='block_hash8_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO blockchain_blocks (block_number, block_hash, block_timestamp, num_transactions, miner_address) VALUES (9, 'block_hash9', '2022-01-09 12:00:00', 10, 'miner2') ON DUPLICATE KEY UPDATE block_hash='block_hash9_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO blockchain_blocks (block_number, block_hash, block_timestamp, num_transactions, miner_address) VALUES (10, 'block_hash10', '2022-01-10 12:00:00', 7, 'miner1') ON DUPLICATE KEY UPDATE block_hash='block_hash10_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (1, 'hash1', '2022-01-01', 'sender1', 'receiver1', 100.00) ON CONFLICT (id) DO UPDATE SET transaction_hash = 'updated_hash1', transaction_date = '2022-01-02', sender_address = 'updated_sender1', receiver_address = 'updated_receiver1', amount = 150.00;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (2, 'hash2', '2022-01-03', 'sender2', 'receiver2', 200.00) ON CONFLICT (id) DO UPDATE SET transaction_hash = 'updated_hash2', transaction_date = '2022-01-04', sender_address = 'updated_sender2', receiver_address = 'updated_receiver2', amount = 250.00;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (3, 'hash3', '2022-01-05', 'sender3', 'receiver3', 300.00) ON CONFLICT (id) DO UPDATE SET transaction_hash = 'updated_hash3', transaction_date = '2022-01-06', sender_address = 'updated_sender3', receiver_address = 'updated_receiver3', amount = 350.00;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (4, 'hash4', '2022-01-07', 'sender4', 'receiver4', 400.00) ON CONFLICT (id) DO UPDATE SET transaction_hash = 'updated_hash4', transaction_date = '2022-01-08', sender_address = 'updated_sender4', receiver_address = 'updated_receiver4', amount = 450.00;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (5, 'hash5', '2022-01-09', 'sender5', 'receiver5', 500.00) ON CONFLICT (id) DO UPDATE SET transaction_hash = 'updated_hash5', transaction_date = '2022-01-10', sender_address = 'updated_sender5', receiver_address = 'updated_receiver5', amount = 550.00;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (6, 'hash6', '2022-01-11', 'sender6', 'receiver6', 600.00) ON CONFLICT (id) DO UPDATE SET transaction_hash = 'updated_hash6', transaction_date = '2022-01-12', sender_address = 'updated_sender6', receiver_address = 'updated_receiver6', amount = 650.00;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (7, 'hash7', '2022-01-13', 'sender7', 'receiver7', 700.00) ON CONFLICT (id) DO UPDATE SET transaction_hash = 'updated_hash7', transaction_date = '2022-01-14', sender_address = 'updated_sender7', receiver_address = 'updated_receiver7', amount = 750.00;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (8, 'hash8', '2022-01-15', 'sender8', 'receiver8', 800.00) ON CONFLICT (id) DO UPDATE SET transaction_hash = 'updated_hash8', transaction_date = '2022-01-16', sender_address = 'updated_sender8', receiver_address = 'updated_receiver8', amount = 850.00;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (9, 'hash9', '2022-01-17', 'sender9', 'receiver9', 900.00) ON CONFLICT (id) DO UPDATE SET transaction_hash = 'updated_hash9', transaction_date = '2022-01-18', sender_address = 'updated_sender9', receiver_address = 'updated_receiver9', amount = 950.00;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (10, 'hash10', '2022-01-19', 'sender10', 'receiver10', 1000.00) ON CONFLICT (id) DO UPDATE SET transaction_hash = 'updated_hash10', transaction_date = '2022-01-20', sender_address = 'updated_sender10', receiver_address = 'updated_receiver10', amount = 1050.00;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (11, 'hash11', '2022-01-21', 'sender11', 'receiver11', 1100.00) ON CONFLICT (id) DO UPDATE SET transaction_hash = 'updated_hash11', transaction_date = '2022-01-22', sender_address = 'updated_sender11', receiver_address = 'updated_receiver11', amount = 1150.00;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (12, 'hash12', '2022-01-23', 'sender12', 'receiver12', 1200.00) ON CONFLICT (id) DO UPDATE SET transaction_hash = 'updated_hash12', transaction_date = '2022-01-24', sender_address = 'updated_sender12', receiver_address = 'updated_receiver12', amount = 1250.00;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (13, 'hash13', '2022-01-25', 'sender13', 'receiver13', 1300.00) ON CONFLICT (id) DO UPDATE SET transaction_hash = 'updated_hash13', transaction_date = '2022-01-26', sender_address = 'updated_sender13', receiver_address = 'updated_receiver13', amount = 1350.00;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (14, 'hash14', '2022-01-27', 'sender14', 'receiver14', 1400.00) ON CONFLICT (id) DO UPDATE SET transaction_hash = 'updated_hash14', transaction_date = '2022-01-28', sender_address = 'updated_sender14', receiver_address = 'updated_receiver14', amount = 1450.00;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (15, 'hash15', '2022-01-29', 'sender15', 'receiver15', 1500.00) ON CONFLICT (id) DO UPDATE SET transaction_hash = 'updated_hash15', transaction_date = '2022-01-30', sender_address = 'updated_sender15', receiver_address = 'updated_receiver15', amount = 1550.00;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (16, 'hash16', '2022-01-31', 'sender16', 'receiver16', 1600.00) ON CONFLICT (id) DO UPDATE SET transaction_hash = 'updated_hash16', transaction_date = '2022-02-01', sender_address = 'updated_sender16', receiver_address = 'updated_receiver16', amount = 1650.00;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (17, 'hash17', '2022-02-02', 'sender17', 'receiver17', 1700.00) ON CONFLICT (id) DO UPDATE SET transaction_hash = 'updated_hash17', transaction_date = '2022-02-03', sender_address = 'updated_sender17', receiver_address = 'updated_receiver17', amount = 1750.00;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (18, 'hash18', '2022-02-04', 'sender18', 'receiver18', 1800.00) ON CONFLICT (id) DO UPDATE SET transaction_hash = 'updated_hash18', transaction_date = '2022-02-05', sender_address = 'updated_sender18', receiver_address = 'updated_receiver18', amount = 1850.00;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (19, 'hash19', '2022-02-06', 'sender19', 'receiver19', 1900.00) ON CONFLICT (id) DO UPDATE SET transaction_hash = 'updated_hash19', transaction_date = '2022-02-07', sender_address = 'updated_sender19', receiver_address = 'updated_receiver19', amount = 1950.00;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (20, 'hash20', '2022-02-08', 'sender20', 'receiver20', 2000.00) ON CONFLICT (id) DO UPDATE SET transaction_hash = 'updated_hash20', transaction_date = '2022-02-09', sender_address = 'updated_sender20', receiver_address = 'updated_receiver20', amount = 2050.00;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (1, 1, 'hash1', '2022-01-01 12:00:00', 'sender1', 'receiver1', 100.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id = 1, transaction_hash = 'updated_hash1', transaction_date = '2022-01-01 13:00:00', sender_address = 'updated_sender1', receiver_address = 'updated_receiver1', amount = 150.0000",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (2, 1, 'hash2', '2022-01-02 12:00:00', 'sender2', 'receiver2', 200.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id = 1, transaction_hash = 'updated_hash2', transaction_date = '2022-01-02 13:00:00', sender_address = 'updated_sender2', receiver_address = 'updated_receiver2', amount = 250.0000",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (3, 1, 'hash3', '2022-01-03 12:00:00', 'sender3', 'receiver3', 300.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id = 1, transaction_hash = 'updated_hash3', transaction_date = '2022-01-03 13:00:00', sender_address = 'updated_sender3', receiver_address = 'updated_receiver3', amount = 350.0000",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (4, 1, 'hash4', '2022-01-04 12:00:00', 'sender4', 'receiver4', 400.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id = 1, transaction_hash = 'updated_hash4', transaction_date = '2022-01-04 13:00:00', sender_address = 'updated_sender4', receiver_address = 'updated_receiver4', amount = 450.0000",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (5, 1, 'hash5', '2022-01-05 12:00:00', 'sender5', 'receiver5', 500.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id = 1, transaction_hash = 'updated_hash5', transaction_date = '2022-01-05 13:00:00', sender_address = 'updated_sender5', receiver_address = 'updated_receiver5', amount = 550.0000",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (6, 1, 'hash6', '2022-01-06 12:00:00', 'sender6', 'receiver6', 600.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id = 1, transaction_hash = 'updated_hash6', transaction_date = '2022-01-06 13:00:00', sender_address = 'updated_sender6', receiver_address = 'updated_receiver6', amount = 650.0000",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (7, 1, 'hash7', '2022-01-07 12:00:00', 'sender7', 'receiver7', 700.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id = 1, transaction_hash = 'updated_hash7', transaction_date = '2022-01-07 13:00:00', sender_address = 'updated_sender7', receiver_address = 'updated_receiver7', amount = 750.0000",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (8, 1, 'hash8', '2022-01-08 12:00:00', 'sender8', 'receiver8', 800.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id = 1, transaction_hash = 'updated_hash8', transaction_date = '2022-01-08 13:00:00', sender_address = 'updated_sender8', receiver_address = 'updated_receiver8', amount = 850.0000",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (9, 1, 'hash9', '2022-01-09 12:00:00', 'sender9', 'receiver9', 900.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id = 1, transaction_hash = 'updated_hash9', transaction_date = '2022-01-09 13:00:00', sender_address = 'updated_sender9', receiver_address = 'updated_receiver9', amount = 950.0000",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (10, 1, 'hash10', '2022-01-10 12:00:00', 'sender10', 'receiver10', 1000.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id = 1, transaction_hash = 'updated_hash10', transaction_date = '2022-01-10 13:00:00', sender_address = 'updated_sender10', receiver_address = 'updated_receiver10', amount = 1050.0000",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (11, 2, 'hash11', '2022-01-11 12:00:00', 'sender11', 'receiver11', 1100.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id = 2, transaction_hash = 'updated_hash11', transaction_date = '2022-01-11 13:00:00', sender_address = 'updated_sender11', receiver_address = 'updated_receiver11', amount = 1150.0000",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (12, 2, 'hash12', '2022-01-12 12:00:00', 'sender12', 'receiver12', 1200.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id = 2, transaction_hash = 'updated_hash12', transaction_date = '2022-01-12 13:00:00', sender_address = 'updated_sender12', receiver_address = 'updated_receiver12', amount = 1250.0000",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (13, 2, 'hash13', '2022-01-13 12:00:00', 'sender13', 'receiver13', 1300.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id = 2, transaction_hash = 'updated_hash13', transaction_date = '2022-01-13 13:00:00', sender_address = 'updated_sender13', receiver_address = 'updated_receiver13', amount = 1350.0000",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (14, 2, 'hash14', '2022-01-14 12:00:00', 'sender14', 'receiver14', 1400.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id = 2, transaction_hash = 'updated_hash14', transaction_date = '2022-01-14 13:00:00', sender_address = 'updated_sender14', receiver_address = 'updated_receiver14', amount = 1450.0000",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (15, 2, 'hash15', '2022-01-15 12:00:00', 'sender15', 'receiver15', 1500.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id = 2, transaction_hash = 'updated_hash15', transaction_date = '2022-01-15 13:00:00', sender_address = 'updated_sender15', receiver_address = 'updated_receiver15', amount = 1550.0000",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (16, 2, 'hash16', '2022-01-16 12:00:00', 'sender16', 'receiver16', 1600.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id = 2, transaction_hash = 'updated_hash16', transaction_date = '2022-01-16 13:00:00', sender_address = 'updated_sender16', receiver_address = 'updated_receiver16', amount = 1650.0000",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (17, 2, 'hash17', '2022-01-17 12:00:00', 'sender17', 'receiver17', 1700.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id = 2, transaction_hash = 'updated_hash17', transaction_date = '2022-01-17 13:00:00', sender_address = 'updated_sender17', receiver_address = 'updated_receiver17', amount = 1750.0000",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (18, 2, 'hash18', '2022-01-18 12:00:00', 'sender18', 'receiver18', 1800.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id = 2, transaction_hash = 'updated_hash18', transaction_date = '2022-01-18 13:00:00', sender_address = 'updated_sender18', receiver_address = 'updated_receiver18', amount = 1850.0000",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (19, 2, 'hash19', '2022-01-19 12:00:00', 'sender19', 'receiver19', 1900.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id = 2, transaction_hash = 'updated_hash19', transaction_date = '2022-01-19 13:00:00', sender_address = 'updated_sender19', receiver_address = 'updated_receiver19', amount = 1950.0000",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (20, 2, 'hash20', '2022-01-20 12:00:00', 'sender20', 'receiver20', 2000.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id = 2, transaction_hash = 'updated_hash20', transaction_date = '2022-01-20 13:00:00', sender_address = 'updated_sender20', receiver_address = 'updated_receiver20', amount = 2050.0000",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (1, 1001, 'hash1', '2022-01-01 10:00:00', 'addr1', 'addr2', 100.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id=1001, transaction_hash='hash1', transaction_date='2022-01-01 10:00:00', sender_address='addr1', receiver_address='addr2', amount=100.0000;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (2, 1002, 'hash2', '2022-01-02 11:00:00', 'addr3', 'addr4', 200.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id=1002, transaction_hash='hash2', transaction_date='2022-01-02 11:00:00', sender_address='addr3', receiver_address='addr4', amount=200.0000;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (3, 1003, 'hash3', '2022-01-03 12:00:00', 'addr5', 'addr6', 300.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id=1003, transaction_hash='hash3', transaction_date='2022-01-03 12:00:00', sender_address='addr5', receiver_address='addr6', amount=300.0000;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (4, 1004, 'hash4', '2022-01-04 13:00:00', 'addr7', 'addr8', 400.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id=1004, transaction_hash='hash4', transaction_date='2022-01-04 13:00:00', sender_address='addr7', receiver_address='addr8', amount=400.0000;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (5, 1005, 'hash5', '2022-01-05 14:00:00', 'addr9', 'addr10', 500.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id=1005, transaction_hash='hash5', transaction_date='2022-01-05 14:00:00', sender_address='addr9', receiver_address='addr10', amount=500.0000;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (6, 1006, 'hash6', '2022-01-06 15:00:00', 'addr11', 'addr12', 600.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id=1006, transaction_hash='hash6', transaction_date='2022-01-06 15:00:00', sender_address='addr11', receiver_address='addr12', amount=600.0000;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (7, 1007, 'hash7', '2022-01-07 16:00:00', 'addr13', 'addr14', 700.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id=1007, transaction_hash='hash7', transaction_date='2022-01-07 16:00:00', sender_address='addr13', receiver_address='addr14', amount=700.0000;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (8, 1008, 'hash8', '2022-01-08 17:00:00', 'addr15', 'addr16', 800.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id=1008, transaction_hash='hash8', transaction_date='2022-01-08 17:00:00', sender_address='addr15', receiver_address='addr16', amount=800.0000;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (9, 1009, 'hash9', '2022-01-09 18:00:00', 'addr17', 'addr18', 900.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id=1009, transaction_hash='hash9', transaction_date='2022-01-09 18:00:00', sender_address='addr17', receiver_address='addr18', amount=900.0000;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (10, 1010, 'hash10', '2022-01-10 19:00:00', 'addr19', 'addr20', 1000.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id=1010, transaction_hash='hash10', transaction_date='2022-01-10 19:00:00', sender_address='addr19', receiver_address='addr20', amount=1000.0000;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (11, 1011, 'hash11', '2022-01-11 20:00:00', 'addr21', 'addr22', 1100.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id=1011, transaction_hash='hash11', transaction_date='2022-01-11 20:00:00', sender_address='addr21', receiver_address='addr22', amount=1100.0000;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (12, 1012, 'hash12', '2022-01-12 21:00:00', 'addr23', 'addr24', 1200.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id=1012, transaction_hash='hash12', transaction_date='2022-01-12 21:00:00', sender_address='addr23', receiver_address='addr24', amount=1200.0000;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (13, 1013, 'hash13', '2022-01-13 22:00:00', 'addr25', 'addr26', 1300.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id=1013, transaction_hash='hash13', transaction_date='2022-01-13 22:00:00', sender_address='addr25', receiver_address='addr26', amount=1300.0000;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (14, 1014, 'hash14', '2022-01-14 23:00:00', 'addr27', 'addr28', 1400.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id=1014, transaction_hash='hash14', transaction_date='2022-01-14 23:00:00', sender_address='addr27', receiver_address='addr28', amount=1400.0000;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (15, 1015, 'hash15', '2022-01-15 00:00:00', 'addr29', 'addr30', 1500.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id=1015, transaction_hash='hash15', transaction_date='2022-01-15 00:00:00', sender_address='addr29', receiver_address='addr30', amount=1500.0000;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (16, 1016, 'hash16', '2022-01-16 01:00:00', 'addr31', 'addr32', 1600.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id=1016, transaction_hash='hash16', transaction_date='2022-01-16 01:00:00', sender_address='addr31', receiver_address='addr32', amount=1600.0000;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (17, 1017, 'hash17', '2022-01-17 02:00:00', 'addr33', 'addr34', 1700.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id=1017, transaction_hash='hash17', transaction_date='2022-01-17 02:00:00', sender_address='addr33', receiver_address='addr34', amount=1700.0000;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (18, 1018, 'hash18', '2022-01-18 03:00:00', 'addr35', 'addr36', 1800.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id=1018, transaction_hash='hash18', transaction_date='2022-01-18 03:00:00', sender_address='addr35', receiver_address='addr36', amount=1800.0000;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (19, 1019, 'hash19', '2022-01-19 04:00:00', 'addr37', 'addr38', 1900.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id=1019, transaction_hash='hash19', transaction_date='2022-01-19 04:00:00', sender_address='addr37', receiver_address='addr38', amount=1900.0000;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_id, transaction_hash, transaction_date, sender_address, receiver_address, amount) VALUES (20, 1020, 'hash20', '2022-01-20 05:00:00', 'addr39', 'addr40', 2000.0000) ON CONFLICT (transaction_id) DO UPDATE SET block_id=1020, transaction_hash='hash20', transaction_date='2022-01-20 05:00:00', sender_address='addr39', receiver_address='addr40', amount=2000.0000;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, transaction_hash, block_number, transaction_amount, transaction_timestamp) VALUES (1, 'hash1', 100, 10.5, '2021-07-01 10:00:00') ON DUPLICATE KEY UPDATE transaction_hash = 'hash1_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, transaction_hash, block_number, transaction_amount, transaction_timestamp) VALUES (2, 'hash2', 200, 20.5, '2021-07-02 11:00:00') ON DUPLICATE KEY UPDATE transaction_hash = 'hash2_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, transaction_hash, block_number, transaction_amount, transaction_timestamp) VALUES (3, 'hash3', 300, 30.5, '2021-07-03 12:00:00') ON DUPLICATE KEY UPDATE transaction_hash = 'hash3_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, transaction_hash, block_number, transaction_amount, transaction_timestamp) VALUES (4, 'hash4', 400, 40.5, '2021-07-04 13:00:00') ON DUPLICATE KEY UPDATE transaction_hash = 'hash4_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, transaction_hash, block_number, transaction_amount, transaction_timestamp) VALUES (5, 'hash5', 500, 50.5, '2021-07-05 14:00:00') ON DUPLICATE KEY UPDATE transaction_hash = 'hash5_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, transaction_hash, block_number, transaction_amount, transaction_timestamp) VALUES (6, 'hash6', 600, 60.5, '2021-07-06 15:00:00') ON DUPLICATE KEY UPDATE transaction_hash = 'hash6_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, transaction_hash, block_number, transaction_amount, transaction_timestamp) VALUES (7, 'hash7', 700, 70.5, '2021-07-07 16:00:00') ON DUPLICATE KEY UPDATE transaction_hash = 'hash7_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, transaction_hash, block_number, transaction_amount, transaction_timestamp) VALUES (8, 'hash8', 800, 80.5, '2021-07-08 17:00:00') ON DUPLICATE KEY UPDATE transaction_hash = 'hash8_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, transaction_hash, block_number, transaction_amount, transaction_timestamp) VALUES (9, 'hash9', 900, 90.5, '2021-07-09 18:00:00') ON DUPLICATE KEY UPDATE transaction_hash = 'hash9_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, transaction_hash, block_number, transaction_amount, transaction_timestamp) VALUES (10, 'hash10', 1000, 100.5, '2021-07-10 19:00:00') ON DUPLICATE KEY UPDATE transaction_hash = 'hash10_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, transaction_hash, block_number, transaction_amount, transaction_timestamp) VALUES (11, 'hash11', 1100, 110.5, '2021-07-11 20:00:00') ON DUPLICATE KEY UPDATE transaction_hash = 'hash11_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, transaction_hash, block_number, transaction_amount, transaction_timestamp) VALUES (12, 'hash12', 1200, 120.5, '2021-07-12 21:00:00') ON DUPLICATE KEY UPDATE transaction_hash = 'hash12_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, transaction_hash, block_number, transaction_amount, transaction_timestamp) VALUES (13, 'hash13', 1300, 130.5, '2021-07-13 22:00:00') ON DUPLICATE KEY UPDATE transaction_hash = 'hash13_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, transaction_hash, block_number, transaction_amount, transaction_timestamp) VALUES (14, 'hash14', 1400, 140.5, '2021-07-14 23:00:00') ON DUPLICATE KEY UPDATE transaction_hash = 'hash14_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, transaction_hash, block_number, transaction_amount, transaction_timestamp) VALUES (15, 'hash15', 1500, 150.5, '2021-07-15 00:00:00') ON DUPLICATE KEY UPDATE transaction_hash = 'hash15_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, transaction_hash, block_number, transaction_amount, transaction_timestamp) VALUES (16, 'hash16', 1600, 160.5, '2021-07-16 01:00:00') ON DUPLICATE KEY UPDATE transaction_hash = 'hash16_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, transaction_hash, block_number, transaction_amount, transaction_timestamp) VALUES (17, 'hash17', 1700, 170.5, '2021-07-17 02:00:00') ON DUPLICATE KEY UPDATE transaction_hash = 'hash17_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, transaction_hash, block_number, transaction_amount, transaction_timestamp) VALUES (18, 'hash18', 1800, 180.5, '2021-07-18 03:00:00') ON DUPLICATE KEY UPDATE transaction_hash = 'hash18_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, transaction_hash, block_number, transaction_amount, transaction_timestamp) VALUES (19, 'hash19', 1900, 190.5, '2021-07-19 04:00:00') ON DUPLICATE KEY UPDATE transaction_hash = 'hash19_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, transaction_hash, block_number, transaction_amount, transaction_timestamp) VALUES (20, 'hash20', 2000, 200.5, '2021-07-20 05:00:00') ON DUPLICATE KEY UPDATE transaction_hash = 'hash20_updated';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, transaction_hash, block_number, transaction_amount, transaction_timestamp) VALUES (1, 'hash1', 1000, 10.5, '2021-10-20 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET transaction_hash = 'new_hash1';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, transaction_hash, block_number, transaction_amount, transaction_timestamp) VALUES (2, 'hash2', 2000, 20.5, '2021-10-21 09:00:00') ON CONFLICT (transaction_id) DO UPDATE SET transaction_hash = 'new_hash2';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO block_information (block_number, block_hash, block_timestamp, miner_address) VALUES (1000, 'block_hash1', '2021-10-20 12:00:00', 'miner1') ON CONFLICT (block_number) DO UPDATE SET block_hash = 'new_block_hash1';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO block_information (block_number, block_hash, block_timestamp, miner_address) VALUES (2000, 'block_hash2', '2021-10-21 14:00:00', 'miner2') ON CONFLICT (block_number) DO UPDATE SET block_hash = 'new_block_hash2';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO transaction_analysis (analysis_id, transaction_id, analysis_result, analysis_timestamp) VALUES (1, 1, 'result1', '2021-10-20 15:00:00') ON CONFLICT (analysis_id) DO UPDATE SET analysis_result = 'new_result1';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO transaction_analysis (analysis_id, transaction_id, analysis_result, analysis_timestamp) VALUES (2, 2, 'result2', '2021-10-21 16:00:00') ON CONFLICT (analysis_id) DO UPDATE SET analysis_result = 'new_result2';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO transaction_history (history_id, transaction_id, previous_transaction_id, history_timestamp) VALUES (1, 1, 0, '2021-10-20 18:00:00') ON CONFLICT (history_id) DO UPDATE SET previous_transaction_id = 0;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO transaction_history (history_id, transaction_id, previous_transaction_id, history_timestamp) VALUES (2, 2, 1, '2021-10-21 20:00:00') ON CONFLICT (history_id) DO UPDATE SET previous_transaction_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, transaction_hash, block_number, transaction_amount, transaction_timestamp) VALUES (3, 'hash3', 3000, 30.5, '2021-10-22 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET transaction_hash = 'new_hash3';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, transaction_hash, block_number, transaction_amount, transaction_timestamp) VALUES (4, 'hash4', 4000, 40.5, '2021-10-23 09:00:00') ON CONFLICT (transaction_id) DO UPDATE SET transaction_hash = 'new_hash4';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO block_information (block_number, block_hash, block_timestamp, miner_address) VALUES (3000, 'block_hash3', '2021-10-22 12:00:00', 'miner3') ON CONFLICT (block_number) DO UPDATE SET block_hash = 'new_block_hash3';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO block_information (block_number, block_hash, block_timestamp, miner_address) VALUES (4000, 'block_hash4', '2021-10-23 14:00:00', 'miner4') ON CONFLICT (block_number) DO UPDATE SET block_hash = 'new_block_hash4';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO transaction_analysis (analysis_id, transaction_id, analysis_result, analysis_timestamp) VALUES (3, 3, 'result3', '2021-10-22 15:00:00') ON CONFLICT (analysis_id) DO UPDATE SET analysis_result = 'new_result3';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO transaction_analysis (analysis_id, transaction_id, analysis_result, analysis_timestamp) VALUES (4, 4, 'result4', '2021-10-23 16:00:00') ON CONFLICT (analysis_id) DO UPDATE SET analysis_result = 'new_result4';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO transaction_history (history_id, transaction_id, previous_transaction_id, history_timestamp) VALUES (3, 3, 2, '2021-10-22 18:00:00') ON CONFLICT (history_id) DO UPDATE SET previous_transaction_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO transaction_history (history_id, transaction_id, previous_transaction_id, history_timestamp) VALUES (4, 4, 3, '2021-10-23 20:00:00') ON CONFLICT (history_id) DO UPDATE SET previous_transaction_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, transaction_hash, block_number, transaction_amount, transaction_timestamp) VALUES (5, 'hash5', 5000, 50.5, '2021-10-24 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET transaction_hash = 'new_hash5';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, transaction_hash, block_number, transaction_amount, transaction_timestamp) VALUES (6, 'hash6', 6000, 60.5, '2021-10-25 09:00:00') ON CONFLICT (transaction_id) DO UPDATE SET transaction_hash = 'new_hash6';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO block_information (block_number, block_hash, block_timestamp, miner_address) VALUES (5000, 'block_hash5', '2021-10-24 12:00:00', 'miner5') ON CONFLICT (block_number) DO UPDATE SET block_hash = 'new_block_hash5';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO block_information (block_number, block_hash, block_timestamp, miner_address) VALUES (6000, 'block_hash6', '2021-10-25 14:00:00', 'miner6') ON CONFLICT (block_number) DO UPDATE SET block_hash = 'new_block_hash6';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO transaction_analysis (analysis_id, transaction_id, analysis_result, analysis_timestamp) VALUES (5, 5, 'result5', '2021-10-24 15:00:00') ON CONFLICT (analysis_id) DO UPDATE SET analysis_result = 'new_result5';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO transaction_analysis (analysis_id, transaction_id, analysis_result, analysis_timestamp) VALUES (6, 6, 'result6', '2021-10-25 16:00:00') ON CONFLICT (analysis_id) DO UPDATE SET analysis_result = 'new_result6';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO transaction_history (history_id, transaction_id, previous_transaction_id, history_timestamp) VALUES (5, 5, 4, '2021-10-24 18:00:00') ON CONFLICT (history_id) DO UPDATE SET previous_transaction_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO transaction_history (history_id, transaction_id, previous_transaction_id, history_timestamp) VALUES (6, 6, 5, '2021-10-25 20:00:00') ON CONFLICT (history_id) DO UPDATE SET previous_transaction_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  transaction_hash VARCHAR(255),\n  sender_address VARCHAR(255),\n  receiver_address VARCHAR(255),\n  transaction_amount DECIMAL(18,2),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE blocks (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  previous_block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP\n);\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  address VARCHAR(255),\n  balance DECIMAL(18,2)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  sender_address_id INT,\n  receiver_address_id INT,\n  timestamp TIMESTAMP,\n  FOREIGN KEY (sender_address_id) REFERENCES addresses(address_id),\n  FOREIGN KEY (receiver_address_id) REFERENCES addresses(address_id)\n);\n\nCREATE TABLE transaction_metadata (\n  transaction_id INT PRIMARY KEY,\n  metadata_key VARCHAR(255),\n  metadata_value TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, sender_address, receiver_address, transaction_amount, timestamp) VALUES (1, 1001, 'hash1', 'sender1', 'receiver1', 10.50, '2022-01-01 10:00:00') ON DUPLICATE KEY UPDATE block_number = VALUES(block_number), transaction_hash = VALUES(transaction_hash), sender_address = VALUES(sender_address), receiver_address = VALUES(receiver_address), transaction_amount = VALUES(transaction_amount), timestamp = VALUES(timestamp);",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  transaction_hash VARCHAR(255),\n  sender_address VARCHAR(255),\n  receiver_address VARCHAR(255),\n  transaction_amount DECIMAL(18,2),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE blocks (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  previous_block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP\n);\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  address VARCHAR(255),\n  balance DECIMAL(18,2)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  sender_address_id INT,\n  receiver_address_id INT,\n  timestamp TIMESTAMP,\n  FOREIGN KEY (sender_address_id) REFERENCES addresses(address_id),\n  FOREIGN KEY (receiver_address_id) REFERENCES addresses(address_id)\n);\n\nCREATE TABLE transaction_metadata (\n  transaction_id INT PRIMARY KEY,\n  metadata_key VARCHAR(255),\n  metadata_value TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blocks (block_number, block_hash, previous_block_hash, block_timestamp) VALUES (1001, 'block_hash1', 'prev_hash1', '2022-01-01 12:00:00') ON DUPLICATE KEY UPDATE block_hash = VALUES(block_hash), previous_block_hash = VALUES(previous_block_hash), block_timestamp = VALUES(block_timestamp);",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  transaction_hash VARCHAR(255),\n  sender_address VARCHAR(255),\n  receiver_address VARCHAR(255),\n  transaction_amount DECIMAL(18,2),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE blocks (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  previous_block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP\n);\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  address VARCHAR(255),\n  balance DECIMAL(18,2)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  sender_address_id INT,\n  receiver_address_id INT,\n  timestamp TIMESTAMP,\n  FOREIGN KEY (sender_address_id) REFERENCES addresses(address_id),\n  FOREIGN KEY (receiver_address_id) REFERENCES addresses(address_id)\n);\n\nCREATE TABLE transaction_metadata (\n  transaction_id INT PRIMARY KEY,\n  metadata_key VARCHAR(255),\n  metadata_value TEXT\n);\n\n### STATEMENT\n\nINSERT INTO addresses (address_id, address, balance) VALUES (1, 'address1', 100.50) ON DUPLICATE KEY UPDATE address = VALUES(address), balance = VALUES(balance);",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  transaction_hash VARCHAR(255),\n  sender_address VARCHAR(255),\n  receiver_address VARCHAR(255),\n  transaction_amount DECIMAL(18,2),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE blocks (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  previous_block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP\n);\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  address VARCHAR(255),\n  balance DECIMAL(18,2)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  sender_address_id INT,\n  receiver_address_id INT,\n  timestamp TIMESTAMP,\n  FOREIGN KEY (sender_address_id) REFERENCES addresses(address_id),\n  FOREIGN KEY (receiver_address_id) REFERENCES addresses(address_id)\n);\n\nCREATE TABLE transaction_metadata (\n  transaction_id INT PRIMARY KEY,\n  metadata_key VARCHAR(255),\n  metadata_value TEXT\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, block_number, sender_address_id, receiver_address_id, timestamp) VALUES (1, 1001, 1, 2, '2022-01-01 10:30:00') ON DUPLICATE KEY UPDATE block_number = VALUES(block_number), sender_address_id = VALUES(sender_address_id), receiver_address_id = VALUES(receiver_address_id), timestamp = VALUES(timestamp);",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  transaction_hash VARCHAR(255),\n  sender_address VARCHAR(255),\n  receiver_address VARCHAR(255),\n  transaction_amount DECIMAL(18,2),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE blocks (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  previous_block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP\n);\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  address VARCHAR(255),\n  balance DECIMAL(18,2)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  sender_address_id INT,\n  receiver_address_id INT,\n  timestamp TIMESTAMP,\n  FOREIGN KEY (sender_address_id) REFERENCES addresses(address_id),\n  FOREIGN KEY (receiver_address_id) REFERENCES addresses(address_id)\n);\n\nCREATE TABLE transaction_metadata (\n  transaction_id INT PRIMARY KEY,\n  metadata_key VARCHAR(255),\n  metadata_value TEXT\n);\n\n### STATEMENT\n\nINSERT INTO transaction_metadata (transaction_id, metadata_key, metadata_value) VALUES (1, 'key1', 'value1') ON DUPLICATE KEY UPDATE metadata_key = VALUES(metadata_key), metadata_value = VALUES(metadata_value);",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  transaction_hash VARCHAR(255),\n  sender_address VARCHAR(255),\n  receiver_address VARCHAR(255),\n  transaction_amount DECIMAL(18,2),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE blocks (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  previous_block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP\n);\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  address VARCHAR(255),\n  balance DECIMAL(18,2)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  sender_address_id INT,\n  receiver_address_id INT,\n  timestamp TIMESTAMP,\n  FOREIGN KEY (sender_address_id) REFERENCES addresses(address_id),\n  FOREIGN KEY (receiver_address_id) REFERENCES addresses(address_id)\n);\n\nCREATE TABLE transaction_metadata (\n  transaction_id INT PRIMARY KEY,\n  metadata_key VARCHAR(255),\n  metadata_value TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, sender_address, receiver_address, transaction_amount, timestamp) VALUES (1, 1001, 'hash1', 'addr1', 'addr2', 10.0, '2022-01-01 12:00:00') ON CONFLICT (transaction_id) DO UPDATE SET block_number = EXCLUDED.block_number, transaction_hash = EXCLUDED.transaction_hash, sender_address = EXCLUDED.sender_address, receiver_address = EXCLUDED.receiver_address, transaction_amount = EXCLUDED.transaction_amount, timestamp = EXCLUDED.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  transaction_hash VARCHAR(255),\n  sender_address VARCHAR(255),\n  receiver_address VARCHAR(255),\n  transaction_amount DECIMAL(18,2),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE blocks (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  previous_block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP\n);\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  address VARCHAR(255),\n  balance DECIMAL(18,2)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  sender_address_id INT,\n  receiver_address_id INT,\n  timestamp TIMESTAMP,\n  FOREIGN KEY (sender_address_id) REFERENCES addresses(address_id),\n  FOREIGN KEY (receiver_address_id) REFERENCES addresses(address_id)\n);\n\nCREATE TABLE transaction_metadata (\n  transaction_id INT PRIMARY KEY,\n  metadata_key VARCHAR(255),\n  metadata_value TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blocks (block_number, block_hash, previous_block_hash, block_timestamp) VALUES (1001, 'block_hash1', 'prev_hash1', '2022-01-01 12:00:00') ON CONFLICT (block_number) DO UPDATE SET block_hash = EXCLUDED.block_hash, previous_block_hash = EXCLUDED.previous_block_hash, block_timestamp = EXCLUDED.block_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  transaction_hash VARCHAR(255),\n  sender_address VARCHAR(255),\n  receiver_address VARCHAR(255),\n  transaction_amount DECIMAL(18,2),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE blocks (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  previous_block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP\n);\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  address VARCHAR(255),\n  balance DECIMAL(18,2)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  sender_address_id INT,\n  receiver_address_id INT,\n  timestamp TIMESTAMP,\n  FOREIGN KEY (sender_address_id) REFERENCES addresses(address_id),\n  FOREIGN KEY (receiver_address_id) REFERENCES addresses(address_id)\n);\n\nCREATE TABLE transaction_metadata (\n  transaction_id INT PRIMARY KEY,\n  metadata_key VARCHAR(255),\n  metadata_value TEXT\n);\n\n### STATEMENT\n\nINSERT INTO addresses (address_id, address, balance) VALUES (1, 'addr1', 100.0) ON CONFLICT (address_id) DO UPDATE SET address = EXCLUDED.address, balance = EXCLUDED.balance;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  transaction_hash VARCHAR(255),\n  sender_address VARCHAR(255),\n  receiver_address VARCHAR(255),\n  transaction_amount DECIMAL(18,2),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE blocks (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  previous_block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP\n);\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  address VARCHAR(255),\n  balance DECIMAL(18,2)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  sender_address_id INT,\n  receiver_address_id INT,\n  timestamp TIMESTAMP,\n  FOREIGN KEY (sender_address_id) REFERENCES addresses(address_id),\n  FOREIGN KEY (receiver_address_id) REFERENCES addresses(address_id)\n);\n\nCREATE TABLE transaction_metadata (\n  transaction_id INT PRIMARY KEY,\n  metadata_key VARCHAR(255),\n  metadata_value TEXT\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, block_number, sender_address_id, receiver_address_id, timestamp) VALUES (1, 1001, 1, 2, '2022-01-01 12:00:00') ON CONFLICT (transaction_id) DO UPDATE SET block_number = EXCLUDED.block_number, sender_address_id = EXCLUDED.sender_address_id, receiver_address_id = EXCLUDED.receiver_address_id, timestamp = EXCLUDED.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  transaction_hash VARCHAR(255),\n  sender_address VARCHAR(255),\n  receiver_address VARCHAR(255),\n  transaction_amount DECIMAL(18,2),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE blocks (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  previous_block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP\n);\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  address VARCHAR(255),\n  balance DECIMAL(18,2)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  sender_address_id INT,\n  receiver_address_id INT,\n  timestamp TIMESTAMP,\n  FOREIGN KEY (sender_address_id) REFERENCES addresses(address_id),\n  FOREIGN KEY (receiver_address_id) REFERENCES addresses(address_id)\n);\n\nCREATE TABLE transaction_metadata (\n  transaction_id INT PRIMARY KEY,\n  metadata_key VARCHAR(255),\n  metadata_value TEXT\n);\n\n### STATEMENT\n\nINSERT INTO transaction_metadata (transaction_id, metadata_key, metadata_value) VALUES (1, 'key1', 'value1') ON CONFLICT (transaction_id) DO UPDATE SET metadata_key = EXCLUDED.metadata_key, metadata_value = EXCLUDED.metadata_value;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  transaction_hash VARCHAR(255),\n  sender_address VARCHAR(255),\n  receiver_address VARCHAR(255),\n  transaction_amount DECIMAL(18,2),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE blocks (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  previous_block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP\n);\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  address VARCHAR(255),\n  balance DECIMAL(18,2)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  sender_address_id INT,\n  receiver_address_id INT,\n  timestamp TIMESTAMP,\n  FOREIGN KEY (sender_address_id) REFERENCES addresses(address_id),\n  FOREIGN KEY (receiver_address_id) REFERENCES addresses(address_id)\n);\n\nCREATE TABLE transaction_metadata (\n  transaction_id INT PRIMARY KEY,\n  metadata_key VARCHAR(255),\n  metadata_value TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, sender_address, receiver_address, transaction_amount, timestamp) VALUES (2, 1002, 'hash2', 'addr3', 'addr4', 20.0, '2022-01-02 12:00:00') ON CONFLICT (transaction_id) DO UPDATE SET block_number = EXCLUDED.block_number, transaction_hash = EXCLUDED.transaction_hash, sender_address = EXCLUDED.sender_address, receiver_address = EXCLUDED.receiver_address, transaction_amount = EXCLUDED.transaction_amount, timestamp = EXCLUDED.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  transaction_hash VARCHAR(255),\n  sender_address VARCHAR(255),\n  receiver_address VARCHAR(255),\n  transaction_amount DECIMAL(18,2),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE blocks (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  previous_block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP\n);\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  address VARCHAR(255),\n  balance DECIMAL(18,2)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  sender_address_id INT,\n  receiver_address_id INT,\n  timestamp TIMESTAMP,\n  FOREIGN KEY (sender_address_id) REFERENCES addresses(address_id),\n  FOREIGN KEY (receiver_address_id) REFERENCES addresses(address_id)\n);\n\nCREATE TABLE transaction_metadata (\n  transaction_id INT PRIMARY KEY,\n  metadata_key VARCHAR(255),\n  metadata_value TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blocks (block_number, block_hash, previous_block_hash, block_timestamp) VALUES (1002, 'block_hash2', 'prev_hash2', '2022-01-02 12:00:00') ON CONFLICT (block_number) DO UPDATE SET block_hash = EXCLUDED.block_hash, previous_block_hash = EXCLUDED.previous_block_hash, block_timestamp = EXCLUDED.block_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  transaction_hash VARCHAR(255),\n  sender_address VARCHAR(255),\n  receiver_address VARCHAR(255),\n  transaction_amount DECIMAL(18,2),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE blocks (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  previous_block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP\n);\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  address VARCHAR(255),\n  balance DECIMAL(18,2)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  sender_address_id INT,\n  receiver_address_id INT,\n  timestamp TIMESTAMP,\n  FOREIGN KEY (sender_address_id) REFERENCES addresses(address_id),\n  FOREIGN KEY (receiver_address_id) REFERENCES addresses(address_id)\n);\n\nCREATE TABLE transaction_metadata (\n  transaction_id INT PRIMARY KEY,\n  metadata_key VARCHAR(255),\n  metadata_value TEXT\n);\n\n### STATEMENT\n\nINSERT INTO addresses (address_id, address, balance) VALUES (2, 'addr2', 200.0) ON CONFLICT (address_id) DO UPDATE SET address = EXCLUDED.address, balance = EXCLUDED.balance;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  transaction_hash VARCHAR(255),\n  sender_address VARCHAR(255),\n  receiver_address VARCHAR(255),\n  transaction_amount DECIMAL(18,2),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE blocks (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  previous_block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP\n);\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  address VARCHAR(255),\n  balance DECIMAL(18,2)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  sender_address_id INT,\n  receiver_address_id INT,\n  timestamp TIMESTAMP,\n  FOREIGN KEY (sender_address_id) REFERENCES addresses(address_id),\n  FOREIGN KEY (receiver_address_id) REFERENCES addresses(address_id)\n);\n\nCREATE TABLE transaction_metadata (\n  transaction_id INT PRIMARY KEY,\n  metadata_key VARCHAR(255),\n  metadata_value TEXT\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, block_number, sender_address_id, receiver_address_id, timestamp) VALUES (2, 1002, 2, 3, '2022-01-02 12:00:00') ON CONFLICT (transaction_id) DO UPDATE SET block_number = EXCLUDED.block_number, sender_address_id = EXCLUDED.sender_address_id, receiver_address_id = EXCLUDED.receiver_address_id, timestamp = EXCLUDED.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  transaction_hash VARCHAR(255),\n  sender_address VARCHAR(255),\n  receiver_address VARCHAR(255),\n  transaction_amount DECIMAL(18,2),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE blocks (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  previous_block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP\n);\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  address VARCHAR(255),\n  balance DECIMAL(18,2)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  sender_address_id INT,\n  receiver_address_id INT,\n  timestamp TIMESTAMP,\n  FOREIGN KEY (sender_address_id) REFERENCES addresses(address_id),\n  FOREIGN KEY (receiver_address_id) REFERENCES addresses(address_id)\n);\n\nCREATE TABLE transaction_metadata (\n  transaction_id INT PRIMARY KEY,\n  metadata_key VARCHAR(255),\n  metadata_value TEXT\n);\n\n### STATEMENT\n\nINSERT INTO transaction_metadata (transaction_id, metadata_key, metadata_value) VALUES (2, 'key2', 'value2') ON CONFLICT (transaction_id) DO UPDATE SET metadata_key = EXCLUDED.metadata_key, metadata_value = EXCLUDED.metadata_value;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  transaction_hash VARCHAR(255),\n  sender_address VARCHAR(255),\n  receiver_address VARCHAR(255),\n  transaction_amount DECIMAL(18,2),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE blocks (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  previous_block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP\n);\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  address VARCHAR(255),\n  balance DECIMAL(18,2)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  sender_address_id INT,\n  receiver_address_id INT,\n  timestamp TIMESTAMP,\n  FOREIGN KEY (sender_address_id) REFERENCES addresses(address_id),\n  FOREIGN KEY (receiver_address_id) REFERENCES addresses(address_id)\n);\n\nCREATE TABLE transaction_metadata (\n  transaction_id INT PRIMARY KEY,\n  metadata_key VARCHAR(255),\n  metadata_value TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blockchain_transactions (transaction_id, block_number, transaction_hash, sender_address, receiver_address, transaction_amount, timestamp) VALUES (3, 1003, 'hash3', 'addr4', 'addr5', 30.0, '2022-01-03 12:00:00') ON CONFLICT (transaction_id) DO UPDATE SET block_number = EXCLUDED.block_number, transaction_hash = EXCLUDED.transaction_hash, sender_address = EXCLUDED.sender_address, receiver_address = EXCLUDED.receiver_address, transaction_amount = EXCLUDED.transaction_amount, timestamp = EXCLUDED.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  transaction_hash VARCHAR(255),\n  sender_address VARCHAR(255),\n  receiver_address VARCHAR(255),\n  transaction_amount DECIMAL(18,2),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE blocks (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  previous_block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP\n);\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  address VARCHAR(255),\n  balance DECIMAL(18,2)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  sender_address_id INT,\n  receiver_address_id INT,\n  timestamp TIMESTAMP,\n  FOREIGN KEY (sender_address_id) REFERENCES addresses(address_id),\n  FOREIGN KEY (receiver_address_id) REFERENCES addresses(address_id)\n);\n\nCREATE TABLE transaction_metadata (\n  transaction_id INT PRIMARY KEY,\n  metadata_key VARCHAR(255),\n  metadata_value TEXT\n);\n\n### STATEMENT\n\nINSERT INTO blocks (block_number, block_hash, previous_block_hash, block_timestamp) VALUES (1003, 'block_hash3', 'prev_hash3', '2022-01-03 12:00:00') ON CONFLICT (block_number) DO UPDATE SET block_hash = EXCLUDED.block_hash, previous_block_hash = EXCLUDED.previous_block_hash, block_timestamp = EXCLUDED.block_timestamp;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  transaction_hash VARCHAR(255),\n  sender_address VARCHAR(255),\n  receiver_address VARCHAR(255),\n  transaction_amount DECIMAL(18,2),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE blocks (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  previous_block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP\n);\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  address VARCHAR(255),\n  balance DECIMAL(18,2)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  sender_address_id INT,\n  receiver_address_id INT,\n  timestamp TIMESTAMP,\n  FOREIGN KEY (sender_address_id) REFERENCES addresses(address_id),\n  FOREIGN KEY (receiver_address_id) REFERENCES addresses(address_id)\n);\n\nCREATE TABLE transaction_metadata (\n  transaction_id INT PRIMARY KEY,\n  metadata_key VARCHAR(255),\n  metadata_value TEXT\n);\n\n### STATEMENT\n\nINSERT INTO addresses (address_id, address, balance) VALUES (3, 'addr3', 300.0) ON CONFLICT (address_id) DO UPDATE SET address = EXCLUDED.address, balance = EXCLUDED.balance;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  transaction_hash VARCHAR(255),\n  sender_address VARCHAR(255),\n  receiver_address VARCHAR(255),\n  transaction_amount DECIMAL(18,2),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE blocks (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  previous_block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP\n);\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  address VARCHAR(255),\n  balance DECIMAL(18,2)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  sender_address_id INT,\n  receiver_address_id INT,\n  timestamp TIMESTAMP,\n  FOREIGN KEY (sender_address_id) REFERENCES addresses(address_id),\n  FOREIGN KEY (receiver_address_id) REFERENCES addresses(address_id)\n);\n\nCREATE TABLE transaction_metadata (\n  transaction_id INT PRIMARY KEY,\n  metadata_key VARCHAR(255),\n  metadata_value TEXT\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, block_number, sender_address_id, receiver_address_id, timestamp) VALUES (3, 1003, 3, 4, '2022-01-03 12:00:00') ON CONFLICT (transaction_id) DO UPDATE SET block_number = EXCLUDED.block_number, sender_address_id = EXCLUDED.sender_address_id, receiver_address_id = EXCLUDED.receiver_address_id, timestamp = EXCLUDED.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  transaction_hash VARCHAR(255),\n  sender_address VARCHAR(255),\n  receiver_address VARCHAR(255),\n  transaction_amount DECIMAL(18,2),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE blocks (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  previous_block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP\n);\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  address VARCHAR(255),\n  balance DECIMAL(18,2)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  sender_address_id INT,\n  receiver_address_id INT,\n  timestamp TIMESTAMP,\n  FOREIGN KEY (sender_address_id) REFERENCES addresses(address_id),\n  FOREIGN KEY (receiver_address_id) REFERENCES addresses(address_id)\n);\n\nCREATE TABLE transaction_metadata (\n  transaction_id INT PRIMARY KEY,\n  metadata_key VARCHAR(255),\n  metadata_value TEXT\n);\n\n### STATEMENT\n\nINSERT INTO transaction_metadata (transaction_id, metadata_key, metadata_value) VALUES (3, 'key3', 'value3') ON CONFLICT (transaction_id) DO UPDATE SET metadata_key = EXCLUDED.metadata_key, metadata_value = EXCLUDED.metadata_value;"
]