[
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nUPDATE blockchain_transactions SET amount = 1000.00 WHERE transaction_id = 'b8048afa-6187-43d5-8e61-fb36270b11b0';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nUPDATE blockchain_transactions SET block_number = 200 WHERE sender_address = '0x5e3f8d7350d7511468c81afe10eed30f410cabf9';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nUPDATE blockchain_transactions SET receiver_address = '0x8ac0d48a764f2b4f6c2127f800b74778f195c6e8' WHERE transaction_id = '9028e3fa-1b05-4931-8caf-3274ec288c1b';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nUPDATE blockchain_transactions SET amount = amount - 100 WHERE sender_address = '0x123abc'",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nUPDATE blockchain_transactions SET receiver_address = '0x456def' WHERE amount > 1000",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id UUID PRIMARY KEY,\n    block_number INT,\n    transaction_hash VARCHAR(255),\n    timestamp TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 2)\n);\n\n### STATEMENT\n\nUPDATE blockchain_transactions SET block_number = 10, timestamp = NOW() WHERE transaction_id = 'c4a620ee-86b2-4ae5-9174-6709a44eb36a'",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPDATE blockchain_transactions SET amount = amount + 100 WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPDATE blockchain_blocks SET miner_address = 'exampleminer' WHERE block_number = 10;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPDATE blockchain_transactions SET receiver_address = 'newreceiver@example.com' WHERE id = 2;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPDATE blockchain_transactions\nSET amount = amount * 1.05\nWHERE transaction_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPDATE blockchain_transactions\nSET sender_address = 'New Sender'\nWHERE sender_address = 'Old Sender';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255) NOT NULL,\n    transaction_date DATE NOT NULL,\n    sender_address VARCHAR(255) NOT NULL,\n    receiver_address VARCHAR(255) NOT NULL,\n    amount DECIMAL(18, 2) NOT NULL\n);\n\nCREATE TABLE blockchain_blocks (\n    block_number INT PRIMARY KEY,\n    block_hash VARCHAR(255) NOT NULL,\n    block_timestamp TIMESTAMP NOT NULL,\n    num_transactions INT NOT NULL,\n    miner_address VARCHAR(255) NOT NULL\n);\n\n### STATEMENT\n\nUPDATE blockchain_blocks\nSET miner_address = 'New Miner'\nWHERE block_timestamp < '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nUPDATE blockchain_transactions SET amount = amount + 100 WHERE transaction_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nUPDATE block_details SET miner_address = 'new_miner_address' WHERE block_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nUPDATE transaction_details SET success = TRUE WHERE transaction_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nUPDATE blockchain_transactions SET amount = amount + 100 WHERE transaction_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nUPDATE block_details SET transaction_count = transaction_count + 1, block_date = '2022-12-31 23:59:59' WHERE block_id = 201;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n    transaction_id INT PRIMARY KEY,\n    block_id INT,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    sender_address VARCHAR(255),\n    receiver_address VARCHAR(255),\n    amount DECIMAL(18, 4)\n);\n\nCREATE TABLE block_details (\n    block_id INT PRIMARY KEY,\n    block_hash VARCHAR(255),\n    block_date TIMESTAMP,\n    miner_address VARCHAR(255),\n    transaction_count INT\n);\n\nCREATE TABLE transaction_details (\n    transaction_id INT PRIMARY KEY,\n    transaction_hash VARCHAR(255),\n    transaction_date TIMESTAMP,\n    gas_fee DECIMAL(18, 4),\n    success BOOLEAN\n);\n\n### STATEMENT\n\nUPDATE transaction_details SET success = true WHERE gas_fee < 10.00;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE blockchain_transactions SET transaction_amount = 100 WHERE transaction_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE block_information SET miner_address = '0xABC123' WHERE block_number = 500;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE transaction_analysis SET analysis_result = 'Approved' WHERE analysis_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE blockchain_transactions SET transaction_amount = transaction_amount * 1.1 WHERE block_number > 100",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE block_information SET miner_address = 'New Miner' WHERE block_timestamp < '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_hash VARCHAR(255),\n  block_number INT,\n  transaction_amount DECIMAL,\n  transaction_timestamp TIMESTAMP\n)\n\nCREATE TABLE block_information (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP,\n  miner_address VARCHAR(255)\n)\n\nCREATE TABLE transaction_analysis (\n  analysis_id INT PRIMARY KEY,\n  transaction_id INT,\n  analysis_result TEXT,\n  analysis_timestamp TIMESTAMP\n)\n\nCREATE TABLE transaction_history (\n  history_id INT PRIMARY KEY,\n  transaction_id INT,\n  previous_transaction_id INT,\n  history_timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nUPDATE transaction_analysis SET analysis_result = 'Invalid Transaction' WHERE analysis_id IN (1, 2, 3)",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  transaction_hash VARCHAR(255),\n  sender_address VARCHAR(255),\n  receiver_address VARCHAR(255),\n  transaction_amount DECIMAL(18,2),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE blocks (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  previous_block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP\n);\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  address VARCHAR(255),\n  balance DECIMAL(18,2)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  sender_address_id INT,\n  receiver_address_id INT,\n  timestamp TIMESTAMP,\n  FOREIGN KEY (sender_address_id) REFERENCES addresses(address_id),\n  FOREIGN KEY (receiver_address_id) REFERENCES addresses(address_id)\n);\n\nCREATE TABLE transaction_metadata (\n  transaction_id INT PRIMARY KEY,\n  metadata_key VARCHAR(255),\n  metadata_value TEXT\n);\n\n### STATEMENT\n\nUPDATE blockchain_transactions SET transaction_amount = 500 WHERE transaction_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  transaction_hash VARCHAR(255),\n  sender_address VARCHAR(255),\n  receiver_address VARCHAR(255),\n  transaction_amount DECIMAL(18,2),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE blocks (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  previous_block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP\n);\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  address VARCHAR(255),\n  balance DECIMAL(18,2)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  sender_address_id INT,\n  receiver_address_id INT,\n  timestamp TIMESTAMP,\n  FOREIGN KEY (sender_address_id) REFERENCES addresses(address_id),\n  FOREIGN KEY (receiver_address_id) REFERENCES addresses(address_id)\n);\n\nCREATE TABLE transaction_metadata (\n  transaction_id INT PRIMARY KEY,\n  metadata_key VARCHAR(255),\n  metadata_value TEXT\n);\n\n### STATEMENT\n\nUPDATE addresses SET balance = 2000.50 WHERE address_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  transaction_hash VARCHAR(255),\n  sender_address VARCHAR(255),\n  receiver_address VARCHAR(255),\n  transaction_amount DECIMAL(18,2),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE blocks (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  previous_block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP\n);\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  address VARCHAR(255),\n  balance DECIMAL(18,2)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  sender_address_id INT,\n  receiver_address_id INT,\n  timestamp TIMESTAMP,\n  FOREIGN KEY (sender_address_id) REFERENCES addresses(address_id),\n  FOREIGN KEY (receiver_address_id) REFERENCES addresses(address_id)\n);\n\nCREATE TABLE transaction_metadata (\n  transaction_id INT PRIMARY KEY,\n  metadata_key VARCHAR(255),\n  metadata_value TEXT\n);\n\n### STATEMENT\n\nUPDATE transactions SET block_number = 10 WHERE transaction_id = 20;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  transaction_hash VARCHAR(255),\n  sender_address VARCHAR(255),\n  receiver_address VARCHAR(255),\n  transaction_amount DECIMAL(18,2),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE blocks (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  previous_block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP\n);\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  address VARCHAR(255),\n  balance DECIMAL(18,2)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  sender_address_id INT,\n  receiver_address_id INT,\n  timestamp TIMESTAMP,\n  FOREIGN KEY (sender_address_id) REFERENCES addresses(address_id),\n  FOREIGN KEY (receiver_address_id) REFERENCES addresses(address_id)\n);\n\nCREATE TABLE transaction_metadata (\n  transaction_id INT PRIMARY KEY,\n  metadata_key VARCHAR(255),\n  metadata_value TEXT\n);\n\n### STATEMENT\n\nUPDATE blockchain_transactions SET transaction_amount = transaction_amount + 100 WHERE block_number = 100;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  transaction_hash VARCHAR(255),\n  sender_address VARCHAR(255),\n  receiver_address VARCHAR(255),\n  transaction_amount DECIMAL(18,2),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE blocks (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  previous_block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP\n);\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  address VARCHAR(255),\n  balance DECIMAL(18,2)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  sender_address_id INT,\n  receiver_address_id INT,\n  timestamp TIMESTAMP,\n  FOREIGN KEY (sender_address_id) REFERENCES addresses(address_id),\n  FOREIGN KEY (receiver_address_id) REFERENCES addresses(address_id)\n);\n\nCREATE TABLE transaction_metadata (\n  transaction_id INT PRIMARY KEY,\n  metadata_key VARCHAR(255),\n  metadata_value TEXT\n);\n\n### STATEMENT\n\nUPDATE addresses SET balance = balance - 50 WHERE address_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE blockchain_transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  transaction_hash VARCHAR(255),\n  sender_address VARCHAR(255),\n  receiver_address VARCHAR(255),\n  transaction_amount DECIMAL(18,2),\n  timestamp TIMESTAMP\n);\n\nCREATE TABLE blocks (\n  block_number INT PRIMARY KEY,\n  block_hash VARCHAR(255),\n  previous_block_hash VARCHAR(255),\n  block_timestamp TIMESTAMP\n);\n\nCREATE TABLE addresses (\n  address_id INT PRIMARY KEY,\n  address VARCHAR(255),\n  balance DECIMAL(18,2)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  block_number INT,\n  sender_address_id INT,\n  receiver_address_id INT,\n  timestamp TIMESTAMP,\n  FOREIGN KEY (sender_address_id) REFERENCES addresses(address_id),\n  FOREIGN KEY (receiver_address_id) REFERENCES addresses(address_id)\n);\n\nCREATE TABLE transaction_metadata (\n  transaction_id INT PRIMARY KEY,\n  metadata_key VARCHAR(255),\n  metadata_value TEXT\n);\n\n### STATEMENT\n\nUPDATE transactions SET timestamp = NOW() WHERE transaction_id = 500;"
]