<t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>INSERT INTO analytics_data (id, event_name, event_value, event_date) SELECT 1, 'Login', 1, '2022-01-01';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>insert into analytics_data (id, event_name, event_value, event_date) select 1, 'login', 1, '2022-01-01';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>INSERT INTO analytics_data (id, event_name, event_value, event_date) SELECT 2, 'Signup', 2, '2022-01-02';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>insert into analytics_data (id, event_name, event_value, event_date) select 2, 'signup', 2, '2022-01-02';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>INSERT INTO analytics_data (id, event_name, event_value, event_date) SELECT 3, 'Purchase', 3, '2022-01-03';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>insert into analytics_data (id, event_name, event_value, event_date) select 3, 'purchase', 3, '2022-01-03';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>INSERT INTO analytics_data (id, event_name, event_value, event_date) SELECT 4, 'Click', 4, '2022-01-04';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>insert into analytics_data (id, event_name, event_value, event_date) select 4, 'click', 4, '2022-01-04';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>INSERT INTO analytics_data (id, event_name, event_value, event_date) SELECT 5, 'View', 5, '2022-01-05';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>insert into analytics_data (id, event_name, event_value, event_date) select 5, 'view', 5, '2022-01-05';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>INSERT INTO analytics_data (id, event_name, event_value, event_date) SELECT 6, 'Logout', 6, '2022-01-06';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>insert into analytics_data (id, event_name, event_value, event_date) select 6, 'logout', 6, '2022-01-06';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>INSERT INTO analytics_data (id, event_name, event_value, event_date) SELECT 7, 'Search', 7, '2022-01-07';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>insert into analytics_data (id, event_name, event_value, event_date) select 7, 'search', 7, '2022-01-07';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>INSERT INTO analytics_data (id, event_name, event_value, event_date) SELECT 8, 'Share', 8, '2022-01-08';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>insert into analytics_data (id, event_name, event_value, event_date) select 8, 'share', 8, '2022-01-08';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>INSERT INTO analytics_data (id, event_name, event_value, event_date) SELECT 9, 'Comment', 9, '2022-01-09';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>insert into analytics_data (id, event_name, event_value, event_date) select 9, 'comment', 9, '2022-01-09';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>INSERT INTO analytics_data (id, event_name, event_value, event_date) SELECT 10, 'Like', 10, '2022-01-10';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>insert into analytics_data (id, event_name, event_value, event_date) select 10, 'like', 10, '2022-01-10';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>INSERT INTO analytics_data (id, event_name, event_value, event_date) SELECT 11, 'Follow', 11, '2022-01-11';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>insert into analytics_data (id, event_name, event_value, event_date) select 11, 'follow', 11, '2022-01-11';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>INSERT INTO analytics_data (id, event_name, event_value, event_date) SELECT 12, 'Post', 12, '2022-01-12';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>insert into analytics_data (id, event_name, event_value, event_date) select 12, 'post', 12, '2022-01-12';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>INSERT INTO analytics_data (id, event_name, event_value, event_date) SELECT 13, 'Reply', 13, '2022-01-13';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>insert into analytics_data (id, event_name, event_value, event_date) select 13, 'reply', 13, '2022-01-13';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>INSERT INTO analytics_data (id, event_name, event_value, event_date) SELECT 14, 'Favorite', 14, '2022-01-14';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>insert into analytics_data (id, event_name, event_value, event_date) select 14, 'favorite', 14, '2022-01-14';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>INSERT INTO analytics_data (id, event_name, event_value, event_date) SELECT 15, 'Tag', 15, '2022-01-15';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>insert into analytics_data (id, event_name, event_value, event_date) select 15, 'tag', 15, '2022-01-15';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>INSERT INTO analytics_data (id, event_name, event_value, event_date) SELECT 16, 'Bookmark', 16, '2022-01-16';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>insert into analytics_data (id, event_name, event_value, event_date) select 16, 'bookmark', 16, '2022-01-16';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>INSERT INTO analytics_data (id, event_name, event_value, event_date) SELECT 17, 'Download', 17, '2022-01-17';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>insert into analytics_data (id, event_name, event_value, event_date) select 17, 'download', 17, '2022-01-17';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>INSERT INTO analytics_data (id, event_name, event_value, event_date) SELECT 18, 'Comment', 18, '2022-01-18';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>insert into analytics_data (id, event_name, event_value, event_date) select 18, 'comment', 18, '2022-01-18';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>INSERT INTO analytics_data (id, event_name, event_value, event_date) SELECT 19, 'Share', 19, '2022-01-19';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>insert into analytics_data (id, event_name, event_value, event_date) select 19, 'share', 19, '2022-01-19';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>INSERT INTO analytics_data (id, event_name, event_value, event_date) SELECT 20, 'Like', 20, '2022-01-20';</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>insert into analytics_data (id, event_name, event_value, event_date) select 20, 'like', 20, '2022-01-20';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event1', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'John Doe';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event1', current_timestamp from user_data where user_name = 'john doe';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event1', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'John Doe';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event1', current_timestamp from user_data where user_name = 'john doe';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event2', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Alice Smith';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event2', current_timestamp from user_data where user_name = 'alice smith';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event2', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Alice Smith';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event2', current_timestamp from user_data where user_name = 'alice smith';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event3', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Bob Johnson';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event3', current_timestamp from user_data where user_name = 'bob johnson';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event3', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Bob Johnson';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event3', current_timestamp from user_data where user_name = 'bob johnson';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event4', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Emily Davis';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event4', current_timestamp from user_data where user_name = 'emily davis';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event4', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Emily Davis';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event4', current_timestamp from user_data where user_name = 'emily davis';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event5', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Michael Brown';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event5', current_timestamp from user_data where user_name = 'michael brown';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event5', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Michael Brown';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event5', current_timestamp from user_data where user_name = 'michael brown';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event6', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Sarah Wilson';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event6', current_timestamp from user_data where user_name = 'sarah wilson';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event6', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Sarah Wilson';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event6', current_timestamp from user_data where user_name = 'sarah wilson';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event7', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Jack Taylor';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event7', current_timestamp from user_data where user_name = 'jack taylor';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event7', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Jack Taylor';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event7', current_timestamp from user_data where user_name = 'jack taylor';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event8', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Emma Anderson';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event8', current_timestamp from user_data where user_name = 'emma anderson';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event8', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Emma Anderson';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event8', current_timestamp from user_data where user_name = 'emma anderson';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event9', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Christopher Moore';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event9', current_timestamp from user_data where user_name = 'christopher moore';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event9', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Christopher Moore';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event9', current_timestamp from user_data where user_name = 'christopher moore';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event10', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Olivia Lee';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event10', current_timestamp from user_data where user_name = 'olivia lee';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event10', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Olivia Lee';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event10', current_timestamp from user_data where user_name = 'olivia lee';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event11', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Daniel Martinez';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event11', current_timestamp from user_data where user_name = 'daniel martinez';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event11', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Daniel Martinez';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event11', current_timestamp from user_data where user_name = 'daniel martinez';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event12', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Sophia Perez';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event12', current_timestamp from user_data where user_name = 'sophia perez';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event12', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Sophia Perez';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event12', current_timestamp from user_data where user_name = 'sophia perez';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event13', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'James Allen';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event13', current_timestamp from user_data where user_name = 'james allen';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event13', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'James Allen';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event13', current_timestamp from user_data where user_name = 'james allen';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event14', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Ava Garcia';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event14', current_timestamp from user_data where user_name = 'ava garcia';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event14', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Ava Garcia';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event14', current_timestamp from user_data where user_name = 'ava garcia';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event15', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'William Rodriguez';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event15', current_timestamp from user_data where user_name = 'william rodriguez';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event15', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'William Rodriguez';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event15', current_timestamp from user_data where user_name = 'william rodriguez';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event16', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Mia Hernandez';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event16', current_timestamp from user_data where user_name = 'mia hernandez';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event16', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Mia Hernandez';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event16', current_timestamp from user_data where user_name = 'mia hernandez';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event17', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Logan Torres';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event17', current_timestamp from user_data where user_name = 'logan torres';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event17', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Logan Torres';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event17', current_timestamp from user_data where user_name = 'logan torres';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event18', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Ella Gonzales';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event18', current_timestamp from user_data where user_name = 'ella gonzales';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event18', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Ella Gonzales';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event18', current_timestamp from user_data where user_name = 'ella gonzales';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event19', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Benjamin Sanchez';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event19', current_timestamp from user_data where user_name = 'benjamin sanchez';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event19', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Benjamin Sanchez';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event19', current_timestamp from user_data where user_name = 'benjamin sanchez';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event20', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Harper Rivera';</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event20', current_timestamp from user_data where user_name = 'harper rivera';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>INSERT INTO analytics_data (id, event_name, event_timestamp) SELECT id, 'event20', CURRENT_TIMESTAMP FROM user_data WHERE user_name = 'Harper Rivera';</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>insert into analytics_data (id, event_name, event_timestamp) select id, 'event20', current_timestamp from user_data where user_name = 'harper rivera';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 1, 'page1', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 1, 'page1', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 1, 'page1', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into pageviews (id, page_url, timestamp) select 1, 'page1', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 1, 'page1', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 1, 'page1', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 1, 'page1', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 1, 'page1', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 1, 'page1', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into pageviews (id, page_url, timestamp) select 1, 'page1', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 1, 'page1', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 1, 'page1', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 2, 'page2', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 2, 'page2', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 2, 'page2', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into pageviews (id, page_url, timestamp) select 2, 'page2', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 2, 'page2', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 2, 'page2', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 2, 'page2', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 2, 'page2', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 2, 'page2', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into pageviews (id, page_url, timestamp) select 2, 'page2', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 2, 'page2', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 2, 'page2', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 3, 'page3', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 3, 'page3', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 3, 'page3', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into pageviews (id, page_url, timestamp) select 3, 'page3', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 3, 'page3', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 3, 'page3', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 3, 'page3', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 3, 'page3', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 3, 'page3', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into pageviews (id, page_url, timestamp) select 3, 'page3', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 3, 'page3', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 3, 'page3', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 4, 'page4', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 4, 'page4', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 4, 'page4', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into pageviews (id, page_url, timestamp) select 4, 'page4', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 4, 'page4', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 4, 'page4', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 4, 'page4', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 4, 'page4', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 4, 'page4', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into pageviews (id, page_url, timestamp) select 4, 'page4', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 4, 'page4', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 4, 'page4', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 5, 'page5', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 5, 'page5', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 5, 'page5', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into pageviews (id, page_url, timestamp) select 5, 'page5', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 5, 'page5', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 5, 'page5', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 5, 'page5', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 5, 'page5', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 5, 'page5', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into pageviews (id, page_url, timestamp) select 5, 'page5', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 5, 'page5', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 5, 'page5', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 6, 'page6', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 6, 'page6', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 6, 'page6', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into pageviews (id, page_url, timestamp) select 6, 'page6', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 6, 'page6', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 6, 'page6', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 6, 'page6', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 6, 'page6', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 6, 'page6', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into pageviews (id, page_url, timestamp) select 6, 'page6', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 6, 'page6', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 6, 'page6', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 7, 'page7', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 7, 'page7', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 7, 'page7', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into pageviews (id, page_url, timestamp) select 7, 'page7', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 7, 'page7', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 7, 'page7', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 7, 'page7', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 7, 'page7', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 7, 'page7', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into pageviews (id, page_url, timestamp) select 7, 'page7', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 7, 'page7', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 7, 'page7', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 8, 'page8', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 8, 'page8', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 8, 'page8', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into pageviews (id, page_url, timestamp) select 8, 'page8', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 8, 'page8', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 8, 'page8', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 8, 'page8', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 8, 'page8', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 8, 'page8', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into pageviews (id, page_url, timestamp) select 8, 'page8', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 8, 'page8', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 8, 'page8', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 9, 'page9', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 9, 'page9', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 9, 'page9', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into pageviews (id, page_url, timestamp) select 9, 'page9', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 9, 'page9', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 9, 'page9', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 9, 'page9', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 9, 'page9', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 9, 'page9', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into pageviews (id, page_url, timestamp) select 9, 'page9', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 9, 'page9', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 9, 'page9', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 10, 'page10', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 10, 'page10', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 10, 'page10', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into pageviews (id, page_url, timestamp) select 10, 'page10', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 10, 'page10', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 10, 'page10', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 10, 'page10', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 10, 'page10', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 10, 'page10', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into pageviews (id, page_url, timestamp) select 10, 'page10', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO pageviews (id, page_url, timestamp) SELECT 10, 'page10', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into pageviews (id, page_url, timestamp) select 10, 'page10', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 1, 'user1', 'user1@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 1, 'user1', 'user1@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO users (user_id, username, email) SELECT 1, 'user1', 'user1@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into users (user_id, username, email) select 1, 'user1', 'user1@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 1, 'user1', 'user1@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 1, 'user1', 'user1@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 1, 'user1', 'user1@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 1, 'user1', 'user1@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO users (user_id, username, email) SELECT 1, 'user1', 'user1@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into users (user_id, username, email) select 1, 'user1', 'user1@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 1, 'user1', 'user1@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 1, 'user1', 'user1@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 2, 'user2', 'user2@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 2, 'user2', 'user2@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO users (user_id, username, email) SELECT 2, 'user2', 'user2@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into users (user_id, username, email) select 2, 'user2', 'user2@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 2, 'user2', 'user2@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 2, 'user2', 'user2@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 2, 'user2', 'user2@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 2, 'user2', 'user2@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO users (user_id, username, email) SELECT 2, 'user2', 'user2@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into users (user_id, username, email) select 2, 'user2', 'user2@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 2, 'user2', 'user2@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 2, 'user2', 'user2@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 3, 'user3', 'user3@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 3, 'user3', 'user3@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO users (user_id, username, email) SELECT 3, 'user3', 'user3@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into users (user_id, username, email) select 3, 'user3', 'user3@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 3, 'user3', 'user3@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 3, 'user3', 'user3@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 3, 'user3', 'user3@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 3, 'user3', 'user3@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO users (user_id, username, email) SELECT 3, 'user3', 'user3@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into users (user_id, username, email) select 3, 'user3', 'user3@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 3, 'user3', 'user3@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 3, 'user3', 'user3@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 4, 'user4', 'user4@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 4, 'user4', 'user4@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO users (user_id, username, email) SELECT 4, 'user4', 'user4@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into users (user_id, username, email) select 4, 'user4', 'user4@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 4, 'user4', 'user4@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 4, 'user4', 'user4@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 4, 'user4', 'user4@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 4, 'user4', 'user4@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO users (user_id, username, email) SELECT 4, 'user4', 'user4@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into users (user_id, username, email) select 4, 'user4', 'user4@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 4, 'user4', 'user4@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 4, 'user4', 'user4@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 5, 'user5', 'user5@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 5, 'user5', 'user5@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO users (user_id, username, email) SELECT 5, 'user5', 'user5@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into users (user_id, username, email) select 5, 'user5', 'user5@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 5, 'user5', 'user5@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 5, 'user5', 'user5@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 5, 'user5', 'user5@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 5, 'user5', 'user5@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO users (user_id, username, email) SELECT 5, 'user5', 'user5@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into users (user_id, username, email) select 5, 'user5', 'user5@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 5, 'user5', 'user5@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 5, 'user5', 'user5@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 6, 'user6', 'user6@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 6, 'user6', 'user6@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO users (user_id, username, email) SELECT 6, 'user6', 'user6@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into users (user_id, username, email) select 6, 'user6', 'user6@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 6, 'user6', 'user6@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 6, 'user6', 'user6@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 6, 'user6', 'user6@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 6, 'user6', 'user6@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO users (user_id, username, email) SELECT 6, 'user6', 'user6@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into users (user_id, username, email) select 6, 'user6', 'user6@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 6, 'user6', 'user6@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 6, 'user6', 'user6@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 7, 'user7', 'user7@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 7, 'user7', 'user7@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO users (user_id, username, email) SELECT 7, 'user7', 'user7@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into users (user_id, username, email) select 7, 'user7', 'user7@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 7, 'user7', 'user7@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 7, 'user7', 'user7@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 7, 'user7', 'user7@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 7, 'user7', 'user7@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO users (user_id, username, email) SELECT 7, 'user7', 'user7@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into users (user_id, username, email) select 7, 'user7', 'user7@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 7, 'user7', 'user7@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 7, 'user7', 'user7@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 8, 'user8', 'user8@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 8, 'user8', 'user8@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO users (user_id, username, email) SELECT 8, 'user8', 'user8@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into users (user_id, username, email) select 8, 'user8', 'user8@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 8, 'user8', 'user8@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 8, 'user8', 'user8@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 8, 'user8', 'user8@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 8, 'user8', 'user8@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO users (user_id, username, email) SELECT 8, 'user8', 'user8@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into users (user_id, username, email) select 8, 'user8', 'user8@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 8, 'user8', 'user8@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 8, 'user8', 'user8@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 9, 'user9', 'user9@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 9, 'user9', 'user9@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO users (user_id, username, email) SELECT 9, 'user9', 'user9@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into users (user_id, username, email) select 9, 'user9', 'user9@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 9, 'user9', 'user9@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 9, 'user9', 'user9@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 9, 'user9', 'user9@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 9, 'user9', 'user9@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO users (user_id, username, email) SELECT 9, 'user9', 'user9@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into users (user_id, username, email) select 9, 'user9', 'user9@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 9, 'user9', 'user9@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 9, 'user9', 'user9@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 10, 'user10', 'user10@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 10, 'user10', 'user10@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO users (user_id, username, email) SELECT 10, 'user10', 'user10@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into users (user_id, username, email) select 10, 'user10', 'user10@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 10, 'user10', 'user10@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 10, 'user10', 'user10@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 10, 'user10', 'user10@example.com';</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 10, 'user10', 'user10@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO users (user_id, username, email) SELECT 10, 'user10', 'user10@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into users (user_id, username, email) select 10, 'user10', 'user10@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO users (user_id, username, email) SELECT 10, 'user10', 'user10@example.com';</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into users (user_id, username, email) select 10, 'user10', 'user10@example.com';</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 1, 'event1', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 1, 'event1', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 1, 'event1', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into events (event_id, event_name, timestamp) select 1, 'event1', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 1, 'event1', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 1, 'event1', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 1, 'event1', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 1, 'event1', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 1, 'event1', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into events (event_id, event_name, timestamp) select 1, 'event1', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 1, 'event1', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 1, 'event1', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 2, 'event2', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 2, 'event2', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 2, 'event2', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into events (event_id, event_name, timestamp) select 2, 'event2', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 2, 'event2', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 2, 'event2', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 2, 'event2', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 2, 'event2', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 2, 'event2', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into events (event_id, event_name, timestamp) select 2, 'event2', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 2, 'event2', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 2, 'event2', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 3, 'event3', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 3, 'event3', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 3, 'event3', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into events (event_id, event_name, timestamp) select 3, 'event3', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 3, 'event3', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 3, 'event3', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 3, 'event3', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 3, 'event3', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 3, 'event3', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into events (event_id, event_name, timestamp) select 3, 'event3', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 3, 'event3', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 3, 'event3', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 4, 'event4', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 4, 'event4', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 4, 'event4', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into events (event_id, event_name, timestamp) select 4, 'event4', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 4, 'event4', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 4, 'event4', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 4, 'event4', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 4, 'event4', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 4, 'event4', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into events (event_id, event_name, timestamp) select 4, 'event4', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 4, 'event4', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 4, 'event4', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 5, 'event5', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 5, 'event5', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 5, 'event5', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into events (event_id, event_name, timestamp) select 5, 'event5', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 5, 'event5', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 5, 'event5', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 5, 'event5', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 5, 'event5', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 5, 'event5', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into events (event_id, event_name, timestamp) select 5, 'event5', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 5, 'event5', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 5, 'event5', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 6, 'event6', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 6, 'event6', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 6, 'event6', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into events (event_id, event_name, timestamp) select 6, 'event6', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 6, 'event6', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 6, 'event6', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 6, 'event6', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 6, 'event6', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 6, 'event6', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into events (event_id, event_name, timestamp) select 6, 'event6', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 6, 'event6', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 6, 'event6', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 7, 'event7', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 7, 'event7', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 7, 'event7', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into events (event_id, event_name, timestamp) select 7, 'event7', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 7, 'event7', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 7, 'event7', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 7, 'event7', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 7, 'event7', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 7, 'event7', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into events (event_id, event_name, timestamp) select 7, 'event7', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 7, 'event7', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 7, 'event7', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 8, 'event8', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 8, 'event8', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 8, 'event8', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into events (event_id, event_name, timestamp) select 8, 'event8', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 8, 'event8', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 8, 'event8', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 8, 'event8', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 8, 'event8', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 8, 'event8', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into events (event_id, event_name, timestamp) select 8, 'event8', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 8, 'event8', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 8, 'event8', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 9, 'event9', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 9, 'event9', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 9, 'event9', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into events (event_id, event_name, timestamp) select 9, 'event9', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 9, 'event9', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 9, 'event9', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 9, 'event9', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 9, 'event9', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 9, 'event9', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into events (event_id, event_name, timestamp) select 9, 'event9', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 9, 'event9', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 9, 'event9', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 10, 'event10', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 10, 'event10', now();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 10, 'event10', NOW();</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into events (event_id, event_name, timestamp) select 10, 'event10', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 10, 'event10', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 10, 'event10', now();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 10, 'event10', NOW();</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 10, 'event10', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 10, 'event10', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>insert into events (event_id, event_name, timestamp) select 10, 'event10', now();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>INSERT INTO events (event_id, event_name, timestamp) SELECT 10, 'event10', NOW();</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>insert into events (event_id, event_name, timestamp) select 10, 'event10', now();</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>INSERT INTO analytics.users (user_id, username, email, created_at) SELECT 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>insert into analytics.users (user_id, username, email, created_at) select 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>INSERT INTO analytics.users (user_id, username, email, created_at) SELECT 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>insert into analytics.users (user_id, username, email, created_at) select 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>INSERT INTO analytics.users (user_id, username, email, created_at) SELECT 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>insert into analytics.users (user_id, username, email, created_at) select 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>INSERT INTO analytics.users (user_id, username, email, created_at) SELECT 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>insert into analytics.users (user_id, username, email, created_at) select 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>INSERT INTO analytics.users (user_id, username, email, created_at) SELECT 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>insert into analytics.users (user_id, username, email, created_at) select 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>INSERT INTO analytics.users (user_id, username, email, created_at) SELECT 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>insert into analytics.users (user_id, username, email, created_at) select 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>INSERT INTO analytics.users (user_id, username, email, created_at) SELECT 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>insert into analytics.users (user_id, username, email, created_at) select 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>INSERT INTO analytics.users (user_id, username, email, created_at) SELECT 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>insert into analytics.users (user_id, username, email, created_at) select 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>INSERT INTO analytics.users (user_id, username, email, created_at) SELECT 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>insert into analytics.users (user_id, username, email, created_at) select 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>INSERT INTO analytics.users (user_id, username, email, created_at) SELECT 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>insert into analytics.users (user_id, username, email, created_at) select 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>INSERT INTO analytics.users (user_id, username, email, created_at) SELECT 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>insert into analytics.users (user_id, username, email, created_at) select 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>INSERT INTO analytics.users (user_id, username, email, created_at) SELECT 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>insert into analytics.users (user_id, username, email, created_at) select 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>INSERT INTO analytics.users (user_id, username, email, created_at) SELECT 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>insert into analytics.users (user_id, username, email, created_at) select 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>INSERT INTO analytics.users (user_id, username, email, created_at) SELECT 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>insert into analytics.users (user_id, username, email, created_at) select 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>INSERT INTO analytics.users (user_id, username, email, created_at) SELECT 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>insert into analytics.users (user_id, username, email, created_at) select 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>INSERT INTO analytics.users (user_id, username, email, created_at) SELECT 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>insert into analytics.users (user_id, username, email, created_at) select 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>INSERT INTO analytics.users (user_id, username, email, created_at) SELECT 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>insert into analytics.users (user_id, username, email, created_at) select 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>INSERT INTO analytics.users (user_id, username, email, created_at) SELECT 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>insert into analytics.users (user_id, username, email, created_at) select 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>INSERT INTO analytics.users (user_id, username, email, created_at) SELECT 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>insert into analytics.users (user_id, username, email, created_at) select 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>INSERT INTO analytics.users (user_id, username, email, created_at) SELECT 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>insert into analytics.users (user_id, username, email, created_at) select 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>INSERT INTO analytics.users (user_id, username, email, created_at) SELECT 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>insert into analytics.users (user_id, username, email, created_at) select 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>INSERT INTO analytics.users (user_id, username, email, created_at) SELECT 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>insert into analytics.users (user_id, username, email, created_at) select 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>INSERT INTO analytics.users (user_id, username, email, created_at) SELECT 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>insert into analytics.users (user_id, username, email, created_at) select 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>INSERT INTO analytics.users (user_id, username, email, created_at) SELECT 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>insert into analytics.users (user_id, username, email, created_at) select 1, 'john_doe', 'john.doe@example.com', '2022-01-01'</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>INSERT INTO analytics.products (product_id, product_name, category, price) SELECT 1, 'Product A', 'Category A', 50.00</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>insert into analytics.products (product_id, product_name, category, price) select 1, 'product a', 'category a', 50.00</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>INSERT INTO analytics.products (product_id, product_name, category, price) SELECT 1, 'Product A', 'Category A', 50.00</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>insert into analytics.products (product_id, product_name, category, price) select 1, 'product a', 'category a', 50.00</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>INSERT INTO analytics.products (product_id, product_name, category, price) SELECT 1, 'Product A', 'Category A', 50.00</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>insert into analytics.products (product_id, product_name, category, price) select 1, 'product a', 'category a', 50.00</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>INSERT INTO analytics.products (product_id, product_name, category, price) SELECT 1, 'Product A', 'Category A', 50.00</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>insert into analytics.products (product_id, product_name, category, price) select 1, 'product a', 'category a', 50.00</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>INSERT INTO analytics.products (product_id, product_name, category, price) SELECT 1, 'Product A', 'Category A', 50.00</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>insert into analytics.products (product_id, product_name, category, price) select 1, 'product a', 'category a', 50.00</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>INSERT INTO analytics.products (product_id, product_name, category, price) SELECT 1, 'Product A', 'Category A', 50.00</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>insert into analytics.products (product_id, product_name, category, price) select 1, 'product a', 'category a', 50.00</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>INSERT INTO analytics.products (product_id, product_name, category, price) SELECT 1, 'Product A', 'Category A', 50.00</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>insert into analytics.products (product_id, product_name, category, price) select 1, 'product a', 'category a', 50.00</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>INSERT INTO analytics.products (product_id, product_name, category, price) SELECT 1, 'Product A', 'Category A', 50.00</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>insert into analytics.products (product_id, product_name, category, price) select 1, 'product a', 'category a', 50.00</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>INSERT INTO analytics.products (product_id, product_name, category, price) SELECT 1, 'Product A', 'Category A', 50.00</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>insert into analytics.products (product_id, product_name, category, price) select 1, 'product a', 'category a', 50.00</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>INSERT INTO analytics.products (product_id, product_name, category, price) SELECT 1, 'Product A', 'Category A', 50.00</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>insert into analytics.products (product_id, product_name, category, price) select 1, 'product a', 'category a', 50.00</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>INSERT INTO analytics.products (product_id, product_name, category, price) SELECT 1, 'Product A', 'Category A', 50.00</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>insert into analytics.products (product_id, product_name, category, price) select 1, 'product a', 'category a', 50.00</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>INSERT INTO analytics.products (product_id, product_name, category, price) SELECT 1, 'Product A', 'Category A', 50.00</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>insert into analytics.products (product_id, product_name, category, price) select 1, 'product a', 'category a', 50.00</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>INSERT INTO analytics.products (product_id, product_name, category, price) SELECT 1, 'Product A', 'Category A', 50.00</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>insert into analytics.products (product_id, product_name, category, price) select 1, 'product a', 'category a', 50.00</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>INSERT INTO analytics.products (product_id, product_name, category, price) SELECT 1, 'Product A', 'Category A', 50.00</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>insert into analytics.products (product_id, product_name, category, price) select 1, 'product a', 'category a', 50.00</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>INSERT INTO analytics.products (product_id, product_name, category, price) SELECT 1, 'Product A', 'Category A', 50.00</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>insert into analytics.products (product_id, product_name, category, price) select 1, 'product a', 'category a', 50.00</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>INSERT INTO analytics.products (product_id, product_name, category, price) SELECT 1, 'Product A', 'Category A', 50.00</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>insert into analytics.products (product_id, product_name, category, price) select 1, 'product a', 'category a', 50.00</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>INSERT INTO analytics.products (product_id, product_name, category, price) SELECT 1, 'Product A', 'Category A', 50.00</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>insert into analytics.products (product_id, product_name, category, price) select 1, 'product a', 'category a', 50.00</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>INSERT INTO analytics.products (product_id, product_name, category, price) SELECT 1, 'Product A', 'Category A', 50.00</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>insert into analytics.products (product_id, product_name, category, price) select 1, 'product a', 'category a', 50.00</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>INSERT INTO analytics.products (product_id, product_name, category, price) SELECT 1, 'Product A', 'Category A', 50.00</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>insert into analytics.products (product_id, product_name, category, price) select 1, 'product a', 'category a', 50.00</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>INSERT INTO analytics.products (product_id, product_name, category, price) SELECT 1, 'Product A', 'Category A', 50.00</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>insert into analytics.products (product_id, product_name, category, price) select 1, 'product a', 'category a', 50.00</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>INSERT INTO analytics.products (product_id, product_name, category, price) SELECT 1, 'Product A', 'Category A', 50.00</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>insert into analytics.products (product_id, product_name, category, price) select 1, 'product a', 'category a', 50.00</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>INSERT INTO analytics.products (product_id, product_name, category, price) SELECT 1, 'Product A', 'Category A', 50.00</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>insert into analytics.products (product_id, product_name, category, price) select 1, 'product a', 'category a', 50.00</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>INSERT INTO analytics.products (product_id, product_name, category, price) SELECT 1, 'Product A', 'Category A', 50.00</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>insert into analytics.products (product_id, product_name, category, price) select 1, 'product a', 'category a', 50.00</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>INSERT INTO analytics.products (product_id, product_name, category, price) SELECT 1, 'Product A', 'Category A', 50.00</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>insert into analytics.products (product_id, product_name, category, price) select 1, 'product a', 'category a', 50.00</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>INSERT INTO analytics.orders (order_id, user_id, product_id, order_date, quantity) SELECT 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>insert into analytics.orders (order_id, user_id, product_id, order_date, quantity) select 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>INSERT INTO analytics.orders (order_id, user_id, product_id, order_date, quantity) SELECT 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>insert into analytics.orders (order_id, user_id, product_id, order_date, quantity) select 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>INSERT INTO analytics.orders (order_id, user_id, product_id, order_date, quantity) SELECT 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>insert into analytics.orders (order_id, user_id, product_id, order_date, quantity) select 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>INSERT INTO analytics.orders (order_id, user_id, product_id, order_date, quantity) SELECT 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>insert into analytics.orders (order_id, user_id, product_id, order_date, quantity) select 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>INSERT INTO analytics.orders (order_id, user_id, product_id, order_date, quantity) SELECT 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>insert into analytics.orders (order_id, user_id, product_id, order_date, quantity) select 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>INSERT INTO analytics.orders (order_id, user_id, product_id, order_date, quantity) SELECT 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>insert into analytics.orders (order_id, user_id, product_id, order_date, quantity) select 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>INSERT INTO analytics.orders (order_id, user_id, product_id, order_date, quantity) SELECT 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>insert into analytics.orders (order_id, user_id, product_id, order_date, quantity) select 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>INSERT INTO analytics.orders (order_id, user_id, product_id, order_date, quantity) SELECT 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>insert into analytics.orders (order_id, user_id, product_id, order_date, quantity) select 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>INSERT INTO analytics.orders (order_id, user_id, product_id, order_date, quantity) SELECT 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>insert into analytics.orders (order_id, user_id, product_id, order_date, quantity) select 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>INSERT INTO analytics.orders (order_id, user_id, product_id, order_date, quantity) SELECT 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>insert into analytics.orders (order_id, user_id, product_id, order_date, quantity) select 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>INSERT INTO analytics.orders (order_id, user_id, product_id, order_date, quantity) SELECT 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>insert into analytics.orders (order_id, user_id, product_id, order_date, quantity) select 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>INSERT INTO analytics.orders (order_id, user_id, product_id, order_date, quantity) SELECT 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>insert into analytics.orders (order_id, user_id, product_id, order_date, quantity) select 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>INSERT INTO analytics.orders (order_id, user_id, product_id, order_date, quantity) SELECT 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>insert into analytics.orders (order_id, user_id, product_id, order_date, quantity) select 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>INSERT INTO analytics.orders (order_id, user_id, product_id, order_date, quantity) SELECT 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>insert into analytics.orders (order_id, user_id, product_id, order_date, quantity) select 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>INSERT INTO analytics.orders (order_id, user_id, product_id, order_date, quantity) SELECT 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>insert into analytics.orders (order_id, user_id, product_id, order_date, quantity) select 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>INSERT INTO analytics.orders (order_id, user_id, product_id, order_date, quantity) SELECT 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>insert into analytics.orders (order_id, user_id, product_id, order_date, quantity) select 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>INSERT INTO analytics.orders (order_id, user_id, product_id, order_date, quantity) SELECT 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>insert into analytics.orders (order_id, user_id, product_id, order_date, quantity) select 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>INSERT INTO analytics.orders (order_id, user_id, product_id, order_date, quantity) SELECT 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>insert into analytics.orders (order_id, user_id, product_id, order_date, quantity) select 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>INSERT INTO analytics.orders (order_id, user_id, product_id, order_date, quantity) SELECT 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>insert into analytics.orders (order_id, user_id, product_id, order_date, quantity) select 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>INSERT INTO analytics.orders (order_id, user_id, product_id, order_date, quantity) SELECT 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>insert into analytics.orders (order_id, user_id, product_id, order_date, quantity) select 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>INSERT INTO analytics.orders (order_id, user_id, product_id, order_date, quantity) SELECT 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>insert into analytics.orders (order_id, user_id, product_id, order_date, quantity) select 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>INSERT INTO analytics.orders (order_id, user_id, product_id, order_date, quantity) SELECT 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>insert into analytics.orders (order_id, user_id, product_id, order_date, quantity) select 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>INSERT INTO analytics.orders (order_id, user_id, product_id, order_date, quantity) SELECT 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>insert into analytics.orders (order_id, user_id, product_id, order_date, quantity) select 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>INSERT INTO analytics.orders (order_id, user_id, product_id, order_date, quantity) SELECT 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>insert into analytics.orders (order_id, user_id, product_id, order_date, quantity) select 1, 1, 1, '2022-01-01', 2</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>INSERT INTO analytics.sales (sale_id, product_id, sale_date, revenue) SELECT 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>insert into analytics.sales (sale_id, product_id, sale_date, revenue) select 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>INSERT INTO analytics.sales (sale_id, product_id, sale_date, revenue) SELECT 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>insert into analytics.sales (sale_id, product_id, sale_date, revenue) select 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>INSERT INTO analytics.sales (sale_id, product_id, sale_date, revenue) SELECT 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>insert into analytics.sales (sale_id, product_id, sale_date, revenue) select 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>INSERT INTO analytics.sales (sale_id, product_id, sale_date, revenue) SELECT 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>insert into analytics.sales (sale_id, product_id, sale_date, revenue) select 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>INSERT INTO analytics.sales (sale_id, product_id, sale_date, revenue) SELECT 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>insert into analytics.sales (sale_id, product_id, sale_date, revenue) select 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>INSERT INTO analytics.sales (sale_id, product_id, sale_date, revenue) SELECT 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>insert into analytics.sales (sale_id, product_id, sale_date, revenue) select 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>INSERT INTO analytics.sales (sale_id, product_id, sale_date, revenue) SELECT 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>insert into analytics.sales (sale_id, product_id, sale_date, revenue) select 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>INSERT INTO analytics.sales (sale_id, product_id, sale_date, revenue) SELECT 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>insert into analytics.sales (sale_id, product_id, sale_date, revenue) select 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>INSERT INTO analytics.sales (sale_id, product_id, sale_date, revenue) SELECT 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>insert into analytics.sales (sale_id, product_id, sale_date, revenue) select 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>INSERT INTO analytics.sales (sale_id, product_id, sale_date, revenue) SELECT 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>insert into analytics.sales (sale_id, product_id, sale_date, revenue) select 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>INSERT INTO analytics.sales (sale_id, product_id, sale_date, revenue) SELECT 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>insert into analytics.sales (sale_id, product_id, sale_date, revenue) select 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>INSERT INTO analytics.sales (sale_id, product_id, sale_date, revenue) SELECT 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>insert into analytics.sales (sale_id, product_id, sale_date, revenue) select 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>INSERT INTO analytics.sales (sale_id, product_id, sale_date, revenue) SELECT 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>insert into analytics.sales (sale_id, product_id, sale_date, revenue) select 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>INSERT INTO analytics.sales (sale_id, product_id, sale_date, revenue) SELECT 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>insert into analytics.sales (sale_id, product_id, sale_date, revenue) select 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>INSERT INTO analytics.sales (sale_id, product_id, sale_date, revenue) SELECT 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>insert into analytics.sales (sale_id, product_id, sale_date, revenue) select 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>INSERT INTO analytics.sales (sale_id, product_id, sale_date, revenue) SELECT 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>insert into analytics.sales (sale_id, product_id, sale_date, revenue) select 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>INSERT INTO analytics.sales (sale_id, product_id, sale_date, revenue) SELECT 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>insert into analytics.sales (sale_id, product_id, sale_date, revenue) select 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>INSERT INTO analytics.sales (sale_id, product_id, sale_date, revenue) SELECT 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>insert into analytics.sales (sale_id, product_id, sale_date, revenue) select 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>INSERT INTO analytics.sales (sale_id, product_id, sale_date, revenue) SELECT 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>insert into analytics.sales (sale_id, product_id, sale_date, revenue) select 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>INSERT INTO analytics.sales (sale_id, product_id, sale_date, revenue) SELECT 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>insert into analytics.sales (sale_id, product_id, sale_date, revenue) select 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>INSERT INTO analytics.sales (sale_id, product_id, sale_date, revenue) SELECT 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>insert into analytics.sales (sale_id, product_id, sale_date, revenue) select 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>INSERT INTO analytics.sales (sale_id, product_id, sale_date, revenue) SELECT 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>insert into analytics.sales (sale_id, product_id, sale_date, revenue) select 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>INSERT INTO analytics.sales (sale_id, product_id, sale_date, revenue) SELECT 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>insert into analytics.sales (sale_id, product_id, sale_date, revenue) select 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>INSERT INTO analytics.sales (sale_id, product_id, sale_date, revenue) SELECT 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>insert into analytics.sales (sale_id, product_id, sale_date, revenue) select 1, 1, '2022-01-01', 100.00</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>from dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>FROM dual</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>from dual</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>INSERT INTO Sales (id, product_id, amount, sales_date) SELECT 1, 101, 100, '2022-01-01';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>insert into sales (id, product_id, amount, sales_date) select 1, 101, 100, '2022-01-01';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>INSERT INTO Sales (id, product_id, amount, sales_date) SELECT 2, 102, 150, '2022-01-02';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>insert into sales (id, product_id, amount, sales_date) select 2, 102, 150, '2022-01-02';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>INSERT INTO Sales (id, product_id, amount, sales_date) SELECT 3, 103, 200, '2022-01-03';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>insert into sales (id, product_id, amount, sales_date) select 3, 103, 200, '2022-01-03';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>INSERT INTO Sales (id, product_id, amount, sales_date) SELECT 4, 104, 120, '2022-01-04';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>insert into sales (id, product_id, amount, sales_date) select 4, 104, 120, '2022-01-04';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>INSERT INTO Sales (id, product_id, amount, sales_date) SELECT 5, 105, 180, '2022-01-05';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>insert into sales (id, product_id, amount, sales_date) select 5, 105, 180, '2022-01-05';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>INSERT INTO Sales (id, product_id, amount, sales_date) SELECT 6, 106, 90, '2022-01-06';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>insert into sales (id, product_id, amount, sales_date) select 6, 106, 90, '2022-01-06';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>INSERT INTO Sales (id, product_id, amount, sales_date) SELECT 7, 107, 210, '2022-01-07';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>insert into sales (id, product_id, amount, sales_date) select 7, 107, 210, '2022-01-07';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>INSERT INTO Sales (id, product_id, amount, sales_date) SELECT 8, 108, 140, '2022-01-08';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>insert into sales (id, product_id, amount, sales_date) select 8, 108, 140, '2022-01-08';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>INSERT INTO Sales (id, product_id, amount, sales_date) SELECT 9, 109, 170, '2022-01-09';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>insert into sales (id, product_id, amount, sales_date) select 9, 109, 170, '2022-01-09';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>INSERT INTO Sales (id, product_id, amount, sales_date) SELECT 10, 110, 220, '2022-01-10';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>insert into sales (id, product_id, amount, sales_date) select 10, 110, 220, '2022-01-10';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>INSERT INTO Sales (id, product_id, amount, sales_date) SELECT 11, 111, 130, '2022-01-11';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>insert into sales (id, product_id, amount, sales_date) select 11, 111, 130, '2022-01-11';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>INSERT INTO Sales (id, product_id, amount, sales_date) SELECT 12, 112, 190, '2022-01-12';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>insert into sales (id, product_id, amount, sales_date) select 12, 112, 190, '2022-01-12';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>INSERT INTO Sales (id, product_id, amount, sales_date) SELECT 13, 113, 80, '2022-01-13';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>insert into sales (id, product_id, amount, sales_date) select 13, 113, 80, '2022-01-13';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>INSERT INTO Sales (id, product_id, amount, sales_date) SELECT 14, 114, 240, '2022-01-14';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>insert into sales (id, product_id, amount, sales_date) select 14, 114, 240, '2022-01-14';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>INSERT INTO Sales (id, product_id, amount, sales_date) SELECT 15, 115, 160, '2022-01-15';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>insert into sales (id, product_id, amount, sales_date) select 15, 115, 160, '2022-01-15';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>INSERT INTO Sales (id, product_id, amount, sales_date) SELECT 16, 116, 200, '2022-01-16';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>insert into sales (id, product_id, amount, sales_date) select 16, 116, 200, '2022-01-16';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>INSERT INTO Sales (id, product_id, amount, sales_date) SELECT 17, 117, 110, '2022-01-17';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>insert into sales (id, product_id, amount, sales_date) select 17, 117, 110, '2022-01-17';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>INSERT INTO Sales (id, product_id, amount, sales_date) SELECT 18, 118, 130, '2022-01-18';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>insert into sales (id, product_id, amount, sales_date) select 18, 118, 130, '2022-01-18';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>INSERT INTO Sales (id, product_id, amount, sales_date) SELECT 19, 119, 180, '2022-01-19';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>insert into sales (id, product_id, amount, sales_date) select 19, 119, 180, '2022-01-19';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>INSERT INTO Sales (id, product_id, amount, sales_date) SELECT 20, 120, 90, '2022-01-20';</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>insert into sales (id, product_id, amount, sales_date) select 20, 120, 90, '2022-01-20';</stat>