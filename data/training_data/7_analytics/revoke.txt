<t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>REVOKE DELETE, INSERT, UPDATE ON analytics_data FROM user1</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>revoke delete, insert, update on analytics_data from user1</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>REVOKE SELECT ON analytics_data FROM user2</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>revoke select on analytics_data from user2</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>REVOKE ALL PRIVILEGES ON analytics_data FROM user3</stat><divider><t>CREATE TABLE analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_value INT, event_date DATE)</t><stat>revoke all privileges on analytics_data from user3</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>REVOKE SELECT ON analytics_data FROM user</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>revoke select on analytics_data from user</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>REVOKE SELECT ON analytics_data FROM user</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>revoke select on analytics_data from user</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>REVOKE INSERT ON user_data FROM admin</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>revoke insert on user_data from admin</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>REVOKE INSERT ON user_data FROM admin</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>revoke insert on user_data from admin</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>REVOKE UPDATE ON analytics_data FROM analyst</stat><divider><t>CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)

CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))</t><stat>revoke update on analytics_data from analyst</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>REVOKE UPDATE ON analytics_data FROM analyst</stat><divider><t>CREATE TABLE IF NOT EXISTS user_data (user_id INT PRIMARY KEY, user_name VARCHAR(255), user_email VARCHAR(255))

CREATE TABLE IF NOT EXISTS analytics_data (id INT PRIMARY KEY, event_name VARCHAR(255), event_timestamp TIMESTAMP)</t><stat>revoke update on analytics_data from analyst</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>REVOKE SELECT ON pageviews FROM user1;</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>revoke select on pageviews from user1;</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>REVOKE SELECT ON pageviews FROM user1;</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>revoke select on pageviews from user1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>REVOKE SELECT ON pageviews FROM user1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>revoke select on pageviews from user1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>REVOKE SELECT ON pageviews FROM user1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>revoke select on pageviews from user1;</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>REVOKE SELECT ON pageviews FROM user1;</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>revoke select on pageviews from user1;</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>REVOKE SELECT ON pageviews FROM user1;</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>revoke select on pageviews from user1;</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>REVOKE INSERT, UPDATE ON users FROM user2;</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>revoke insert, update on users from user2;</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>REVOKE INSERT, UPDATE ON users FROM user2;</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>revoke insert, update on users from user2;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>REVOKE INSERT, UPDATE ON users FROM user2;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>revoke insert, update on users from user2;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>REVOKE INSERT, UPDATE ON users FROM user2;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>revoke insert, update on users from user2;</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>REVOKE INSERT, UPDATE ON users FROM user2;</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>revoke insert, update on users from user2;</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>REVOKE INSERT, UPDATE ON users FROM user2;</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>revoke insert, update on users from user2;</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>REVOKE DELETE ON events FROM user3;</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>revoke delete on events from user3;</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>REVOKE DELETE ON events FROM user3;</stat><divider><t>CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>revoke delete on events from user3;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>REVOKE DELETE ON events FROM user3;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);</t><stat>revoke delete on events from user3;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>REVOKE DELETE ON events FROM user3;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>revoke delete on events from user3;</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>REVOKE DELETE ON events FROM user3;</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));</t><stat>revoke delete on events from user3;</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>REVOKE DELETE ON events FROM user3;</stat><divider><t>CREATE TABLE events (event_id INT PRIMARY KEY, event_name VARCHAR(50), timestamp TIMESTAMP);

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50), email VARCHAR(100));

CREATE TABLE pageviews (id INT PRIMARY KEY, page_url VARCHAR(255), timestamp TIMESTAMP);</t><stat>revoke delete on events from user3;</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>REVOKE SELECT ON analytics.users FROM public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>revoke select on analytics.users from public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>REVOKE SELECT ON analytics.users FROM public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>revoke select on analytics.users from public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>REVOKE SELECT ON analytics.users FROM public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>revoke select on analytics.users from public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>REVOKE SELECT ON analytics.users FROM public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>revoke select on analytics.users from public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>REVOKE SELECT ON analytics.users FROM public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>revoke select on analytics.users from public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>REVOKE SELECT ON analytics.users FROM public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>revoke select on analytics.users from public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>REVOKE SELECT ON analytics.users FROM public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>revoke select on analytics.users from public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>REVOKE SELECT ON analytics.users FROM public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>revoke select on analytics.users from public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>REVOKE SELECT ON analytics.users FROM public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>revoke select on analytics.users from public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>REVOKE SELECT ON analytics.users FROM public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>revoke select on analytics.users from public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>REVOKE SELECT ON analytics.users FROM public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>revoke select on analytics.users from public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>REVOKE SELECT ON analytics.users FROM public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>revoke select on analytics.users from public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>REVOKE SELECT ON analytics.users FROM public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>revoke select on analytics.users from public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>REVOKE SELECT ON analytics.users FROM public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>revoke select on analytics.users from public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>REVOKE SELECT ON analytics.users FROM public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>revoke select on analytics.users from public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>REVOKE SELECT ON analytics.users FROM public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>revoke select on analytics.users from public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>REVOKE SELECT ON analytics.users FROM public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>revoke select on analytics.users from public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>REVOKE SELECT ON analytics.users FROM public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>revoke select on analytics.users from public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>REVOKE SELECT ON analytics.users FROM public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>revoke select on analytics.users from public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>REVOKE SELECT ON analytics.users FROM public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>revoke select on analytics.users from public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>REVOKE SELECT ON analytics.users FROM public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>revoke select on analytics.users from public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>REVOKE SELECT ON analytics.users FROM public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>revoke select on analytics.users from public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>REVOKE SELECT ON analytics.users FROM public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>revoke select on analytics.users from public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>REVOKE SELECT ON analytics.users FROM public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>revoke select on analytics.users from public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>REVOKE INSERT ON analytics.products FROM public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>revoke insert on analytics.products from public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>REVOKE INSERT ON analytics.products FROM public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>revoke insert on analytics.products from public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>REVOKE INSERT ON analytics.products FROM public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>revoke insert on analytics.products from public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>REVOKE INSERT ON analytics.products FROM public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>revoke insert on analytics.products from public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>REVOKE INSERT ON analytics.products FROM public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>revoke insert on analytics.products from public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>REVOKE INSERT ON analytics.products FROM public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>revoke insert on analytics.products from public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>REVOKE INSERT ON analytics.products FROM public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>revoke insert on analytics.products from public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>REVOKE INSERT ON analytics.products FROM public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>revoke insert on analytics.products from public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>REVOKE INSERT ON analytics.products FROM public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>revoke insert on analytics.products from public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>REVOKE INSERT ON analytics.products FROM public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>revoke insert on analytics.products from public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>REVOKE INSERT ON analytics.products FROM public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>revoke insert on analytics.products from public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>REVOKE INSERT ON analytics.products FROM public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>revoke insert on analytics.products from public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>REVOKE INSERT ON analytics.products FROM public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>revoke insert on analytics.products from public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>REVOKE INSERT ON analytics.products FROM public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>revoke insert on analytics.products from public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>REVOKE INSERT ON analytics.products FROM public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>revoke insert on analytics.products from public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>REVOKE INSERT ON analytics.products FROM public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>revoke insert on analytics.products from public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>REVOKE INSERT ON analytics.products FROM public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>revoke insert on analytics.products from public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>REVOKE INSERT ON analytics.products FROM public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>revoke insert on analytics.products from public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>REVOKE INSERT ON analytics.products FROM public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>revoke insert on analytics.products from public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>REVOKE INSERT ON analytics.products FROM public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>revoke insert on analytics.products from public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>REVOKE INSERT ON analytics.products FROM public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>revoke insert on analytics.products from public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>REVOKE INSERT ON analytics.products FROM public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>revoke insert on analytics.products from public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>REVOKE INSERT ON analytics.products FROM public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>revoke insert on analytics.products from public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>REVOKE INSERT ON analytics.products FROM public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>revoke insert on analytics.products from public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>REVOKE UPDATE ON analytics.orders FROM public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>revoke update on analytics.orders from public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>REVOKE UPDATE ON analytics.orders FROM public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>revoke update on analytics.orders from public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>REVOKE UPDATE ON analytics.orders FROM public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>revoke update on analytics.orders from public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>REVOKE UPDATE ON analytics.orders FROM public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>revoke update on analytics.orders from public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>REVOKE UPDATE ON analytics.orders FROM public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>revoke update on analytics.orders from public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>REVOKE UPDATE ON analytics.orders FROM public</stat><divider><t>CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>revoke update on analytics.orders from public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>REVOKE UPDATE ON analytics.orders FROM public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>revoke update on analytics.orders from public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>REVOKE UPDATE ON analytics.orders FROM public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>revoke update on analytics.orders from public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>REVOKE UPDATE ON analytics.orders FROM public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>revoke update on analytics.orders from public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>REVOKE UPDATE ON analytics.orders FROM public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>revoke update on analytics.orders from public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>REVOKE UPDATE ON analytics.orders FROM public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>revoke update on analytics.orders from public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>REVOKE UPDATE ON analytics.orders FROM public</stat><divider><t>CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>revoke update on analytics.orders from public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>REVOKE UPDATE ON analytics.orders FROM public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>revoke update on analytics.orders from public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>REVOKE UPDATE ON analytics.orders FROM public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>revoke update on analytics.orders from public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>REVOKE UPDATE ON analytics.orders FROM public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )</t><stat>revoke update on analytics.orders from public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>REVOKE UPDATE ON analytics.orders FROM public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>revoke update on analytics.orders from public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>REVOKE UPDATE ON analytics.orders FROM public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>revoke update on analytics.orders from public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>REVOKE UPDATE ON analytics.orders FROM public</stat><divider><t>CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>revoke update on analytics.orders from public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>REVOKE UPDATE ON analytics.orders FROM public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>revoke update on analytics.orders from public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>REVOKE UPDATE ON analytics.orders FROM public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>revoke update on analytics.orders from public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>REVOKE UPDATE ON analytics.orders FROM public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )</t><stat>revoke update on analytics.orders from public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>REVOKE UPDATE ON analytics.orders FROM public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>revoke update on analytics.orders from public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>REVOKE UPDATE ON analytics.orders FROM public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )</t><stat>revoke update on analytics.orders from public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>REVOKE UPDATE ON analytics.orders FROM public</stat><divider><t>CREATE TABLE analytics.sales ( sale_id INT PRIMARY KEY, product_id INT, sale_date DATE, revenue DECIMAL )

CREATE TABLE analytics.orders ( order_id INT PRIMARY KEY, user_id INT, product_id INT, order_date DATE, quantity INT )

CREATE TABLE analytics.products ( product_id INT PRIMARY KEY, product_name STRING, category STRING, price DECIMAL )

CREATE TABLE analytics.users ( user_id INT PRIMARY KEY, username STRING, email STRING, created_at TIMESTAMP )</t><stat>revoke update on analytics.orders from public</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>REVOKE SELECT ON Sales FROM user1</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>revoke select on sales from user1</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>REVOKE INSERT, UPDATE ON Sales FROM user2</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>revoke insert, update on sales from user2</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>REVOKE ALL PRIVILEGES ON Sales FROM user3</stat><divider><t>CREATE TABLE Sales (id INT PRIMARY KEY, product_id INT, amount INT, sales_date DATE)</t><stat>revoke all privileges on sales from user3</stat>