[
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT * FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT prescription_id, prescription_name, prescription_date FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT patient_id FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT DISTINCT patient_id FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT * FROM prescriptions WHERE prescription_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT * FROM prescriptions WHERE refill_reminder = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT prescription_id, patient_id FROM prescriptions WHERE prescription_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT * FROM prescriptions WHERE patient_id = '12345678-1234-1234-1234-1234567890AB';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT prescription_name FROM prescriptions WHERE prescription_id = '87654321-4321-4321-4321-0987654321BA';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT * FROM prescriptions ORDER BY prescription_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT AVG(patient_id) FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT DISTINCT prescription_name FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT * FROM prescriptions WHERE patient_id IN ('12345678-1234-1234-1234-1234567890AB', '87654321-4321-4321-4321-0987654321BA');",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT * FROM prescriptions WHERE prescription_name LIKE '%pain%';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT * FROM prescriptions WHERE prescription_name = 'Antibiotic' AND prescription_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT patient_id, COUNT(*) FROM prescriptions GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT patient_id, MAX(prescription_date) FROM prescriptions GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT patient_id, prescription_name, COUNT(*) FROM prescriptions GROUP BY patient_id, prescription_name;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT * FROM prescriptions WHERE prescription_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT * FROM prescriptions WHERE prescription_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT prescription_id, prescription_name FROM prescriptions WHERE patient_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT DISTINCT prescription_name FROM prescriptions WHERE refill_reminder = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT prescription_name, prescription_date, refill_reminder FROM prescriptions WHERE patient_id = '123e4567-e89b-12d3-a456-426614174000' AND prescription_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT AVG(DATE_PART('year', AGE(prescription_date::DATE, '2022-01-01'::DATE))) AS years_since_prescribed FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT prescription_name, COUNT(*) AS total_prescriptions FROM prescriptions GROUP BY prescription_name;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT AVG(DATE_PART('year', AGE(prescription_date::DATE, CURRENT_DATE::DATE))) AS years_since_prescribed FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT prescription_name, prescription_date, COUNT(*) AS total_prescriptions FROM prescriptions GROUP BY prescription_name, prescription_date;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT prescription_name, COUNT(*) AS total_prescriptions FROM prescriptions WHERE prescription_date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY prescription_name;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT prescription_name, prescription_date, COUNT(*) AS total_prescriptions FROM prescriptions WHERE patient_id = '123e4567-e89b-12d3-a456-426614174000' GROUP BY prescription_name, prescription_date;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT prescription_name, COUNT(*) AS total_prescriptions FROM prescriptions WHERE patient_id = '123e4567-e89b-12d3-a456-426614174000' AND prescription_date BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY prescription_name;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT prescription_name, prescription_date, COUNT(*) AS total_prescriptions FROM prescriptions WHERE refill_reminder = TRUE GROUP BY prescription_name, prescription_date;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT prescription_name, COUNT(*) AS total_prescriptions FROM prescriptions WHERE refill_reminder = TRUE GROUP BY prescription_name;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT prescription_name, prescription_date, refill_reminder, AGE(prescription_date::DATE, CURRENT_DATE::DATE) AS days_since_prescribed FROM prescriptions WHERE prescription_date <= CURRENT_DATE;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT prescription_name, prescription_date, refill_reminder, AGE(prescription_date::DATE, '2021-01-01'::DATE) AS days_since_prescribed FROM prescriptions WHERE prescription_date >= '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT prescription_name, prescription_date, refill_reminder, AGE(prescription_date::DATE, '2021-01-01'::DATE) AS days_since_prescribed FROM prescriptions WHERE prescription_date >= '2021-01-01' AND patient_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT prescription_name, prescription_date, refill_reminder, AGE(prescription_date::DATE, '2021-01-01'::DATE) AS days_since_prescribed FROM prescriptions WHERE prescription_date >= '2021-01-01' AND refill_reminder = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT prescription_name, prescription_date, refill_reminder, AGE(prescription_date::DATE, '2021-01-01'::DATE) AS days_since_prescribed FROM prescriptions WHERE prescription_date >= '2021-01-01' AND refill_reminder = TRUE AND patient_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n\tprescription_id UUID PRIMARY KEY,\n\tpatient_id UUID NOT NULL,\n\tprescription_name VARCHAR(50) NOT NULL,\n\tprescription_date DATE NOT NULL,\n\trefill_reminder BOOLEAN DEFAULT FALSE\n);\n\n### STATEMENT\n\nSELECT prescription_name, prescription_date, refill_reminder, AGE(prescription_date::DATE, '2021-01-01'::DATE) AS days_since_prescribed FROM prescriptions WHERE prescription_date >= '2021-01-01' AND refill_reminder = TRUE AND patient_id = '123e4567-e89b-12d3-a456-426614174000' ORDER BY prescription_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT * FROM Prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT prescription_id, prescription_name FROM Prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT prescription_name FROM Prescriptions WHERE patient_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT * FROM Prescriptions WHERE refill_reminder = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT * FROM Prescriptions WHERE prescription_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT MAX(prescription_id) FROM Prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT * FROM Reminders;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT reminder_text, reminder_date FROM Reminders;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT * FROM Reminders WHERE patient_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT reminder_text FROM Reminders WHERE reminder_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT * FROM Reminders ORDER BY reminder_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT * FROM Reminders WHERE reminder_text LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT DISTINCT patient_id FROM Reminders;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT patient_id, COUNT(*) FROM Reminders GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT patient_id, AVG(reminder_date) FROM Reminders GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT * FROM Prescriptions p JOIN Reminders r ON p.patient_id = r.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT p.prescription_name, r.reminder_text FROM Prescriptions p JOIN Reminders r ON p.patient_id = r.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT p.prescription_name, COUNT(*) FROM Prescriptions p JOIN Reminders r ON p.patient_id = r.patient_id GROUP BY p.prescription_name;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT prescription_name, reminder_text, reminder_date FROM Prescriptions p JOIN Reminders r ON p.patient_id = r.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT * FROM Prescriptions WHERE prescription_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT prescription_id, prescription_name FROM Prescriptions WHERE refill_reminder = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT prescription_id, prescription_name, refill_reminder FROM Prescriptions WHERE patient_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT prescription_id, prescription_name FROM Prescriptions WHERE patient_id = 5 AND refill_reminder = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT prescription_id, patient_id, prescription_name, refill_reminder FROM Prescriptions WHERE prescription_name LIKE '%pain%';",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT * FROM Prescriptions JOIN Reminders ON Prescriptions.patient_id = Reminders.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT prescription_id, prescription_name, reminder_text, reminder_date FROM Prescriptions JOIN Reminders ON Prescriptions.patient_id = Reminders.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT prescription_id, prescription_name, refill_reminder, reminder_text, reminder_date FROM Prescriptions JOIN Reminders ON Prescriptions.patient_id = Reminders.patient_id WHERE Prescriptions.prescription_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT prescription_id, patient_id, prescription_name, refill_reminder FROM Prescriptions WHERE prescription_id IN (1, 3, 5);",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT prescription_id, prescription_name, refill_reminder FROM Prescriptions WHERE prescription_id BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT patient_id, COUNT(prescription_id) AS total_prescriptions FROM Prescriptions GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT patient_id, COUNT(reminder_id) AS total_reminders FROM Reminders GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT patient_id, MAX(reminder_date) AS latest_reminder_date FROM Reminders GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT patient_id, AVG(reminder_date) AS avg_reminder_date FROM Reminders GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT patient_id, prescription_id, reminder_id FROM Prescriptions FULL JOIN Reminders ON Prescriptions.patient_id = Reminders.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT patient_id, prescription_id, reminder_id FROM Prescriptions LEFT JOIN Reminders ON Prescriptions.patient_id = Reminders.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT patient_id, prescription_id, reminder_id FROM Prescriptions RIGHT JOIN Reminders ON Prescriptions.patient_id = Reminders.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT prescription_id, patient_id, prescription_name FROM Prescriptions WHERE prescription_id = (SELECT MAX(prescription_id) FROM Prescriptions);",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT prescription_id, patient_id, prescription_name FROM Prescriptions WHERE prescription_id = (SELECT MIN(prescription_id) FROM Prescriptions);",
  "### TABLEDATA\n\nCREATE TABLE Prescriptions (\n  prescription_id INT,\n  patient_id INT,\n  prescription_name VARCHAR(255),\n  refill_reminder BOOLEAN,\n);\n\n\nCREATE TABLE Reminders (\n  reminder_id INT,\n  patient_id INT,\n  reminder_text TEXT,\n  reminder_date TIMESTAMP,\n);\n\n### STATEMENT\n\nSELECT prescription_id, patient_id, prescription_name FROM Prescriptions WHERE prescription_id = (SELECT MAX(prescription_id) FROM Prescriptions WHERE patient_id = 5);",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Prescription;",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT prescription_id, medication_name, dosage FROM Prescription WHERE patient_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT prescription_id, refill_date FROM Prescription WHERE medication_name = 'Aspirin';",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM RefillReminder;",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT reminder_id, reminder_date FROM RefillReminder WHERE patient_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM ReminderTrigger WHERE patient_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT trigger_id, trigger_type FROM ReminderTrigger;",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Prescription WHERE frequency > 2;",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT prescription_id, medication_name, dosage FROM Prescription WHERE frequency = 1;",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM RefillReminder WHERE reminder_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM ReminderTrigger WHERE trigger_type = 'Daily';",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT prescription_id, medication_name, dosage FROM Prescription WHERE refill_date < CURRENT_DATE;",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM RefillReminder WHERE reminder_message LIKE '%refill%';",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM ReminderTrigger WHERE trigger_type LIKE '%Weekly%';",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Prescription;",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(dosage) FROM Prescription;",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(frequency) FROM Prescription;",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT patient_id, COUNT(*) FROM Prescription GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT patient_id, MAX(dosage) FROM Prescription GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT patient_id, AVG(frequency) FROM Prescription GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT patient_id, COUNT(*) AS prescription_count FROM Prescription GROUP BY patient_id HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Prescription WHERE dosage > 100 AND frequency >= 3;",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT medication_name, dosage, refill_date FROM Prescription WHERE medication_name = 'Aspirin';",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT patient_id, medication_name, dosage FROM Prescription WHERE frequency <= 2 OR refill_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Prescription WHERE patient_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Prescription WHERE medication_name LIKE 'Paracetamol%';",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT medication_name FROM Prescription WHERE dosage > 50;",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM RefillReminder WHERE reminder_date BETWEEN '2022-01-01' AND '2022-12-31' ORDER BY reminder_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT reminder_id, reminder_message FROM RefillReminder WHERE patient_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM ReminderTrigger WHERE trigger_type = 'Email' AND patient_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT prescription_id, medication_name, refill_date FROM Prescription p JOIN RefillReminder r ON p.patient_id = r.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Prescription WHERE frequency IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Prescription WHERE dosage BETWEEN 50 AND 100 AND refill_date < '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Prescription ORDER BY refill_date, dosage DESC;",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT patient_id, COUNT(*) AS prescription_count FROM Prescription GROUP BY patient_id HAVING COUNT(*) > 5;",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT reminder_id, patient_id, COUNT(*) AS reminder_count FROM RefillReminder GROUP BY patient_id HAVING COUNT(*) > 3;",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT prescription_id, medication_name, dosage, refill_date FROM Prescription UNION SELECT reminder_id, NULL, NULL, reminder_date FROM RefillReminder;",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT p.patient_id, p.medication_name, p.dosage, r.reminder_date, r.reminder_message FROM Prescription p LEFT JOIN RefillReminder r ON p.patient_id = r.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT r.reminder_id, r.patient_id, p.medication_name, p.refill_date FROM ReminderTrigger r INNER JOIN Prescription p ON r.patient_id = p.patient_id AND r.trigger_type = 'Phone';",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Prescription p INNER JOIN ReminderTrigger t ON p.patient_id = t.patient_id INNER JOIN RefillReminder r ON p.patient_id = r.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Prescription (\n  prescription_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  medication_name VARCHAR(255) NOT NULL,\n  dosage FLOAT,\n  frequency INTEGER,\n  refill_date DATE\n);\n\nCREATE TABLE RefillReminder (\n  reminder_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  reminder_date DATE NOT NULL,\n  reminder_message TEXT\n);\n\nCREATE TABLE ReminderTrigger (\n  trigger_id UUID PRIMARY KEY,\n  patient_id UUID NOT NULL,\n  trigger_type VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT patient_id, SUM(dosage) AS total_dosage FROM Prescription GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT prescription_id, medication_name FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patient_id, prescription_id, medication_name FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patient_id, patient_name FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patient_id, patient_name, phone_number FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM refill_reminders;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT reminder_id, prescription_id FROM refill_reminders;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT reminder_id, prescription_id, reminder_date FROM refill_reminders;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM refill_logs;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT log_id, prescription_id FROM refill_logs;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT log_id, prescription_id, refill_date FROM refill_logs;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patient_name, medication_name FROM prescriptions p INNER JOIN patients pt ON p.patient_id = pt.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT p.medication_name, rr.reminder_date FROM prescriptions p INNER JOIN refill_reminders rr ON p.prescription_id = rr.prescription_id;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT pt.patient_name, rl.refill_date FROM patients pt INNER JOIN refill_logs rl ON pt.patient_id = rl.prescription_id;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT p.medication_name, rr.message FROM prescriptions p INNER JOIN refill_reminders rr ON p.prescription_id = rr.prescription_id;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT pt.patient_name, rl.refill_quantity FROM patients pt INNER JOIN refill_logs rl ON pt.patient_id = rl.prescription_id;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT p.medication_name, rl.refill_status FROM prescriptions p INNER JOIN refill_logs rl ON p.prescription_id = rl.prescription_id;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM prescriptions WHERE refill_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM refill_logs WHERE refill_quantity < 10;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM prescriptions WHERE patient_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT prescription_id, medication_name, refill_date FROM prescriptions WHERE dosage LIKE '%mg';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patients.patient_name, prescriptions.medication_name FROM patients JOIN prescriptions ON patients.patient_id = prescriptions.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM refill_reminders WHERE prescription_id IN (SELECT prescription_id FROM prescriptions WHERE medication_name = 'Aspirin');",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patients.patient_name, prescriptions.medication_name, refill_reminders.reminder_date FROM patients JOIN prescriptions ON patients.patient_id = prescriptions.patient_id JOIN refill_reminders ON prescriptions.prescription_id = refill_reminders.prescription_id;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT DISTINCT medication_name FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT prescription_id, medication_name, refill_date FROM prescriptions WHERE refill_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patients.patient_name, prescriptions.medication_name, refill_logs.refill_quantity FROM patients JOIN prescriptions ON patients.patient_id = prescriptions.patient_id JOIN refill_logs ON prescriptions.prescription_id = refill_logs.prescription_id;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_prescriptions FROM prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT AVG(refill_quantity) AS avg_refill_quantity FROM refill_logs;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patients.patient_name, COUNT(*) AS total_prescriptions FROM patients JOIN prescriptions ON patients.patient_id = prescriptions.patient_id GROUP BY patients.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT medication_name, SUM(refill_quantity) AS total_refills FROM prescriptions JOIN refill_logs ON prescriptions.prescription_id = refill_logs.prescription_id GROUP BY medication_name;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patient_id, MAX(refill_quantity) AS max_refill_quantity FROM prescriptions JOIN refill_logs ON prescriptions.prescription_id = refill_logs.prescription_id GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT medication_name, COUNT(*) AS total_prescriptions, AVG(refill_quantity) AS avg_refills FROM prescriptions JOIN refill_logs ON prescriptions.prescription_id = refill_logs.prescription_id GROUP BY medication_name;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patients.patient_name, prescriptions.medication_name, refill_logs.refill_date FROM patients JOIN prescriptions ON patients.patient_id = prescriptions.patient_id JOIN refill_logs ON prescriptions.prescription_id = refill_logs.prescription_id WHERE refill_logs.refill_status = 'Complete';",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT prescription_id, refill_quantity, CASE WHEN refill_quantity > 10 THEN 'High Refill' WHEN refill_quantity <= 10 AND refill_quantity > 5 THEN 'Medium Refill' ELSE 'Low Refill' END AS refill_category FROM refill_logs;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT medication_name, COUNT(*) AS total_refills FROM prescriptions JOIN refill_logs ON prescriptions.prescription_id = refill_logs.prescription_id WHERE refill_logs.refill_status = 'Pending' GROUP BY medication_name;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patients.patient_name, prescriptions.medication_name, refill_date, message FROM patients JOIN prescriptions ON patients.patient_id = prescriptions.patient_id JOIN refill_reminders ON prescriptions.prescription_id = refill_reminders.prescription_id;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT medication_name, COUNT(*) AS total_refills FROM prescriptions JOIN refill_logs ON prescriptions.prescription_id = refill_logs.prescription_id WHERE refill_logs.refill_status = 'Failed' GROUP BY medication_name;",
  "### TABLEDATA\n\nCREATE TABLE prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  medication_name VARCHAR(255),\n  dosage VARCHAR(50),\n  refill_date DATE\n);\n\n\nCREATE TABLE patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255),\n  phone_number VARCHAR(15),\n  email VARCHAR(255),\n  address VARCHAR(255)\n);\n\n\nCREATE TABLE refill_reminders (\n  reminder_id INT PRIMARY KEY,\n  prescription_id INT,\n  reminder_date DATE,\n  message VARCHAR(255)\n);\n\n\nCREATE TABLE refill_logs (\n  log_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_quantity INT,\n  refill_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT patients.patient_name, prescriptions.medication_name, refill_quantity, refill_date, refill_status FROM patients JOIN prescriptions ON patients.patient_id = prescriptions.patient_id JOIN refill_logs ON prescriptions.prescription_id = refill_logs.prescription_id ORDER BY refill_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT patient_id, patient_name FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT patient_id, patient_name, patient_age FROM Patients WHERE patient_age > 50;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM Doctors;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT doctor_id, doctor_name FROM Doctors;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT doctor_id, doctor_name, doctor_specialty FROM Doctors WHERE doctor_specialty = 'Cardiology';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM Prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT prescription_id, patient_id, doctor_id, prescription_date FROM Prescriptions;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT prescription_id, patient_id, doctor_id, medicine_name, dosage FROM Prescriptions WHERE dosage > 100;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM RefillReminders;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT reminder_id, patient_id, reminder_date FROM RefillReminders;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT reminder_id, patient_id, reminder_date, reminder_description FROM RefillReminders WHERE reminder_date < '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM PrescriptionHistory;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT history_id, prescription_id, refill_date FROM PrescriptionHistory;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT history_id, prescription_id, refill_date, refill_completed FROM PrescriptionHistory WHERE refill_completed = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT Patients.patient_name, Prescriptions.medicine_name FROM Patients INNER JOIN Prescriptions ON Patients.patient_id = Prescriptions.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT Patients.patient_name, Doctors.doctor_name, Prescriptions.medicine_name FROM Patients INNER JOIN Prescriptions ON Patients.patient_id = Prescriptions.patient_id INNER JOIN Doctors ON Prescriptions.doctor_id = Doctors.doctor_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT Patients.patient_name, RefillReminders.reminder_date, PrescriptionHistory.refill_date FROM Patients LEFT JOIN RefillReminders ON Patients.patient_id = RefillReminders.patient_id LEFT JOIN PrescriptionHistory ON Patients.patient_id = PrescriptionHistory.prescription_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT Patients.patient_name, Doctors.doctor_specialty, PrescriptionHistory.refill_completed FROM Patients LEFT JOIN Prescriptions ON Patients.patient_id = Prescriptions.prescription_id LEFT JOIN Doctors ON Prescriptions.doctor_id = Doctors.doctor_id LEFT JOIN PrescriptionHistory ON Prescriptions.prescription_id = PrescriptionHistory.prescription_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT Patients.patient_name, RefillReminders.reminder_description FROM Patients LEFT JOIN RefillReminders ON Patients.patient_id = RefillReminders.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT * FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT patient_id, patient_name, patient_age FROM Patients WHERE patient_age > 60;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT p.patient_name, d.doctor_name, pr.prescription_date FROM Patients p INNER JOIN Prescriptions pr ON p.patient_id = pr.patient_id INNER JOIN Doctors d ON pr.doctor_id = d.doctor_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT p.patient_name, r.reminder_date, r.reminder_description FROM Patients p INNER JOIN RefillReminders r ON p.patient_id = r.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT p.patient_name, pr.medicine_name, ph.refill_date FROM Patients p INNER JOIN Prescriptions pr ON p.patient_id = pr.patient_id INNER JOIN PrescriptionHistory ph ON pr.prescription_id = ph.prescription_id WHERE ph.refill_completed = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT p.patient_name, d.doctor_name, pr.prescription_date FROM Patients p INNER JOIN Prescriptions pr ON p.patient_id = pr.patient_id INNER JOIN Doctors d ON pr.doctor_id = d.doctor_id WHERE pr.prescription_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT d.doctor_name, COUNT(pr.prescription_id) AS prescription_count FROM Doctors d LEFT JOIN Prescriptions pr ON d.doctor_id = pr.doctor_id GROUP BY d.doctor_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT p.patient_name, pr.medicine_name FROM Patients p LEFT JOIN Prescriptions pr ON p.patient_id = pr.patient_id WHERE pr.medicine_name LIKE '%ibuprofen%';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT p.patient_name, AVG(ph.refill_date) AS average_refill_date FROM Patients p INNER JOIN Prescriptions pr ON p.patient_id = pr.patient_id INNER JOIN PrescriptionHistory ph ON pr.prescription_id = ph.prescription_id GROUP BY p.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT p.patient_name, COUNT(r.reminder_id) AS reminder_count FROM Patients p LEFT JOIN RefillReminders r ON p.patient_id = r.patient_id GROUP BY p.patient_name HAVING reminder_count > 1;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT p.patient_name, MAX(ph.refill_date) AS latest_refill_date FROM Patients p INNER JOIN Prescriptions pr ON p.patient_id = pr.patient_id INNER JOIN PrescriptionHistory ph ON pr.prescription_id = ph.prescription_id GROUP BY p.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT p.patient_name, pr.medicine_name, ph.refill_date FROM Patients p INNER JOIN Prescriptions pr ON p.patient_id = pr.patient_id INNER JOIN PrescriptionHistory ph ON pr.prescription_id = ph.prescription_id WHERE pr.dosage > 50;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT p.patient_name, d.doctor_name, pr.prescription_date FROM Patients p INNER JOIN Prescriptions pr ON p.patient_id = pr.patient_id INNER JOIN Doctors d ON pr.doctor_id = d.doctor_id WHERE p.patient_gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT d.doctor_name, AVG(pr.dosage) AS average_dosage FROM Doctors d INNER JOIN Prescriptions pr ON d.doctor_id = pr.doctor_id GROUP BY d.doctor_name HAVING average_dosage > 30;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT p.patient_name, r.reminder_date, r.reminder_description, ph.refill_completed FROM Patients p INNER JOIN RefillReminders r ON p.patient_id = r.patient_id LEFT JOIN PrescriptionHistory ph ON r.patient_id = ph.prescription_id WHERE ph.refill_completed = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT p.patient_name, pr.medicine_name FROM Patients p LEFT JOIN Prescriptions pr ON p.patient_id = pr.patient_id WHERE pr.dosage BETWEEN 20 AND 40;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT p.patient_name, pr.medicine_name, ph.refill_date FROM Patients p INNER JOIN Prescriptions pr ON p.patient_id = pr.patient_id INNER JOIN PrescriptionHistory ph ON pr.prescription_id = ph.prescription_id ORDER BY ph.refill_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT p.patient_name, d.doctor_name, pr.prescription_date FROM Patients p INNER JOIN Prescriptions pr ON p.patient_id = pr.patient_id INNER JOIN Doctors d ON pr.doctor_id = d.doctor_id ORDER BY pr.prescription_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT p.patient_name, r.reminder_date, r.reminder_description FROM Patients p INNER JOIN RefillReminders r ON p.patient_id = r.patient_id WHERE r.reminder_date <= '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Patients (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(50),\n  patient_age INT,\n  patient_gender VARCHAR(10),\n  prescription_refill_date DATE\n);\n\n\nCREATE TABLE Doctors (\n  doctor_id INT PRIMARY KEY,\n  doctor_name VARCHAR(50),\n  doctor_specialty VARCHAR(50)\n);\n\n\nCREATE TABLE Prescriptions (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  doctor_id INT,\n  prescription_date DATE,\n  medicine_name VARCHAR(50),\n  dosage INT\n);\n\n\nCREATE TABLE RefillReminders (\n  reminder_id INT PRIMARY KEY,\n  patient_id INT,\n  reminder_date DATE,\n  reminder_description TEXT\n);\n\n\nCREATE TABLE PrescriptionHistory (\n  history_id INT PRIMARY KEY,\n  prescription_id INT,\n  refill_date DATE,\n  refill_completed BOOLEAN\n);\n\n### STATEMENT\n\nSELECT d.doctor_name, MAX(pr.prescription_date) AS latest_prescription_date FROM Doctors d INNER JOIN Prescriptions pr ON d.doctor_id = pr.doctor_id GROUP BY d.doctor_name ORDER BY latest_prescription_date DESC;"
]