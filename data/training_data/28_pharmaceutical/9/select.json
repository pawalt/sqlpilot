[
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM medical_literature;",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT id, title, authors FROM medical_literature;",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT id, title FROM medical_literature WHERE publication_date > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT title, authors FROM medical_literature WHERE category = 'Cardiology';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT id, title, authors, publication_date FROM medical_literature WHERE authors LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT title FROM medical_literature WHERE publication_date BETWEEN '2020-01-01' AND '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM medical_literature WHERE category = 'Oncology' AND publication_date > '2019-01-01';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT id, title, publication_date FROM medical_literature WHERE authors LIKE '%Smith%' ORDER BY publication_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT title, category FROM medical_literature WHERE publication_date < '2018-01-01' AND category IN ('Neurology', 'Dermatology');",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT id, title, authors FROM medical_literature WHERE title LIKE '%diabetes%' ORDER BY id;",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT title FROM medical_literature WHERE authors = 'Jane Doe' AND category = 'Internal Medicine';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM medical_literature WHERE category LIKE '%logy%' AND publication_date > '2017-01-01';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT id, title, authors FROM medical_literature WHERE publication_date < '2016-01-01' AND category = 'Pediatrics';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT id, authors FROM medical_literature WHERE title = 'Clinical Trials in Psychiatry';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT title, publication_date FROM medical_literature WHERE authors IN ('Alice Johnson', 'Bob Smith') ORDER BY publication_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM medical_literature WHERE category = 'Emergency Medicine' AND authors NOT LIKE '%Johnson%';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT id, category FROM medical_literature WHERE category = 'Surgery' OR category = 'Orthopedics';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT id, title, authors, category FROM medical_literature WHERE publication_date < '2015-01-01' ORDER BY publication_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT DISTINCT category FROM medical_literature;",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT id, title, publication_date FROM medical_literature WHERE title LIKE '%research%' AND authors NOT IN ('John Smith', 'Sarah Johnson');",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM medical_literature WHERE publication_date BETWEEN '2021-01-01' AND '2021-12-31'",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT id, title, authors FROM medical_literature WHERE category='Cardiology' ORDER BY publication_date DESC",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT title, authors FROM medical_literature WHERE title LIKE '%diabetes%' OR title LIKE '%insulin%'",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM medical_literature WHERE publication_date >= '2021-01-01' AND authors LIKE '%Smith%'",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_count FROM medical_literature WHERE category='Neurology'",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT DISTINCT authors FROM medical_literature",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT id, title, authors, publication_date FROM medical_literature ORDER BY publication_date DESC LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT category, COUNT(*) AS publication_count FROM medical_literature GROUP BY category",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT id, title, publication_date FROM medical_literature WHERE category='Oncology' AND (authors LIKE '%Doe%' OR authors LIKE '%Johnson%')",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM medical_literature WHERE category='Dermatology' OR category='Endocrinology'",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT AVG(id) AS average_id, AVG(LENGTH(title)) AS average_title_length FROM medical_literature",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM medical_literature WHERE publication_date < '2020-01-01' OR publication_date > '2021-12-31'",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT title, COUNT(*) AS publication_count FROM medical_literature GROUP BY title HAVING COUNT(*) > 1",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT category, YEAR(publication_date) AS publication_year FROM medical_literature WHERE category='Cardiology'",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT authors, COUNT(*) AS publication_count FROM medical_literature GROUP BY authors HAVING COUNT(*) >= 3",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT id, title, publication_date FROM medical_literature WHERE authors LIKE '%Williams%' AND category='Pediatrics'",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM medical_literature WHERE category='Psychiatry' ORDER BY RAND() LIMIT 3",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT category, COUNT(*) AS publication_count FROM medical_literature WHERE publication_date >= '2019-01-01' GROUP BY category",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT AVG(LENGTH(authors)) AS average_authors_length FROM medical_literature WHERE category='Gastroenterology'",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT id, title, publication_date FROM medical_literature WHERE title NOT LIKE '%cancer%'",
  "### TABLEDATA\n\nCREATE TABLE medical_literature(\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  authors VARCHAR,\n  publication_date DATE,\n  category VARCHAR\n)\n\n### STATEMENT\n\nSELECT DISTINCT publication_date FROM medical_literature ORDER BY publication_date ASC LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM medical_literature;",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT id, title, author FROM medical_literature;",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT title, publication_date FROM medical_literature;",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM medical_literature WHERE publication_date >= '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM medical_literature WHERE author = 'John Smith';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT id, title, author FROM medical_literature WHERE publication_date < '2020-01-01';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM research_studies;",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT id, title, researcher FROM research_studies;",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT title, start_date, end_date FROM research_studies;",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM research_studies WHERE start_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM research_studies WHERE researcher = 'Jane Doe';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT id, title, researcher FROM research_studies WHERE end_date < '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT id, title, author, publication_date FROM medical_literature WHERE author = 'Alice Johnson';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT title, researcher FROM research_studies WHERE title LIKE '%cancer%';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM medical_literature ORDER BY publication_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM research_studies ORDER BY start_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT id, title, author FROM medical_literature WHERE id = 5;",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT title, researcher FROM research_studies WHERE id = 10;",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM medical_literature;",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT MAX(publication_date) FROM medical_literature;",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM medical_literature WHERE author = 'John Smith';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT title, author, publication_date FROM medical_literature WHERE publication_date >= '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT title, author FROM medical_literature WHERE title LIKE '%research%';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM medical_literature WHERE id = 5;",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT id, title FROM medical_literature WHERE author = 'Jane Doe' AND publication_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM medical_literature WHERE author LIKE '%Williams%' ORDER BY publication_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT id, title, author FROM medical_literature WHERE publication_date BETWEEN '2020-01-01' AND '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT title, author, publication_date FROM medical_literature WHERE author = 'Dr. Brown' AND title LIKE '%study%';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM research_studies WHERE researcher = 'Alice Johnson';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT id, title, start_date FROM research_studies WHERE description LIKE '%clinical trial%';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM research_studies WHERE start_date >= '2021-01-01' AND end_date <= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT title, researcher FROM research_studies WHERE researcher IN ('Dr. Smith', 'Dr. Patel');",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT id, title, description FROM research_studies WHERE description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM research_studies WHERE id = 7;",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT title, start_date, end_date FROM research_studies WHERE researcher = 'Dr. Brown';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM research_studies WHERE title = 'COVID-19 Study';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT id, title, researcher FROM research_studies WHERE start_date < '2022-01-01' ORDER BY start_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM research_studies WHERE researcher = 'Dr. Jones' AND end_date >= '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT id, title FROM research_studies WHERE description LIKE '%randomized control trial%' AND start_date BETWEEN '2020-01-01' AND '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE medical_literature (\n    id INT PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\nCREATE TABLE research_studies (\n    id INT PRIMARY KEY,\n    title TEXT,\n    researcher TEXT,\n    description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM research_studies WHERE researcher LIKE '%Williams%' ORDER BY start_date;",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM articles;",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT title, author FROM articles;",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT id, title, author, publication_date FROM articles;",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM authors;",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT name, affiliation FROM authors;",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT id, name, affiliation, expertise FROM authors;",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM citations;",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT article_id, cited_article_id FROM citations;",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT id, article_id, cited_article_id, citation_date FROM citations;",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT articles.title, authors.name FROM articles JOIN authors ON articles.author = authors.name;",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT articles.title, citations.cited_article_id FROM articles JOIN citations ON articles.id = citations.article_id;",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT authors.name, citations.cited_article_id FROM authors JOIN citations ON authors.id = citations.article_id;",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT articles.title, authors.name, citations.citation_date FROM articles JOIN authors ON articles.author = authors.name JOIN citations ON articles.id = citations.article_id;",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM articles WHERE author = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM articles WHERE publication_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM authors WHERE expertise = 'Machine Learning';",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM citations WHERE citation_date <= '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT articles.title, authors.name FROM articles JOIN authors ON articles.author = authors.name WHERE authors.affiliation = 'University X';",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT articles.title, citations.cited_article_id FROM articles JOIN citations ON articles.id = citations.article_id WHERE citations.citation_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT authors.name, citations.cited_article_id FROM authors JOIN citations ON authors.id = citations.article_id WHERE citations.citation_date <= '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM articles WHERE author = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT id, title FROM articles WHERE publication_date >= '2020-01-01';",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT title, author, publication_date FROM articles WHERE author = 'Jane Smith' ORDER BY publication_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT title, affiliation FROM articles JOIN authors ON articles.author = authors.name;",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT articles.title, authors.name FROM articles JOIN authors ON articles.author = authors.name WHERE articles.publication_date >= '2019-01-01';",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) as total_articles FROM articles;",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT authors.name, COUNT(*) as total_articles FROM articles JOIN authors ON articles.author = authors.name GROUP BY authors.name;",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT articles.title, citations.cited_article_id, citations.citation_date FROM articles JOIN citations ON articles.id = citations.article_id ORDER BY citations.citation_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT authors.name, COUNT(*) as total_citations FROM authors JOIN articles ON authors.name = articles.author JOIN citations ON articles.id = citations.article_id GROUP BY authors.name;",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT title, publication_date FROM articles WHERE id = (SELECT article_id FROM citations WHERE cited_article_id = 1);",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT authors.name, articles.title FROM authors JOIN articles ON authors.name = articles.author WHERE articles.id IN (SELECT article_id FROM citations WHERE cited_article_id = 1);",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT title, author, publication_date, citation_date FROM articles JOIN citations ON articles.id = citations.article_id;",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT articles.title, authors.name, citations.citation_date FROM articles JOIN citations ON articles.id = citations.article_id JOIN authors ON articles.author = authors.name WHERE citations.cited_article_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT a.title as article_title, b.title as cited_article_title FROM articles a JOIN citations ON a.id = citations.article_id JOIN articles b ON b.id = citations.cited_article_id;",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT authors.name, articles.title, citations.citation_date FROM authors JOIN articles ON authors.name = articles.author JOIN citations ON articles.id = citations.article_id;",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT title, author, publication_date FROM articles WHERE publication_date BETWEEN '2018-01-01' AND '2019-01-01';",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT id, title, author FROM articles WHERE author LIKE '%Doe%';",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT authors.name, COUNT(*) as total_citations FROM authors JOIN articles ON authors.name = articles.author JOIN citations ON articles.id = citations.article_id GROUP BY authors.name HAVING COUNT(*) > 5;",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT title, author FROM articles UNION SELECT title, author FROM articles WHERE publication_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT author, COUNT(*) as total_articles FROM articles GROUP BY author HAVING COUNT(*) > 3;",
  "### TABLEDATA\n\nCREATE TABLE articles (\n    id SERIAL PRIMARY KEY,\n    title TEXT,\n    author TEXT,\n    publication_date DATE\n);\n\n\nCREATE TABLE authors (\n    id SERIAL PRIMARY KEY,\n    name TEXT,\n    affiliation TEXT,\n    expertise TEXT\n);\n\n\nCREATE TABLE citations (\n    id SERIAL PRIMARY KEY,\n    article_id INT,\n    cited_article_id INT,\n    citation_date DATE\n);\n\n### STATEMENT\n\nSELECT title, author, publication_date FROM articles WHERE author = (SELECT name FROM authors WHERE expertise = 'Machine Learning');",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT * FROM articles",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT title, author FROM articles",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT title, author, published_date FROM articles",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT id, title, author, published_date FROM articles",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT * FROM authors",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT name, affiliation FROM authors",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT * FROM categories",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT name FROM categories",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT article_id, author_id FROM references",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT articles.title, authors.name FROM articles INNER JOIN authors ON articles.author = authors.name",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT articles.title, authors.name FROM articles JOIN authors ON articles.author = authors.name",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT articles.title, articles.content, authors.name FROM articles JOIN authors ON articles.author = authors.name",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT articles.title, authors.name FROM articles LEFT JOIN authors ON articles.author = authors.name",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT articles.title, authors.name FROM articles RIGHT JOIN authors ON articles.author = authors.name",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT articles.title, authors.name FROM articles FULL JOIN authors ON articles.author = authors.name",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT articles.title, authors.name FROM articles JOIN authors ON articles.author = authors.name WHERE articles.id = 1",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT articles.title, authors.name FROM articles JOIN authors ON articles.author = authors.name ORDER BY articles.published_date DESC",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT articles.title, COUNT(*) AS num_references FROM articles JOIN references ON articles.id = references.article_id GROUP BY articles.title",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT articles.title, authors.name FROM articles JOIN authors ON articles.author = authors.name LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT articles.title, authors.name FROM articles JOIN authors ON articles.author = authors.name OFFSET 5",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT * FROM articles",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT title, author FROM articles",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT * FROM authors",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT name, email FROM authors",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT * FROM categories",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT name FROM categories",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT a.title, b.name FROM articles a JOIN authors b ON a.author = b.author_id",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM articles",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT author, COUNT(*) FROM articles GROUP BY author",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT a.title, b.name, c.name FROM articles a JOIN authors b ON a.author = b.author_id JOIN categories c ON a.category_id = c.category_id",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT a.title, b.name, c.name FROM articles a JOIN authors b ON a.author = b.author_id JOIN categories c ON a.category_id = c.category_id WHERE a.published_date > '2021-01-01'",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT a.title, b.name, c.name FROM articles a JOIN authors b ON a.author = b.author_id JOIN categories c ON a.category_id = c.category_id ORDER BY a.published_date DESC",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT a.title, b.name, c.name FROM articles a JOIN authors b ON a.author = b.author_id JOIN categories c ON a.category_id = c.category_id LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT a.title, COUNT(*) FROM articles a JOIN references r ON a.id = r.article_id GROUP BY a.title HAVING COUNT(*) > 1",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT a.title, b.name, COUNT(*) FROM articles a JOIN authors b ON a.author = b.author_id JOIN references r ON a.id = r.article_id GROUP BY a.title, b.name",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT a.title, b.name, c.name FROM articles a JOIN authors b ON a.author = b.author_id JOIN categories c ON a.category_id = c.category_id WHERE c.name = 'Science'",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT a.title, b.name, c.name FROM articles a JOIN authors b ON a.author = b.author_id JOIN categories c ON a.category_id = c.category_id WHERE a.content LIKE '%machine learning%'",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT a.title, b.name, c.name FROM articles a JOIN authors b ON a.author = b.author_id JOIN categories c ON a.category_id = c.category_id WHERE a.published_date BETWEEN '2020-01-01' AND '2021-01-01'",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT a.title, b.name, c.name FROM articles a JOIN authors b ON a.author = b.author_id JOIN categories c ON a.category_id = c.category_id WHERE a.author = 1",
  "### TABLEDATA\n\nCREATE TABLE articles (\n  id INT PRIMARY KEY,\n  title VARCHAR,\n  author VARCHAR,\n  published_date DATE,\n  content TEXT\n)\n\nCREATE TABLE authors (\n  author_id INT PRIMARY KEY,\n  name VARCHAR,\n  affiliation VARCHAR,\n  email VARCHAR\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  name VARCHAR\n)\n\nCREATE TABLE references (\n  reference_id INT PRIMARY KEY,\n  article_id INT,\n  author_id INT,\n  FOREIGN KEY (article_id) REFERENCES articles(id),\n  FOREIGN KEY (author_id) REFERENCES authors(author_id)\n)\n\n### STATEMENT\n\nSELECT a.title, b.name, c.name FROM articles a JOIN authors b ON a.author = b.author_id JOIN categories c ON a.category_id = c.category_id WHERE a.id = 1",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT * FROM authors;",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT full_name, email FROM authors WHERE affiliation IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT title, publication_date FROM articles;",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT title, publication_date FROM articles WHERE publication_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT full_name, email FROM authors WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT journal_name FROM journals;",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT category_name FROM categories;",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT full_name, email, affiliation FROM authors WHERE full_name LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT title, publication_date FROM articles WHERE author_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT title, publication_date FROM articles WHERE publication_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT journal_name FROM journals WHERE journal_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT category_name FROM categories WHERE category_name = 'Science';",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT full_name, email FROM authors WHERE affiliation IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT title, publication_date FROM articles ORDER BY publication_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT full_name, email FROM authors WHERE full_name LIKE '%son' AND affiliation IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT title, publication_date FROM articles WHERE author_id IN (1, 2);",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT category_name FROM categories;",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT full_name, email FROM authors WHERE email IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT journal_name FROM journals ORDER BY journal_name;",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT title, publication_date FROM articles WHERE publication_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT * FROM authors;",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT full_name, affiliation FROM authors WHERE email LIKE '%@example.com';",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT title, publication_date, authors.full_name FROM articles JOIN authors ON articles.author_id = authors.author_id;",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT * FROM articles WHERE publication_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT articles.title, authors.full_name, journals.journal_name FROM articles JOIN authors ON articles.author_id = authors.author_id JOIN journals ON articles.journal_id = journals.journal_id;",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT title, COUNT(article_id) AS article_count FROM articles GROUP BY title HAVING COUNT(article_id) > 1;",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT articles.title, categories.category_name FROM articles JOIN article_categories ON articles.article_id = article_categories.article_id JOIN categories ON article_categories.category_id = categories.category_id;",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT author_id, full_name FROM authors;",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT article_id, title, publication_date FROM articles WHERE author_id IN (SELECT author_id FROM authors WHERE affiliation IS NOT NULL);",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT article_id, title, publication_date FROM articles WHERE author_id IN (SELECT author_id FROM authors WHERE affiliation IS NOT NULL) AND publication_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT * FROM authors WHERE author_id IN (SELECT author_id FROM articles GROUP BY author_id HAVING COUNT(author_id) > 1);",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT authors.full_name, COUNT(articles.article_id) AS article_count FROM authors LEFT JOIN articles ON authors.author_id = articles.author_id GROUP BY authors.full_name ORDER BY article_count DESC;",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT author_id, full_name, email FROM authors WHERE author_id BETWEEN 1 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT articles.title, categories.category_name, journals.journal_name FROM articles JOIN article_categories ON articles.article_id = article_categories.article_id JOIN categories ON article_categories.category_id = categories.category_id JOIN journals ON articles.journal_id = journals.journal_id;",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT authors.full_name, AVG(articles.article_id) AS avg_articles FROM authors LEFT JOIN articles ON authors.author_id = articles.author_id GROUP BY authors.full_name;",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT author_id, full_name, COUNT(article_id) AS article_count FROM authors LEFT JOIN articles ON authors.author_id = articles.author_id GROUP BY author_id, full_name;",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT author_id, full_name FROM authors UNION SELECT author_id, full_name FROM articles WHERE publication_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT author_id, full_name FROM authors INTERSECT SELECT author_id, full_name FROM articles WHERE publication_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT author_id, full_name FROM authors EXCEPT SELECT author_id, full_name FROM articles WHERE publication_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT author_id, COUNT(article_id) AS article_count FROM articles GROUP BY author_id ORDER BY article_count DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE authors (\n  author_id SERIAL PRIMARY KEY,\n  full_name VARCHAR(100) NOT NULL,\n  affiliation VARCHAR(100),\n  email VARCHAR(100)\n);\n\n\nCREATE TABLE articles (\n  article_id SERIAL PRIMARY KEY,\n  title VARCHAR(255) NOT NULL,\n  publication_date DATE,\n  author_id INT REFERENCES authors(author_id)\n);\n\n\nCREATE TABLE journals (\n  journal_id SERIAL PRIMARY KEY,\n  journal_name VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE categories (\n  category_id SERIAL PRIMARY KEY,\n  category_name VARCHAR(50) NOT NULL\n);\n\n\nCREATE TABLE article_categories (\n  article_id INT REFERENCES articles(article_id),\n  category_id INT REFERENCES categories(category_id),\n  PRIMARY KEY (article_id, category_id)\n);\n\n### STATEMENT\n\nSELECT author_id, full_name, SUM(articles.article_id) AS total_articles, journals.journal_name FROM authors LEFT JOIN articles ON authors.author_id = articles.author_id LEFT JOIN journals ON articles.journal_id = journals.journal_id GROUP BY author_id, full_name, journal_name HAVING total_articles > 0;"
]