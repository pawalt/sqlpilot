[
  "### TABLEDATA\n\nCREATE TABLE pharm_sales_data (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    sale_date DATE,\n    sale_amount DECIMAL,\n    location STRING\n)\n\n### STATEMENT\n\nSELECT * FROM pharm_sales_data LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE pharm_sales_data (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    sale_date DATE,\n    sale_amount DECIMAL,\n    location STRING\n)\n\n### STATEMENT\n\nSELECT product_name, sale_amount FROM pharm_sales_data WHERE location='New York';",
  "### TABLEDATA\n\nCREATE TABLE pharm_sales_data (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    sale_date DATE,\n    sale_amount DECIMAL,\n    location STRING\n)\n\n### STATEMENT\n\nSELECT DISTINCT location FROM pharm_sales_data;",
  "### TABLEDATA\n\nCREATE TABLE pharm_sales_data (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    sale_date DATE,\n    sale_amount DECIMAL,\n    location STRING\n)\n\n### STATEMENT\n\nSELECT product_id, sale_date FROM pharm_sales_data ORDER BY sale_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE pharm_sales_data (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    sale_date DATE,\n    sale_amount DECIMAL,\n    location STRING\n)\n\n### STATEMENT\n\nSELECT AVG(sale_amount) AS avg_sale_amount FROM pharm_sales_data;",
  "### TABLEDATA\n\nCREATE TABLE pharm_sales_data (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    sale_date DATE,\n    sale_amount DECIMAL,\n    location STRING\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_sales FROM pharm_sales_data;",
  "### TABLEDATA\n\nCREATE TABLE pharm_sales_data (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    sale_date DATE,\n    sale_amount DECIMAL,\n    location STRING\n)\n\n### STATEMENT\n\nSELECT product_name, sale_amount FROM pharm_sales_data WHERE sale_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE pharm_sales_data (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    sale_date DATE,\n    sale_amount DECIMAL,\n    location STRING\n)\n\n### STATEMENT\n\nSELECT location, COUNT(*) AS total_sales FROM pharm_sales_data GROUP BY location;",
  "### TABLEDATA\n\nCREATE TABLE pharm_sales_data (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    sale_date DATE,\n    sale_amount DECIMAL,\n    location STRING\n)\n\n### STATEMENT\n\nSELECT * FROM pharm_sales_data WHERE sale_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE pharm_sales_data (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    sale_date DATE,\n    sale_amount DECIMAL,\n    location STRING\n)\n\n### STATEMENT\n\nSELECT MAX(sale_amount) AS max_sale_amount FROM pharm_sales_data;",
  "### TABLEDATA\n\nCREATE TABLE pharm_sales_data (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    sale_date DATE,\n    sale_amount DECIMAL,\n    location STRING\n)\n\n### STATEMENT\n\nSELECT MIN(sale_amount) AS min_sale_amount FROM pharm_sales_data;",
  "### TABLEDATA\n\nCREATE TABLE pharm_sales_data (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    sale_date DATE,\n    sale_amount DECIMAL,\n    location STRING\n)\n\n### STATEMENT\n\nSELECT location, AVG(sale_amount) AS avg_sale_amount FROM pharm_sales_data GROUP BY location;",
  "### TABLEDATA\n\nCREATE TABLE pharm_sales_data (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    sale_date DATE,\n    sale_amount DECIMAL,\n    location STRING\n)\n\n### STATEMENT\n\nSELECT * FROM pharm_sales_data WHERE location='California' AND sale_amount > 500;",
  "### TABLEDATA\n\nCREATE TABLE pharm_sales_data (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    sale_date DATE,\n    sale_amount DECIMAL,\n    location STRING\n)\n\n### STATEMENT\n\nSELECT product_name, sale_date FROM pharm_sales_data WHERE sale_date = CURRENT_DATE;",
  "### TABLEDATA\n\nCREATE TABLE pharm_sales_data (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    sale_date DATE,\n    sale_amount DECIMAL,\n    location STRING\n)\n\n### STATEMENT\n\nSELECT location, SUM(sale_amount) AS total_sales FROM pharm_sales_data GROUP BY location;",
  "### TABLEDATA\n\nCREATE TABLE pharm_sales_data (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    sale_date DATE,\n    sale_amount DECIMAL,\n    location STRING\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT product_name) AS total_products FROM pharm_sales_data;",
  "### TABLEDATA\n\nCREATE TABLE pharm_sales_data (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    sale_date DATE,\n    sale_amount DECIMAL,\n    location STRING\n)\n\n### STATEMENT\n\nSELECT product_id, sale_amount FROM pharm_sales_data WHERE sale_amount BETWEEN 500 AND 1000;",
  "### TABLEDATA\n\nCREATE TABLE pharm_sales_data (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    sale_date DATE,\n    sale_amount DECIMAL,\n    location STRING\n)\n\n### STATEMENT\n\nSELECT product_name, sale_amount FROM pharm_sales_data WHERE sale_date = '2022-07-01';",
  "### TABLEDATA\n\nCREATE TABLE pharm_sales_data (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    sale_date DATE,\n    sale_amount DECIMAL,\n    location STRING\n)\n\n### STATEMENT\n\nSELECT location, MAX(sale_amount) AS max_sale_amount FROM pharm_sales_data GROUP BY location LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE pharm_sales_data (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    sale_date DATE,\n    sale_amount DECIMAL,\n    location STRING\n)\n\n### STATEMENT\n\nSELECT AVG(sale_amount) AS avg_sale_amount FROM pharm_sales_data WHERE location='Texas';",
  "### TABLEDATA\n\nCREATE TABLE pharm_sales_data (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    sale_date DATE,\n    sale_amount DECIMAL,\n    location STRING\n)\n\n### STATEMENT\n\nSELECT * FROM pharm_sales_data WHERE location = 'New York' AND sale_amount > 1000 ORDER BY sale_date DESC LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE pharm_sales_data (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    sale_date DATE,\n    sale_amount DECIMAL,\n    location STRING\n)\n\n### STATEMENT\n\nSELECT AVG(sale_amount) AS avg_sale_amount FROM pharm_sales_data WHERE location = 'Los Angeles'",
  "### TABLEDATA\n\nCREATE TABLE pharm_sales_data (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    sale_date DATE,\n    sale_amount DECIMAL,\n    location STRING\n)\n\n### STATEMENT\n\nSELECT product_name, SUM(sale_amount) AS total_sales FROM pharm_sales_data GROUP BY product_name HAVING total_sales > 5000",
  "### TABLEDATA\n\nCREATE TABLE pharm_sales_data (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    sale_date DATE,\n    sale_amount DECIMAL,\n    location STRING\n)\n\n### STATEMENT\n\nSELECT DATE_TRUNC('month', sale_date) AS month, AVG(sale_amount) AS avg_sale_amount FROM pharm_sales_data GROUP BY month ORDER BY month",
  "### TABLEDATA\n\nCREATE TABLE pharm_sales_data (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    sale_date DATE,\n    sale_amount DECIMAL,\n    location STRING\n)\n\n### STATEMENT\n\nSELECT product_name, COUNT(*) AS total_sales_count FROM pharm_sales_data WHERE sale_date BETWEEN '2022-01-01' AND '2022-01-31' GROUP BY product_name ORDER BY total_sales_count DESC",
  "### TABLEDATA\n\nCREATE TABLE pharm_sales_data (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    sale_date DATE,\n    sale_amount DECIMAL,\n    location STRING\n)\n\n### STATEMENT\n\nSELECT DISTINCT location FROM pharm_sales_data ORDER BY location ASC",
  "### TABLEDATA\n\nCREATE TABLE pharm_sales_data (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    sale_date DATE,\n    sale_amount DECIMAL,\n    location STRING\n)\n\n### STATEMENT\n\nSELECT product_name, SUM(sale_amount) AS total_sales FROM pharm_sales_data WHERE location = 'Chicago' GROUP BY product_name HAVING SUM(sale_amount) > 2000",
  "### TABLEDATA\n\nCREATE TABLE pharm_sales_data (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    sale_date DATE,\n    sale_amount DECIMAL,\n    location STRING\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_sales_count FROM pharm_sales_data WHERE sale_date < '2022-03-01'",
  "### TABLEDATA\n\nCREATE TABLE pharm_sales_data (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    sale_date DATE,\n    sale_amount DECIMAL,\n    location STRING\n)\n\n### STATEMENT\n\nSELECT location, COUNT(DISTINCT product_id) AS unique_products_count FROM pharm_sales_data GROUP BY location",
  "### TABLEDATA\n\nCREATE TABLE pharm_sales_data (\n    product_id UUID PRIMARY KEY,\n    product_name STRING,\n    sale_date DATE,\n    sale_amount DECIMAL,\n    location STRING\n)\n\n### STATEMENT\n\nSELECT product_name, sale_amount FROM pharm_sales_data WHERE sale_date = CURRENT_DATE",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT id, product_name FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT sales_date, quantity FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM market_trends;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT trend_name, month_year FROM market_trends;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT trend_id, revenue_change FROM market_trends;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT product_name, quantity FROM sales_data WHERE sales_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT trend_name, revenue_change FROM market_trends WHERE market_share > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM market_trends WHERE revenue_change < 0;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT SUM(revenue) FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(quantity) FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT MAX(revenue) FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT MIN(market_share) FROM market_trends;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM market_trends;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(revenue) AS total_revenue FROM sales_data GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(revenue_change) AS avg_revenue_change FROM market_trends GROUP BY trend_name;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT product_name, AVG(quantity) AS avg_quantity, SUM(revenue) AS total_revenue FROM sales_data GROUP BY product_name HAVING total_revenue > 1000;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT trend_name, AVG(revenue_change) AS avg_revenue_change, SUM(market_share) AS total_market_share FROM market_trends GROUP BY trend_name HAVING total_market_share < 50;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE quantity > 100 AND revenue > 500.00",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT product_name, sales_date FROM sales_data WHERE quantity BETWEEN 50 AND 100",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE sales_date >= '2021-01-01' AND sales_date <= '2021-12-31'",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) AS total_quantity FROM sales_data GROUP BY product_name",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT product_name, AVG(revenue) AS avg_revenue FROM sales_data GROUP BY product_name HAVING COUNT(*) > 2",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE product_name LIKE '%iPhone%' AND quantity > 50",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(revenue) AS total_revenue FROM sales_data WHERE sales_date >= '2021-01-01' AND sales_date <= '2021-03-31' GROUP BY product_name",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT product_name, revenue AS total_revenue, SUM(quantity) AS total_quantity FROM sales_data GROUP BY product_name, revenue HAVING revenue > 1000.00",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT product_name, MAX(revenue) AS max_revenue FROM sales_data GROUP BY product_name HAVING COUNT(*) >= 5",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT trend_name, market_share FROM market_trends WHERE revenue_change > 5.00",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT trend_name, month_year FROM market_trends WHERE month_year BETWEEN '2021-01-01' AND '2021-12-31'",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT trend_name, market_share FROM market_trends WHERE trend_name LIKE '%Top%' AND market_share >= 0.5",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT trend_name, SUM(revenue_change) AS total_revenue_change FROM market_trends WHERE month_year >= '2021-01-01' AND month_year <= '2021-06-30' GROUP BY trend_name",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT trend_name, AVG(market_share) AS avg_market_share FROM market_trends GROUP BY trend_name HAVING COUNT(*) > 3",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM market_trends WHERE revenue_change = (SELECT MAX(revenue_change) FROM market_trends)",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT trend_name, AVG(revenue_change) AS avg_revenue_change, MAX(market_share) AS max_market_share FROM market_trends GROUP BY trend_name HAVING avg_revenue_change > 3.00",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data AS s INNER JOIN market_trends AS m ON s.revenue = m.revenue_change",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT s.product_name, m.trend_name FROM sales_data AS s INNER JOIN market_trends AS m ON s.sales_date = m.month_year",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT s.product_name, m.trend_name FROM sales_data AS s LEFT JOIN market_trends AS m ON s.revenue = m.revenue_change",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT product_name, revenue, revenue_change FROM sales_data JOIN market_trends USING (revenue)",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sales_date DATE,\n    quantity INT,\n    revenue DECIMAL(10, 2)\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_name VARCHAR(255),\n    month_year DATE,\n    revenue_change DECIMAL(10, 2),\n    market_share FLOAT\n);\n\n### STATEMENT\n\nSELECT s.product_name, m.trend_name FROM sales_data AS s CROSS JOIN market_trends AS m",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM Sales;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT sale_id, product_name, sale_date FROM Sales;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT product_name, quantity, unit_price FROM Sales;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, category FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT manufacturer, price FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, email FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT phone_number, address FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT sale_id, product_name, quantity, unit_price FROM Sales WHERE quantity > 10;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT product_name, category, price FROM Products WHERE price < 50;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, email, phone_number FROM Customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, email, address FROM Customers WHERE email LIKE '%gmail.com%';",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT sale_id, product_name, sale_date FROM Sales ORDER BY sale_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, price FROM Products ORDER BY price ASC;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, address FROM Customers ORDER BY customer_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT SUM(quantity) AS total_quantity FROM Sales;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT AVG(unit_price) AS avg_price FROM Sales;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT MAX(price) AS max_price FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT MIN(quantity) AS min_quantity FROM Sales;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT product_name, sale_date, quantity FROM Sales WHERE sale_date >= '2021-01-01' AND sale_date <= '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) AS total_quantity FROM Sales GROUP BY product_name HAVING total_quantity > 100;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT Customers.customer_name, Customers.email, Sales.product_name, Sales.sale_date FROM Customers INNER JOIN Sales ON Customers.customer_id = Sales.sale_id;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT category, COUNT(*) AS total_sales FROM Products GROUP BY category ORDER BY total_sales DESC;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM Sales WHERE unit_price > 50 AND quantity > 10 ORDER BY unit_price DESC;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM Products WHERE manufacturer = 'Apple' ORDER BY price ASC;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT Customers.customer_name, Customers.phone_number, Products.product_name, Sales.quantity, Sales.unit_price FROM Customers INNER JOIN Sales ON Customers.customer_id = Sales.sale_id INNER JOIN Products ON Sales.product_name = Products.product_name;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT DISTINCT product_name FROM Sales WHERE sale_date BETWEEN '2021-01-01' AND '2021-03-31';",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT manufacturer, AVG(price) AS average_price FROM Products GROUP BY manufacturer HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT product_name, quantity, unit_price, quantity * unit_price AS total_price FROM Sales WHERE sale_date > '2021-06-30';",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, email, address FROM Customers WHERE phone_number LIKE '%555%';",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT Customers.customer_name, SUM(Sales.quantity * Sales.unit_price) AS total_revenue FROM Customers INNER JOIN Sales ON Customers.customer_id = Sales.sale_id GROUP BY Customers.customer_name ORDER BY total_revenue DESC;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT product_name, category, price FROM Products WHERE price BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT Customers.customer_name, Customers.email, Products.product_name, Products.category, Sales.quantity, Sales.unit_price FROM Customers INNER JOIN Sales ON Customers.customer_id = Sales.sale_id INNER JOIN Products ON Sales.product_name = Products.product_name WHERE Sales.quantity > 5 AND Products.price < 100;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT DISTINCT customer_name, email, phone_number FROM Customers WHERE address LIKE '%Street%';",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity) AS total_quantity FROM Sales GROUP BY product_name HAVING total_quantity < 50;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price * quantity AS total_amount FROM Sales WHERE sale_date < '2021-05-01';",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT manufacturer, AVG(price) AS average_price FROM Products GROUP BY manufacturer HAVING AVG(price) < 50;",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, email, phone_number, address FROM Customers WHERE customer_id IN (SELECT sale_id FROM Sales WHERE quantity > 20);",
  "### TABLEDATA\n\nCREATE TABLE Sales (\n    sale_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    manufacturer VARCHAR(50),\n    price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(50),\n    phone_number VARCHAR(15),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT product_name, category, COUNT(*) AS total_sales FROM Products GROUP BY product_name, category;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM product_sales;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, sales_date FROM product_sales;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM product_inventory;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, current_stock FROM product_inventory;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM sales_rep;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT rep_id, rep_name, territory FROM sales_rep;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM market_trends;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT trend_id, trend_description, trend_date FROM market_trends;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity_sold, revenue FROM product_sales WHERE revenue > 1000;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, quantity_sold, revenue FROM product_sales WHERE sales_date > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT rep_id, rep_name, territory FROM sales_rep WHERE hire_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, current_stock FROM product_inventory WHERE current_stock < 100;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM market_trends WHERE trend_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT trend_id, trend_description, market_impact FROM market_trends WHERE CHAR_LENGTH(trend_description) > 50;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, sales_date, revenue FROM product_sales ORDER BY revenue DESC;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT rep_id, rep_name, hire_date FROM sales_rep ORDER BY hire_date;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, quantity_sold FROM product_sales GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT territory, COUNT(rep_id) AS total_reps FROM sales_rep GROUP BY territory;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT territory, AVG(DATEDIFF(NOW(), hire_date)) AS avg_days_working FROM sales_rep GROUP BY territory;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, sales_date, revenue FROM product_sales LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT rep_id, rep_name, territory FROM sales_rep LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, sales_date, quantity_sold, revenue FROM product_sales WHERE sales_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(quantity_sold) AS total_quantity_sold, AVG(revenue) AS avg_revenue FROM product_sales GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, sales_date, revenue FROM product_sales WHERE quantity_sold > 100;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, sales_date, quantity_sold FROM product_sales WHERE revenue > 1000;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, sales_date, revenue FROM product_sales WHERE revenue BETWEEN 500 AND 1000;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, sales_date, quantity_sold FROM product_sales WHERE revenue < 500;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, sales_date, quantity_sold, revenue FROM product_sales ORDER BY revenue DESC;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, COUNT(*) AS total_sales FROM product_sales GROUP BY product_name HAVING total_sales > 10;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, sales_date, AVG(revenue) AS avg_revenue FROM product_sales GROUP BY product_name HAVING avg_revenue > 500;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT p.product_name, p.sales_date, s.rep_name FROM product_sales p INNER JOIN sales_rep s ON p.product_id = s.rep_id;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT p.product_name, p.sales_date, i.current_stock FROM product_sales p JOIN product_inventory i ON p.product_id = i.product_id;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT p.product_name, p.sales_date, t.trend_description FROM product_sales p LEFT JOIN market_trends t ON p.product_id = t.trend_id;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, sales_date, SUM(quantity_sold) AS total_quantity_sold FROM product_sales GROUP BY product_name HAVING total_quantity_sold > 1000;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, MAX(revenue) AS max_revenue FROM product_sales GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT sales_date, SUM(revenue) AS total_revenue FROM product_sales GROUP BY sales_date;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, sales_date, quantity_sold FROM product_sales WHERE quantity_sold IN (50, 100, 150);",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, sales_date, quantity_sold FROM product_sales WHERE sales_date < NOW();",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, sales_date, quantity_sold FROM product_sales WHERE sales_date > '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, sales_date, revenue FROM product_sales WHERE sales_date > hire_date;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, sales_date, quantity_sold FROM product_sales WHERE revenue > current_stock * 100;",
  "### TABLEDATA\n\nCREATE TABLE product_sales (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    sales_date DATE,\n    quantity_sold INT,\n    revenue DECIMAL\n);\n\nCREATE TABLE product_inventory (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    current_stock INT,\n    last_stock_update DATE\n);\n\nCREATE TABLE sales_rep (\n    rep_id INT PRIMARY KEY,\n    rep_name TEXT,\n    territory TEXT,\n    hire_date DATE\n);\n\nCREATE TABLE market_trends (\n    trend_id INT PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE,\n    market_impact TEXT\n);\n\n### STATEMENT\n\nSELECT product_name, sales_date, quantity_sold FROM product_sales WHERE quantity_sold < current_stock AND revenue < 1000;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM sales_data",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT sale_id, amount FROM sales_data",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM product",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM revenue",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT trend_description, trend_date FROM market_trends",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT person_name, person_role, location FROM sales_person",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT product_id, product_name, manufacturer FROM product",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT sale_id, product_id, amount, quantity FROM sales_data",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT revenue_id, sale_id, revenue_amount FROM revenue",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT person_id, person_name, person_role, location FROM sales_person",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM product",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT sale_id, sale_date, amount FROM sales_data",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT product_id, product_name, manufacturer, unit_price FROM product",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT trend_description FROM market_trends",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT person_name, location FROM sales_person",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT sale_id, amount FROM sales_data",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM product",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT trend_description FROM market_trends",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT person_role, location FROM sales_person",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM sales_data",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT product_id, product_name, unit_price FROM product;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT sale_id, sale_date, amount, quantity FROM sales_data WHERE sale_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT product_id, manufacturer, category, unit_price FROM product WHERE manufacturer = 'Example Manufacturer';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT sale_id, amount, quantity FROM sales_data WHERE quantity > 10 AND amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT revenue_id, sale_id, revenue_amount FROM revenue WHERE revenue_amount > 5000;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT product_id, product_name, unit_price FROM product ORDER BY unit_price DESC;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT sale_id, sale_date, amount FROM sales_data WHERE amount BETWEEN 1000 AND 5000;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT person_id, person_name, person_role FROM sales_person WHERE location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT trend_id, trend_description FROM market_trends WHERE trend_date = '2022-03-15';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT sale_id, product_id, amount FROM sales_data JOIN product ON sales_data.product_id = product.product_id;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT sale_id, sale_date, amount, person_name FROM sales_data JOIN sales_person ON sales_data.person_id = sales_person.person_id;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT product_id, product_name, unit_price, manufacturer FROM product WHERE unit_price > 50 AND manufacturer <> 'Example Manufacturer';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT sale_id, amount, quantity FROM sales_data WHERE sale_date BETWEEN '2022-01-01' AND '2022-02-28';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT person_id, person_name, location, person_role FROM sales_person WHERE person_role LIKE '%Manager%';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT product_name, category, unit_price FROM product WHERE category IN ('Electronics', 'Clothing');",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT sale_id, sale_date, amount, quantity FROM sales_data WHERE sale_date < '2022-03-01' AND amount > 2000;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT person_id, person_name, location FROM sales_person WHERE location NOT IN ('New York', 'Los Angeles');",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT sale_id, amount, quantity, product_name FROM sales_data JOIN product ON sales_data.product_id = product.product_id WHERE quantity > 5;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id UUID PRIMARY KEY,\n    product_id UUID,\n    sale_date DATE,\n    amount DECIMAL(10, 2),\n    quantity INT\n)\n\nCREATE TABLE product (\n    product_id UUID PRIMARY KEY,\n    product_name VARCHAR(50),\n    manufacturer VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL(10, 2)\n)\n\nCREATE TABLE revenue (\n    revenue_id UUID PRIMARY KEY,\n    sale_id UUID REFERENCES sales_data(sale_id),\n    revenue_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE market_trends (\n    trend_id UUID PRIMARY KEY,\n    trend_description TEXT,\n    trend_date DATE\n)\n\nCREATE TABLE sales_person (\n    person_id UUID PRIMARY KEY,\n    person_name VARCHAR(50),\n    person_role VARCHAR(50),\n    location VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT revenue.revenue_id, revenue.revenue_amount, sales_data.amount FROM revenue JOIN sales_data ON revenue.sale_id = sales_data.sale_id WHERE revenue.revenue_amount > sales_data.amount;"
]