[
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM drug_interactions;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_id, drug_name FROM drug_interactions WHERE drug_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_id, drug_name, adverse_effect FROM drug_interactions WHERE adverse_effect LIKE '%headache%';",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM drug_interactions WHERE drug_name = 'Aspirin';",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_with FROM drug_interactions WHERE interaction_with = 'Ibuprofen';",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_id, drug_name, adverse_effect, interaction_with FROM drug_interactions WHERE drug_id = 2 AND interaction_with = 'Amoxicillin';",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_id, drug_name, interaction_with FROM drug_interactions WHERE drug_name LIKE 'Paracetamol%' AND interaction_with = 'Warfarin';",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_id, drug_name, adverse_effect FROM drug_interactions WHERE adverse_effect = 'Nausea' ORDER BY drug_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM drug_interactions WHERE drug_name = 'Penicillin' AND interaction_with = 'Aspirin';",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_id, drug_name, interaction_with FROM drug_interactions WHERE adverse_effect IN ('Nausea', 'Headache');",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_id, drug_name, adverse_effect FROM drug_interactions WHERE interaction_with <> 'Amoxicillin';",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT drug_name FROM drug_interactions;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_id, MAX(adverse_effect) FROM drug_interactions GROUP BY drug_id;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_id, drug_name, adverse_effect, interaction_with FROM drug_interactions WHERE drug_name = 'Ciprofloxacin' OR interaction_with = 'Ibuprofen';",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM drug_interactions;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_id, drug_name, adverse_effect, interaction_with FROM drug_interactions WHERE drug_name = 'Streptomycin' AND adverse_effect LIKE '%rash%' ORDER BY drug_id ASC;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_id, drug_name, interaction_with FROM drug_interactions WHERE drug_id BETWEEN 1 AND 5;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_id, drug_name, adverse_effect FROM drug_interactions WHERE drug_name LIKE '%Metronidazole%' AND interaction_with = 'Warfarin';",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_id, drug_name, adverse_effect FROM drug_interactions WHERE adverse_effect LIKE '%digestive%' ORDER BY drug_id ASC, adverse_effect DESC;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_id, drug_name, interaction_with FROM drug_interactions WHERE interaction_with <> 'Penicillin' AND adverse_effect = 'Dizziness';",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_id, drug_name FROM drug_interactions WHERE adverse_effect = 'Headache';",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM drug_interactions WHERE interaction_with = 'Aspirin';",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_with FROM drug_interactions WHERE adverse_effect = 'Nausea' AND drug_id > 100;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_id, drug_name, adverse_effect FROM drug_interactions WHERE interaction_with = 'Ibuprofen' OR interaction_with = 'Paracetamol';",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM drug_interactions WHERE drug_name LIKE '%lox%' AND interaction_with LIKE '%ane%';",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT drug_name FROM drug_interactions;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_with FROM drug_interactions WHERE drug_id IN (1, 5, 10);",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_drugs FROM drug_interactions;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_name, adverse_effect FROM drug_interactions WHERE drug_id BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_name, adverse_effect FROM drug_interactions WHERE adverse_effect IN ('Dizziness', 'Fatigue');",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_with FROM drug_interactions WHERE drug_name = 'Lorazepam';",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_id, drug_name, interaction_with FROM drug_interactions ORDER BY drug_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_id, drug_name, interaction_with FROM drug_interactions ORDER BY drug_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_name, COUNT(*) AS total_interactions FROM drug_interactions GROUP BY drug_name;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(drug_id) AS avg_id FROM drug_interactions;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_with FROM drug_interactions WHERE adverse_effect = 'Rash' ORDER BY drug_id DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_with FROM drug_interactions WHERE drug_id < 20 UNION SELECT drug_name, interaction_with FROM drug_interactions WHERE drug_id > 80;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_id, drug_name FROM drug_interactions WHERE adverse_effect LIKE '%Sleep%';",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_with FROM drug_interactions WHERE LENGTH(drug_name) > 10;",
  "### TABLEDATA\n\nCREATE TABLE drug_interactions (\n\tdrug_id INT PRIMARY KEY,\n\tdrug_name VARCHAR(50) NOT NULL,\n\tadverse_effect VARCHAR(100) NOT NULL,\n\tinteraction_with VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_with FROM drug_interactions WHERE drug_id = (SELECT MIN(drug_id) FROM drug_interactions);",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM DrugInteractions;",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_type FROM DrugInteractions;",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_description FROM DrugInteractions WHERE drug_name = 'Aspirin';",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM AdverseEffects;",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT drug_name, effect_type FROM AdverseEffects;",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT effect_description FROM AdverseEffects WHERE drug_name = 'Paracetamol';",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM DrugInteractions WHERE interaction_type = 'Severe';",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_description FROM DrugInteractions WHERE interaction_type = 'Moderate';",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM AdverseEffects WHERE effect_type = 'Serious';",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT drug_name, effect_description FROM AdverseEffects WHERE effect_type = 'Common';",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM DrugInteractions ORDER BY drug_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM AdverseEffects ORDER BY drug_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM DrugInteractions;",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(id) FROM DrugInteractions;",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(id) FROM DrugInteractions;",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT MIN(id) FROM AdverseEffects;",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT SUM(id) FROM AdverseEffects;",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM DrugInteractions LIMIT 5 OFFSET 10;",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM AdverseEffects LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM DrugInteractions WHERE drug_name LIKE 'am%';",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM DrugInteractions WHERE drug_name = 'Aspirin';",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_type FROM DrugInteractions WHERE interaction_type = 'Severe';",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM DrugInteractions WHERE interaction_type = 'Moderate' AND drug_name = 'Lisinopril';",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM DrugInteractions;",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT drug_name, COUNT(*) AS interaction_count FROM DrugInteractions GROUP BY drug_name;",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM DrugInteractions INNER JOIN AdverseEffects ON DrugInteractions.drug_name = AdverseEffects.drug_name;",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT DrugInteractions.drug_name, AdverseEffects.effect_type FROM DrugInteractions INNER JOIN AdverseEffects ON DrugInteractions.drug_name = AdverseEffects.drug_name;",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM DrugInteractions WHERE interaction_description LIKE '%interacts%';",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM AdverseEffects WHERE effect_type = 'Serious' ORDER BY id DESC;",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM DrugInteractions WHERE id IN (1, 3, 5);",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM DrugInteractions WHERE id BETWEEN 10 AND 20;",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM DrugInteractions WHERE interaction_type IN ('Severe', 'Moderate');",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT drug_name, COUNT(*) AS interaction_count FROM DrugInteractions WHERE interaction_type = 'Severe' GROUP BY drug_name HAVING COUNT(*) > 2;",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(id) AS average_id FROM DrugInteractions;",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM DrugInteractions ORDER BY drug_name ASC, interaction_type DESC;",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT drug_name, COUNT(*) AS interaction_count FROM DrugInteractions WHERE interaction_type = 'Severe' GROUP BY drug_name HAVING interaction_count > 1;",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT drug_name FROM DrugInteractions;",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT drug_name, COUNT(*) AS interaction_count FROM DrugInteractions GROUP BY drug_name HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT drug_name, SUM(id) AS total_id FROM DrugInteractions GROUP BY drug_name HAVING total_id > 100;",
  "### TABLEDATA\n\nCREATE TABLE DrugInteractions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_description TEXT\n);\n\nCREATE TABLE AdverseEffects (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(100) NOT NULL,\n    effect_type VARCHAR(50) NOT NULL,\n    effect_description TEXT\n);\n\n### STATEMENT\n\nSELECT drug_name, MIN(id) AS min_id, MAX(id) AS max_id FROM DrugInteractions GROUP BY drug_name HAVING MAX(id) - MIN(id) > 10;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Drug_Interactions;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT drug_name FROM Drug_Interactions;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT drug_name FROM Drug_Interactions;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, adverse_effect FROM Drug_Interactions;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Drug_Categories;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT category_name FROM Drug_Categories;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Drug_Users;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT user_name, user_age FROM Drug_Users;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT user_name, user_age, user_gender FROM Drug_Users;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT user_gender FROM Drug_Users;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT user_name, user_drug_id FROM Drug_Users;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, adverse_effect FROM Drug_Interactions WHERE drug_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT user_name, user_age, user_gender FROM Drug_Users WHERE user_age > 40;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT user_name FROM Drug_Users WHERE user_gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT user_name, drug_name FROM Drug_Users INNER JOIN Drug_Interactions ON Drug_Users.user_drug_id = Drug_Interactions.drug_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT user_name, category_name FROM Drug_Users INNER JOIN Drug_Categories ON Drug_Users.user_drug_id = Drug_Categories.category_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT user_name, drug_name, adverse_effect FROM Drug_Users INNER JOIN Drug_Interactions ON Drug_Users.user_drug_id = Drug_Interactions.drug_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT user_name, drug_name, adverse_effect FROM Drug_Users INNER JOIN Drug_Interactions ON Drug_Users.user_drug_id = Drug_Interactions.drug_id WHERE user_age > 50;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT user_name, user_age FROM Drug_Users WHERE user_drug_id IN (SELECT drug_id FROM Drug_Interactions WHERE adverse_effect = 'Headache');",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT count(*) FROM Drug_Users WHERE user_drug_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT category_name, count(*) FROM Drug_Users INNER JOIN Drug_Categories ON Drug_Users.user_drug_id = Drug_Categories.category_id GROUP BY category_name HAVING count(*) > 2;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, adverse_effect FROM Drug_Interactions WHERE drug_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT user_name, user_age, user_gender, drug_name, adverse_effect FROM Drug_Users JOIN Drug_Interactions ON Drug_Users.user_drug_id = Drug_Interactions.drug_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT distinct user_name FROM Drug_Users WHERE user_age > 50;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT user_name FROM Drug_Users WHERE user_drug_id IN (SELECT drug_id FROM Drug_Interactions WHERE adverse_effect = 'nausea');",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT category_name FROM Drug_Interactions JOIN Drug_Categories ON Drug_Categories.category_id = Drug_Interactions.drug_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT user_name, user_age, user_gender, drug_name, adverse_effect, category_name FROM Drug_Users JOIN Drug_Interactions ON Drug_Users.user_drug_id = Drug_Interactions.drug_id JOIN Drug_Categories ON Drug_Categories.category_id = Drug_Interactions.drug_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT user_name, user_age, user_gender FROM Drug_Users WHERE user_drug_id IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, adverse_effect FROM Drug_Interactions WHERE drug_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, adverse_effect FROM Drug_Interactions WHERE drug_name LIKE '%in%';",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT user_name, user_age, user_gender, drug_name, adverse_effect FROM Drug_Users JOIN Drug_Interactions ON Drug_Users.user_drug_id = Drug_Interactions.drug_id WHERE user_age < 30;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT user_name, user_age, user_gender FROM Drug_Users WHERE user_drug_id IN (SELECT drug_id FROM Drug_Interactions WHERE adverse_effect = 'headache');",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT user_name, user_age, user_gender FROM Drug_Users WHERE user_name LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT category_name, COUNT(*) as num_interactions FROM Drug_Interactions JOIN Drug_Categories ON Drug_Categories.category_id = Drug_Interactions.drug_id GROUP BY category_name;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT user_name, user_age, user_gender, category_name, COUNT(*) as num_interactions FROM Drug_Users JOIN Drug_Interactions ON Drug_Users.user_drug_id = Drug_Interactions.drug_id JOIN Drug_Categories ON Drug_Categories.category_id = Drug_Interactions.drug_id GROUP BY user_name;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT user_name, user_age, user_gender FROM Drug_Users WHERE user_gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT category_name, COUNT(*) as num_interactions FROM Drug_Users JOIN Drug_Interactions ON Drug_Users.user_drug_id = Drug_Interactions.drug_id JOIN Drug_Categories ON Drug_Categories.category_id = Drug_Interactions.drug_id GROUP BY category_name HAVING COUNT(*) > 2;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT user_name, user_age, user_gender, drug_name, adverse_effect FROM Drug_Users JOIN Drug_Interactions ON Drug_Users.user_drug_id = Drug_Interactions.drug_id WHERE user_gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT user_name, user_age, user_gender FROM Drug_Users WHERE user_drug_id IN (SELECT drug_id FROM Drug_Interactions WHERE adverse_effect = 'dizziness');",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT user_name, user_age, user_gender FROM Drug_Users WHERE user_age BETWEEN 20 AND 40;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions(\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    adverse_effect VARCHAR(255)\n);\n\nCREATE TABLE Drug_Categories(\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n);\n\nCREATE TABLE Drug_Users(\n    user_id INT PRIMARY KEY,\n    user_name VARCHAR(255),\n    user_age INT,\n    user_gender VARCHAR(10),\n    user_drug_id INT REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT user_name, user_age, user_gender FROM Drug_Users ORDER BY user_age DESC;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Drug_Interactions;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT drug_id, drug_name FROM Drug_Interactions;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_type FROM Drug_Interactions;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT drug_id, drug_name, interaction_type, effect_description FROM Drug_Interactions;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Adverse_Effects;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT effect_id, effect_name FROM Adverse_Effects;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT effect_name, severity FROM Adverse_Effects;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT effect_id, effect_name, severity, affected_population FROM Adverse_Effects;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Drug_Effects;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT drug_id, effect_id FROM Drug_Effects;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT drug_id, effect_id FROM Drug_Effects WHERE drug_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT drug_id, effect_id FROM Drug_Effects WHERE effect_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Patient_Drug_History;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT patient_id, drug_id FROM Patient_Drug_History;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT patient_id, drug_id, dosage FROM Patient_Drug_History;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT patient_id, drug_id, dosage, start_date, end_date FROM Patient_Drug_History;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, effect_name, severity FROM Drug_Interactions DI JOIN Drug_Effects DE ON DI.drug_id = DE.drug_id JOIN Adverse_Effects AE ON DE.effect_id = AE.effect_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT patient_id, drug_name, dosage, start_date, end_date FROM Patient_Drug_History PDH JOIN Drug_Interactions DI ON PDH.drug_id = DI.drug_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT effect_name, severity, affected_population FROM Adverse_Effects AE JOIN Drug_Effects DE ON AE.effect_id = DE.effect_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_type, effect_description FROM Drug_Interactions DI JOIN Drug_Effects DE ON DI.drug_id = DE.drug_id WHERE DE.effect_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_type FROM Drug_Interactions WHERE drug_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT effect_name, severity FROM Adverse_Effects WHERE severity = 'Severe';",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_type, effect_name, severity FROM Drug_Interactions JOIN Drug_Effects ON Drug_Interactions.drug_id = Drug_Effects.drug_id JOIN Adverse_Effects ON Drug_Effects.effect_id = Adverse_Effects.effect_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT effect_description FROM Drug_Interactions WHERE drug_name LIKE 'Aspirin%';",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_type, effect_name, severity FROM Drug_Interactions JOIN Drug_Effects ON Drug_Interactions.drug_id = Drug_Effects.drug_id JOIN Adverse_Effects ON Drug_Effects.effect_id = Adverse_Effects.effect_id WHERE severity = 'Moderate';",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT patient_id, drug_name, dosage FROM Patient_Drug_History JOIN Drug_Interactions ON Patient_Drug_History.drug_id = Drug_Interactions.drug_id WHERE start_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_type, effect_name, severity FROM Drug_Interactions JOIN Drug_Effects ON Drug_Interactions.drug_id = Drug_Effects.drug_id JOIN Adverse_Effects ON Drug_Effects.effect_id = Adverse_Effects.effect_id WHERE effect_name = 'Headache';",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT patient_id, drug_name, dosage FROM Patient_Drug_History JOIN Drug_Interactions ON Patient_Drug_History.drug_id = Drug_Interactions.drug_id WHERE end_date < '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_type, effect_name, severity FROM Drug_Interactions JOIN Drug_Effects ON Drug_Interactions.drug_id = Drug_Effects.drug_id JOIN Adverse_Effects ON Drug_Effects.effect_id = Adverse_Effects.effect_id WHERE interaction_type = 'Major';",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT count(*) AS total_interactions FROM Drug_Effects;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, COUNT(effect_id) AS total_effects FROM Drug_Interactions JOIN Drug_Effects ON Drug_Interactions.drug_id = Drug_Effects.drug_id GROUP BY drug_name;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT effect_name, AVG(severity) AS avg_severity FROM Adverse_Effects GROUP BY effect_name;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, MAX(dosage) AS max_dosage FROM Patient_Drug_History JOIN Drug_Interactions ON Patient_Drug_History.drug_id = Drug_Interactions.drug_id GROUP BY drug_name;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, MIN(dosage) AS min_dosage FROM Patient_Drug_History JOIN Drug_Interactions ON Patient_Drug_History.drug_id = Drug_Interactions.drug_id GROUP BY drug_name;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT drug_name FROM Drug_Interactions;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_type, effect_name, severity FROM Drug_Interactions JOIN Drug_Effects ON Drug_Interactions.drug_id = Drug_Effects.drug_id JOIN Adverse_Effects ON Drug_Effects.effect_id = Adverse_Effects.effect_id ORDER BY drug_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_type, effect_name, severity FROM Drug_Interactions JOIN Drug_Effects ON Drug_Interactions.drug_id = Drug_Effects.drug_id JOIN Adverse_Effects ON Drug_Effects.effect_id = Adverse_Effects.effect_id ORDER BY severity DESC;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_type, effect_name, severity FROM Drug_Interactions JOIN Drug_Effects ON Drug_Interactions.drug_id = Drug_Effects.drug_id JOIN Adverse_Effects ON Drug_Effects.effect_id = Adverse_Effects.effect_id LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT effect_name, severity FROM Adverse_Effects WHERE effect_id IN (SELECT effect_id FROM Drug_Effects WHERE drug_id = 1);",
  "### TABLEDATA\n\nCREATE TABLE Drug_Interactions (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    interaction_type VARCHAR(50),\n    effect_description TEXT\n);\n\nCREATE TABLE Adverse_Effects (\n    effect_id INT PRIMARY KEY,\n    effect_name VARCHAR(255) NOT NULL,\n    severity ENUM('Mild', 'Moderate', 'Severe'),\n    affected_population TEXT\n);\n\nCREATE TABLE Drug_Effects (\n    drug_id INT,\n    effect_id INT,\n    PRIMARY KEY (drug_id, effect_id),\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id),\n    FOREIGN KEY (effect_id) REFERENCES Adverse_Effects(effect_id)\n);\n\nCREATE TABLE Patient_Drug_History (\n    patient_id INT PRIMARY KEY,\n    drug_id INT,\n    dosage INT,\n    start_date DATE,\n    end_date DATE,\n    FOREIGN KEY (drug_id) REFERENCES Drug_Interactions(drug_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_type, AVG(dosage) AS avg_dosage FROM Patient_Drug_History JOIN Drug_Interactions ON Patient_Drug_History.drug_id = Drug_Interactions.drug_id GROUP BY drug_name;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM Drug;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT drug_name, drug_category FROM Drug;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM DrugInteraction;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_effect FROM DrugInteraction;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT drug_name, effect_name FROM Drug JOIN DrugInteraction ON Drug.drug_id = DrugInteraction.drug_id_1 JOIN AdverseEffect ON DrugInteraction.effect_id = AdverseEffect.effect_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM AdverseEffect;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT effect_name, effect_description FROM AdverseEffect;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM DrugEffect;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT effect_severity FROM DrugEffect;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT drug_name, effect_name, effect_severity FROM Drug JOIN DrugEffect ON Drug.drug_id = DrugEffect.drug_id JOIN AdverseEffect ON DrugEffect.effect_id = AdverseEffect.effect_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM PatientHistory;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT patient_name, patient_age FROM PatientHistory;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT drug_name, patient_name FROM Drug JOIN PatientHistory ON Drug.drug_id = PatientHistory.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT patient_name FROM PatientHistory;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Drug;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT MAX(effect_severity) FROM DrugEffect;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT drug_name, COUNT(effect_id) FROM Drug JOIN DrugEffect ON Drug.drug_id = DrugEffect.drug_id GROUP BY drug_name;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT patient_name, MIN(patient_age) FROM PatientHistory GROUP BY patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_effect FROM Drug JOIN DrugInteraction ON Drug.drug_id = DrugInteraction.drug_id_1;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT drug_name, effect_severity FROM Drug JOIN DrugEffect ON Drug.drug_id = DrugEffect.drug_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT drug_name, patient_name FROM Drug JOIN DrugEffect ON Drug.drug_id = DrugEffect.drug_id JOIN PatientHistory ON DrugEffect.effect_id = PatientHistory.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT drug_name, drug_category FROM Drug;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT Drug.drug_name, DrugInteraction.interaction_effect FROM Drug INNER JOIN DrugInteraction ON Drug.drug_id = DrugInteraction.drug_id_1;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT Drug.drug_name, DrugEffect.effect_severity FROM Drug INNER JOIN DrugEffect ON Drug.drug_id = DrugEffect.drug_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT Drug.drug_name, AdverseEffect.effect_name FROM Drug INNER JOIN DrugEffect ON Drug.drug_id = DrugEffect.drug_id INNER JOIN AdverseEffect ON DrugEffect.effect_id = AdverseEffect.effect_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT PatientHistory.patient_name, PatientHistory.patient_age, PatientHistory.patient_gender FROM PatientHistory WHERE PatientHistory.patient_age > 50;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT Drug.drug_name, AdverseEffect.effect_name FROM Drug INNER JOIN DrugEffect ON Drug.drug_id = DrugEffect.drug_id INNER JOIN AdverseEffect ON DrugEffect.effect_id = AdverseEffect.effect_id WHERE AdverseEffect.effect_severity > 3;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT DrugInteraction.interaction_effect, Drug.drug_name, AdverseEffect.effect_name FROM DrugInteraction INNER JOIN Drug ON DrugInteraction.drug_id_1 = Drug.drug_id INNER JOIN AdverseEffect ON DrugInteraction.interaction_id = AdverseEffect.effect_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT PatientHistory.patient_name, Drug.drug_name, AdverseEffect.effect_name FROM PatientHistory INNER JOIN Drug ON PatientHistory.patient_id = Drug.drug_id INNER JOIN DrugEffect ON Drug.drug_id = DrugEffect.drug_id INNER JOIN AdverseEffect ON DrugEffect.effect_id = AdverseEffect.effect_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT Drug.drug_category FROM Drug;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT Drug.drug_name AS 'Medicine Name', AdverseEffect.effect_name AS 'Side Effect' FROM Drug INNER JOIN DrugEffect ON Drug.drug_id = DrugEffect.drug_id INNER JOIN AdverseEffect ON DrugEffect.effect_id = AdverseEffect.effect_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT Drug.drug_name, AdverseEffect.effect_name, PatientHistory.patient_name FROM Drug INNER JOIN DrugEffect ON Drug.drug_id = DrugEffect.drug_id INNER JOIN AdverseEffect ON DrugEffect.effect_id = AdverseEffect.effect_id INNER JOIN PatientHistory ON DrugEffect.drug_id = PatientHistory.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT PatientHistory.patient_name, COUNT(DISTINCT DrugEffect.effect_id) AS 'Number of Effects' FROM PatientHistory INNER JOIN Drug ON PatientHistory.patient_id = Drug.drug_id INNER JOIN DrugEffect ON Drug.drug_id = DrugEffect.drug_id GROUP BY PatientHistory.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT DrugInteraction.interaction_effect, COUNT(*) AS 'Number of Interactions' FROM DrugInteraction GROUP BY DrugInteraction.interaction_effect HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT DrugInteraction.interaction_effect, Drug.drug_name AS 'Drug 1', Drug_2.drug_name AS 'Drug 2' FROM DrugInteraction INNER JOIN Drug ON DrugInteraction.drug_id_1 = Drug.drug_id INNER JOIN Drug AS Drug_2 ON DrugInteraction.drug_id_2 = Drug_2.drug_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT PatientHistory.patient_name, AVG(DrugEffect.effect_severity) AS 'Average Severity' FROM PatientHistory INNER JOIN Drug ON PatientHistory.patient_id = Drug.drug_id INNER JOIN DrugEffect ON Drug.drug_id = DrugEffect.drug_id GROUP BY PatientHistory.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT DrugEffect.effect_severity, COUNT(*) AS 'Number of Drugs' FROM DrugEffect GROUP BY DrugEffect.effect_severity ORDER BY COUNT(*) DESC;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT Drug.drug_name, AdverseEffect.effect_name, COUNT(*) AS 'Occurrences' FROM Drug INNER JOIN DrugEffect ON Drug.drug_id = DrugEffect.drug_id INNER JOIN AdverseEffect ON DrugEffect.effect_id = AdverseEffect.effect_id GROUP BY Drug.drug_name, AdverseEffect.effect_name ORDER BY Occurrences DESC;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT DrugEffect.effect_id, AVG(effect_severity) AS 'Average Severity' FROM DrugEffect WHERE effect_severity > 2 GROUP BY DrugEffect.effect_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT Drug.drug_name, COUNT(DISTINCT DrugEffect.effect_id) AS 'Number of Effects' FROM Drug INNER JOIN DrugEffect ON Drug.drug_id = DrugEffect.drug_id GROUP BY Drug.drug_name;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT DrugInteraction.interaction_effect, Drug.drug_name AS 'Drug 1', Drug_2.drug_name AS 'Drug 2' FROM DrugInteraction INNER JOIN Drug ON DrugInteraction.drug_id_1 = Drug.drug_id INNER JOIN Drug AS Drug_2 ON DrugInteraction.drug_id_2 = Drug_2.drug_id ORDER BY DrugInteraction.interaction_effect ASC;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name TEXT,\n  drug_category TEXT\n);\n\n\nCREATE TABLE DrugInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id_1 INT,\n  drug_id_2 INT,\n  interaction_effect TEXT,\n  FOREIGN KEY (drug_id_1) REFERENCES Drug(drug_id),\n  FOREIGN KEY (drug_id_2) REFERENCES Drug(drug_id)\n);\n\n\nCREATE TABLE AdverseEffect (\n  effect_id INT PRIMARY KEY,\n  effect_name TEXT,\n  effect_description TEXT\n);\n\n\nCREATE TABLE DrugEffect (\n  drug_id INT,\n  effect_id INT,\n  effect_severity INT,\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (effect_id) REFERENCES AdverseEffect(effect_id)\n);\n\n\nCREATE TABLE PatientHistory (\n  patient_id INT PRIMARY KEY,\n  patient_name TEXT,\n  patient_age INT,\n  patient_gender TEXT\n);\n\n### STATEMENT\n\nSELECT DrugEffect.effect_id, MAX(effect_severity) AS 'Max Severity' FROM DrugEffect GROUP BY DrugEffect.effect_id;"
]