[
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM pharmacovigilance_adverse_reactions;",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT drug_name, reaction_type FROM pharmacovigilance_adverse_reactions;",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM pharmacovigilance_adverse_reactions WHERE report_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_id FROM pharmacovigilance_adverse_reactions WHERE drug_name = 'Aspirin';",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM pharmacovigilance_adverse_reactions;",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(reported_timestamp) FROM pharmacovigilance_adverse_reactions;",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(patient_id) FROM pharmacovigilance_adverse_reactions;",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT drug_name FROM pharmacovigilance_adverse_reactions;",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM pharmacovigilance_adverse_reactions ORDER BY reported_timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT drug_name, COUNT(*) AS num_reports FROM pharmacovigilance_adverse_reactions GROUP BY drug_name;",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT drug_name, reaction_type, reported_timestamp FROM pharmacovigilance_adverse_reactions WHERE patient_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM pharmacovigilance_adverse_reactions WHERE reported_timestamp >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(DATEDIFF(NOW(), reported_timestamp)) AS avg_days_since_report FROM pharmacovigilance_adverse_reactions;",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_id, COUNT(*) FROM pharmacovigilance_adverse_reactions GROUP BY patient_id HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT drug_name, reaction_type, reported_timestamp FROM pharmacovigilance_adverse_reactions WHERE patient_id = (SELECT MAX(patient_id) FROM pharmacovigilance_adverse_reactions);",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM pharmacovigilance_adverse_reactions WHERE reaction_type IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT drug_name, COUNT(*) AS num_reports FROM pharmacovigilance_adverse_reactions WHERE drug_name LIKE 'Paracetamol%';",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT drug_name, reported_timestamp FROM pharmacovigilance_adverse_reactions WHERE drug_name = 'Aspirin' AND reported_timestamp BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_id, COUNT(*) AS num_reports_per_patient FROM pharmacovigilance_adverse_reactions GROUP BY patient_id ORDER BY num_reports_per_patient DESC;",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT YEAR(reported_timestamp) AS report_year FROM pharmacovigilance_adverse_reactions ORDER BY report_year DESC;",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM pharmacovigilance_adverse_reactions WHERE drug_name = 'Aspirin';",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT drug_name, reaction_type FROM pharmacovigilance_adverse_reactions WHERE patient_id = 123 AND reported_timestamp >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_id, COUNT(*) AS num_reports FROM pharmacovigilance_adverse_reactions GROUP BY patient_id HAVING num_reports > 5;",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT drug_name FROM pharmacovigilance_adverse_reactions;",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT report_id, patient_id, reaction_type FROM pharmacovigilance_adverse_reactions WHERE reaction_type LIKE '%allergic%';",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(reported_timestamp) AS latest_report FROM pharmacovigilance_adverse_reactions;",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT drug_name, COUNT(*) AS num_reports FROM pharmacovigilance_adverse_reactions GROUP BY drug_name ORDER BY num_reports DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT report_id, drug_name, patient_id, reported_timestamp FROM pharmacovigilance_adverse_reactions WHERE reported_timestamp BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_id, MAX(reported_timestamp) AS last_report FROM pharmacovigilance_adverse_reactions GROUP BY patient_id;",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT drug_name, AVG(patient_id) AS avg_patient_id FROM pharmacovigilance_adverse_reactions GROUP BY drug_name;",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM pharmacovigilance_adverse_reactions WHERE report_id IN (SELECT report_id FROM pharmacovigilance_adverse_reactions WHERE drug_name = 'Paracetamol');",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT reaction_type FROM pharmacovigilance_adverse_reactions WHERE reported_timestamp < '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(patient_id) AS avg_patient_id FROM pharmacovigilance_adverse_reactions WHERE drug_name = 'Ibuprofen';",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT report_id, drug_name, patient_id FROM pharmacovigilance_adverse_reactions WHERE patient_id IN (SELECT patient_id FROM pharmacovigilance_adverse_reactions WHERE reaction_type = 'Headache');",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_id, COUNT(*) AS num_reports FROM pharmacovigilance_adverse_reactions WHERE reaction_type IS NOT NULL GROUP BY patient_id HAVING num_reports > 3;",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT drug_name, COUNT(*) AS num_reports FROM pharmacovigilance_adverse_reactions WHERE reaction_type IN ('Nausea', 'Dizziness');",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT patient_id FROM pharmacovigilance_adverse_reactions WHERE drug_name = 'Penicillin' AND reaction_type IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM pharmacovigilance_adverse_reactions ORDER BY reported_timestamp DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM pharmacovigilance_adverse_reactions WHERE reported_timestamp BETWEEN '2022-03-01' AND '2022-03-31' AND reaction_type LIKE '%rash%';",
  "### TABLEDATA\n\nCREATE TABLE pharmacovigilance_adverse_reactions (\n  report_id INT PRIMARY KEY,\n  drug_name VARCHAR(50) NOT NULL,\n  patient_id INT NOT NULL,\n  reaction_type VARCHAR(100),\n  reported_timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT patient_id, COUNT(*) AS num_reports FROM pharmacovigilance_adverse_reactions WHERE drug_name = 'Amoxicillin' GROUP BY patient_id HAVING num_reports > 2;",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT * FROM drug_reports;",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, drug_name FROM drug_reports WHERE report_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT report_id, patient_name, drug_name FROM drug_reports WHERE drug_name = 'Aspirin';",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT report_id, reaction_description FROM drug_reports WHERE patient_name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT * FROM drug_analysis;",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT analysis_id, report_id FROM drug_analysis WHERE analysis_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT analysis_id, analysis_result FROM drug_analysis WHERE report_id = 1234;",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT * FROM drug_reports JOIN drug_analysis ON drug_reports.report_id = drug_analysis.report_id;",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT dr.report_id, da.analysis_id FROM drug_reports dr JOIN drug_analysis da ON dr.report_id = da.report_id;",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT dr.patient_name, da.analysis_result FROM drug_reports dr INNER JOIN drug_analysis da ON dr.report_id = da.report_id;",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT * FROM drug_reports WHERE report_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM drug_reports;",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT AVG(report_id) AS avg_report_id FROM drug_reports;",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT patient_name FROM drug_reports;",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT MAX(report_date) AS latest_report_date FROM drug_reports;",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT MIN(report_date) AS oldest_report_date FROM drug_reports;",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT report_id, COUNT(*) AS report_count FROM drug_reports GROUP BY report_id;",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, COUNT(*) AS drug_count FROM drug_reports GROUP BY drug_name;",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, reaction_description FROM drug_reports WHERE reaction_description LIKE '%headache%';",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT * FROM drug_reports WHERE patient_name LIKE 'A%' ORDER BY patient_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT * FROM drug_reports WHERE patient_name = 'John Smith';",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, drug_name FROM drug_reports WHERE report_date > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT * FROM drug_reports JOIN drug_analysis ON drug_reports.report_id = drug_analysis.report_id;",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, COUNT(report_id) FROM drug_reports GROUP BY patient_name;",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT * FROM drug_analysis WHERE analysis_result LIKE '%positive%';",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, drug_name, report_date FROM drug_reports ORDER BY report_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM drug_reports WHERE drug_name = 'Aspirin';",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT * FROM drug_reports WHERE report_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, reaction_description FROM drug_reports WHERE LENGTH(reaction_description) > 100;",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT drug_name FROM drug_reports;",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT AVG(analysis_id) FROM drug_analysis;",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, MAX(report_date) FROM drug_reports;",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, MIN(report_date) FROM drug_reports;",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, COUNT(DISTINCT drug_name) FROM drug_reports;",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(report_id) AS total_reports FROM drug_reports;",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, AVG(report_id) FROM drug_reports;",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, COUNT(analysis_id) FROM drug_analysis GROUP BY patient_name HAVING COUNT(analysis_id) > 1;",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT * FROM drug_reports UNION SELECT * FROM drug_analysis;",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, AVG(analysis_id) FROM drug_reports INNER JOIN drug_analysis ON drug_reports.report_id = drug_analysis.report_id;",
  "### TABLEDATA\n\nCREATE TABLE drug_reports (\n    report_id INT PRIMARY KEY,\n    patient_name VARCHAR(50),\n    drug_name VARCHAR(50),\n    reaction_description TEXT,\n    report_date DATE\n);\n\n\nCREATE TABLE drug_analysis (\n    analysis_id INT PRIMARY KEY,\n    report_id INT,\n    analysis_date DATE,\n    analysis_result TEXT,\n    FOREIGN KEY (report_id) REFERENCES drug_reports(report_id)\n);\n\n### STATEMENT\n\nSELECT patient_name, analysis_date FROM drug_reports LEFT JOIN drug_analysis ON drug_reports.report_id = drug_analysis.report_id;",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM AdverseDrugReactions;",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT report_id, drug_name, patient_id, reaction FROM AdverseDrugReactions;",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT drug_name, patient_id FROM AdverseDrugReactions WHERE reaction = 'Nausea';",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, age FROM Patients WHERE gender = 'F';",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Drugs;",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT drug_name, manufacturer FROM Drugs WHERE expiration_date < '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, age, gender, drug_name FROM Patients JOIN AdverseDrugReactions ON Patients.patient_id = AdverseDrugReactions.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT report_id, reaction FROM AdverseDrugReactions WHERE drug_name = 'Aspirin';",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Patients WHERE age > 50;",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT drug_name, manufacturer, expiration_date FROM Drugs WHERE manufacturer = 'Pfizer';",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, gender FROM Patients WHERE age < 20;",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT drug_name, patient_id FROM AdverseDrugReactions WHERE patient_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT drug_name, patient_id FROM AdverseDrugReactions ORDER BY patient_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, age, gender FROM Patients ORDER BY age;",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT drug_name, manufacturer, expiration_date FROM Drugs ORDER BY expiration_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(age) as avg_age FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) as total_reports FROM AdverseDrugReactions;",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT drug_name FROM Drugs;",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, age, gender FROM Patients WHERE patient_name LIKE '%Smith%';",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM AdverseDrugReactions WHERE patient_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT report_id, drug_name, patient_name FROM AdverseDrugReactions JOIN Patients ON AdverseDrugReactions.patient_id = Patients.patient_id;",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT drug_name, manufacturer FROM Drugs WHERE expiration_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM AdverseDrugReactions WHERE reaction LIKE '%severe%';",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT patient_id, patient_name, age, gender FROM Patients WHERE age > 50;",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM AdverseDrugReactions WHERE report_id = (SELECT MAX(report_id) FROM AdverseDrugReactions);",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT patient_id, patient_name, reaction FROM AdverseDrugReactions JOIN Patients ON AdverseDrugReactions.patient_id = Patients.patient_id WHERE reaction = 'Allergic Reaction';",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT drug_name, manufacturer, expiration_date FROM Drugs ORDER BY expiration_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, age FROM Patients WHERE gender = 'F';",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM AdverseDrugReactions WHERE drug_name = 'Aspirin';",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT drug_name, manufacturer, expiration_date FROM Drugs WHERE manufacturer = 'Pfizer' AND expiration_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, age FROM Patients WHERE age BETWEEN 30 AND 40;",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT MAX(age) AS oldest_patient_age FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(age) AS average_age FROM Patients;",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT drug_name, COUNT(*) AS reported_reactions FROM AdverseDrugReactions GROUP BY drug_name;",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, age, gender FROM Patients WHERE age > (SELECT AVG(age) FROM Patients);",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT drug_name, COUNT(*) AS reported_reactions FROM AdverseDrugReactions WHERE reaction LIKE '%rash%' GROUP BY drug_name;",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, age, gender FROM Patients WHERE gender = 'M' ORDER BY age DESC;",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT patient_name, age, gender FROM Patients LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE AdverseDrugReactions (\n    report_id INT PRIMARY KEY,\n    drug_name STRING,\n    patient_id INT,\n    reaction TEXT\n);\n\nCREATE TABLE Patients (\n    patient_id INT PRIMARY KEY,\n    patient_name STRING,\n    age INT,\n    gender CHAR(1)\n);\n\nCREATE TABLE Drugs (\n    drug_id INT PRIMARY KEY,\n    drug_name STRING,\n    manufacturer STRING,\n    expiration_date DATE\n);\n\n### STATEMENT\n\nSELECT drug_name, manufacturer, expiration_date FROM Drugs WHERE expiration_date < '2022-01-01' ORDER BY expiration_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM AdverseReaction;",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, patient_id FROM AdverseReaction WHERE reaction_type = 'Allergy';",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM Patient WHERE age > 60;",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT name, age, gender FROM Patient WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM Drug WHERE manufacturer = 'Pfizer';",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT name, dosage FROM Drug WHERE id = 5;",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM Reporting WHERE reporter_name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT report_id, reported_date FROM Reporting WHERE report_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM AdverseReaction WHERE drug_name = 'Aspirin' AND reaction_type = 'Rash';",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM Patient WHERE age BETWEEN 30 AND 40;",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT name, manufacturer FROM Drug WHERE dosage = '10mg';",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM Reporting WHERE reported_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT id, drug_name FROM AdverseReaction WHERE patient_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT name, age FROM Patient WHERE gender = 'Female' AND age < 50;",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM Drug WHERE manufacturer = 'Merck' AND dosage LIKE '%mg%';",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM Reporting WHERE reporter_name LIKE '%Smith%';",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM AdverseReaction WHERE reaction_type IN ('Allergy', 'Rash', 'Nausea');",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT name, age, gender FROM Patient WHERE name LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM Drug WHERE name LIKE '%Paracetamol%';",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM Reporting ORDER BY reported_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM AdverseReaction WHERE reaction_type = 'Allergy';",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT Patient.name, Patient.age, Drug.name FROM Patient INNER JOIN AdverseReaction ON Patient.id = AdverseReaction.patient_id INNER JOIN Drug ON AdverseReaction.drug_name = Drug.name;",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT Drug.name, Drug.manufacturer, Reporting.reported_date FROM Drug INNER JOIN AdverseReaction ON Drug.name = AdverseReaction.drug_name INNER JOIN Reporting ON AdverseReaction.id = Reporting.report_id;",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT Patient.name, Patient.gender, Reporting.reporter_name FROM Patient INNER JOIN AdverseReaction ON Patient.id = AdverseReaction.patient_id INNER JOIN Reporting ON AdverseReaction.id = Reporting.report_id WHERE Patient.age > 50;",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT MAX(age) AS max_age FROM Patient;",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT drug_name, COUNT(drug_name) AS num_reactions FROM AdverseReaction GROUP BY drug_name ORDER BY num_reactions DESC;",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT DISTINCT drug_name FROM AdverseReaction;",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM Patient WHERE name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM Drug WHERE manufacturer = 'Pfizer' OR manufacturer = 'Merck';",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT Patient.name, COUNT(AdverseReaction.id) AS num_reactions FROM Patient LEFT JOIN AdverseReaction ON Patient.id = AdverseReaction.patient_id GROUP BY Patient.name HAVING num_reactions > 2;",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT Drug.name, AVG(Patient.age) AS avg_age FROM Drug INNER JOIN AdverseReaction ON Drug.name = AdverseReaction.drug_name INNER JOIN Patient ON AdverseReaction.patient_id = Patient.id GROUP BY Drug.name;",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT Patient.name, MIN(age) AS min_age, MAX(age) AS max_age FROM Patient GROUP BY Patient.name;",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT AVG(age) AS avg_age, gender FROM Patient GROUP BY gender;",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM Patient WHERE age BETWEEN 30 AND 50;",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT drug_name, COUNT(DISTINCT patient_id) AS num_patients FROM AdverseReaction GROUP BY drug_name ORDER BY num_patients DESC;",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT Patient.name, Drug.name, Reporting.reported_date FROM Patient INNER JOIN AdverseReaction ON Patient.id = AdverseReaction.patient_id INNER JOIN Drug ON AdverseReaction.drug_name = Drug.name INNER JOIN Reporting ON AdverseReaction.id = Reporting.report_id WHERE Reporting.reported_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT Drug.name, COUNT(Reporting.id) AS num_reports FROM Drug INNER JOIN AdverseReaction ON Drug.name = AdverseReaction.drug_name INNER JOIN Reporting ON AdverseReaction.id = Reporting.report_id GROUP BY Drug.name ORDER BY num_reports DESC;",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT DISTINCT reaction_type FROM AdverseReaction;",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM Reporting WHERE reporter_name LIKE '%Smith%';",
  "### TABLEDATA\n\nCREATE TABLE AdverseReaction (\n  id INT PRIMARY KEY,\n  patient_id INT,\n  drug_name VARCHAR,\n  reaction_type VARCHAR\n);\n\nCREATE TABLE Patient (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  age INT,\n  gender VARCHAR\n);\n\nCREATE TABLE Drug (\n  id INT PRIMARY KEY,\n  name VARCHAR,\n  manufacturer VARCHAR,\n  dosage VARCHAR\n);\n\nCREATE TABLE Reporting (\n  id INT PRIMARY KEY,\n  report_id INT,\n  reported_date DATE,\n  reporter_name VARCHAR\n);\n\n### STATEMENT\n\nSELECT AVG(age) AS avg_age, MIN(age) AS min_age, MAX(age) AS max_age, gender FROM Patient GROUP BY gender;",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT * FROM adverse_reactions;",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT id, drug_name, reaction_description FROM adverse_reactions;",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT patient_name, age, gender FROM patients;",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT * FROM medical_records WHERE diagnosis = 'Flu';",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT name, specialization FROM healthcare_professionals;",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT * FROM reported_cases WHERE status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT id, patient_id, prescription FROM medical_records;",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT patient_name, age, address FROM patients WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT reported_by, report_date FROM adverse_reactions WHERE drug_name = 'Aspirin';",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT id, case_description FROM reported_cases;",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT patient_name, age, address FROM patients ORDER BY age DESC;",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT * FROM medical_records WHERE patient_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT id, patient_id, prescription FROM medical_records WHERE diagnosis = 'Allergy';",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT name, contact_number FROM healthcare_professionals WHERE specialization = 'Cardiology';",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT * FROM adverse_reactions WHERE report_date > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT patient_name, age, address FROM patients WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT id, case_description FROM reported_cases WHERE status = 'Resolved';",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT * FROM medical_records WHERE prescription LIKE '%ibuprofen%';",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT name, email FROM healthcare_professionals;",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT patient_name, age, gender FROM patients WHERE address LIKE '%Street%';",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT * FROM adverse_reactions WHERE report_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT drug_name, reported_by, reaction_description FROM adverse_reactions WHERE drug_name = 'Aspirin';",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT patient_name, age, gender, address FROM patients WHERE age >= 50 AND gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT count(*) FROM medical_records WHERE diagnosis = 'COVID-19';",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT name, specialization, email FROM healthcare_professionals WHERE specialization LIKE '%Surgeon%';",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT * FROM reported_cases WHERE status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT patient_name, age, gender, address, diagnosis FROM patients p JOIN medical_records mr ON p.id = mr.patient_id WHERE mr.diagnosis = 'Diabetes';",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT r.reaction_description, p.patient_name, mr.diagnosis FROM adverse_reactions r JOIN patients p ON r.reported_by = p.patient_name JOIN medical_records mr ON p.id = mr.patient_id WHERE r.drug_name = 'Insulin';",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT * FROM reported_cases WHERE report_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT DISTINCT drug_name FROM adverse_reactions;",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT patient_name, age, mr.prescription FROM patients p JOIN medical_records mr ON p.id = mr.patient_id WHERE mr.prescription IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT * FROM healthcare_professionals WHERE contact_number IS NOT NULL AND email IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT patient_name, age, diagnosis FROM patients p JOIN medical_records mr ON p.id = mr.patient_id WHERE diagnosis IN ('COVID-19', 'Flu');",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT count(*) FROM reported_cases WHERE status = 'Resolved';",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT DISTINCT reported_by FROM adverse_reactions;",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT p.patient_name, count(*) AS number_of_cases FROM patients p JOIN medical_records mr ON p.id = mr.patient_id JOIN adverse_reactions r ON p.id = r.reported_by GROUP BY p.patient_name;",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT * FROM reported_cases WHERE case_description LIKE '%allergic reaction%' OR case_description LIKE '%rash%';",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT patient_name, age, diagnosis FROM patients p JOIN medical_records mr ON p.id = mr.patient_id WHERE mr.diagnosis LIKE '%Cancer%';",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT * FROM healthcare_professionals WHERE specialization = 'Pediatrician';",
  "### TABLEDATA\n\nCREATE TABLE adverse_reactions (\n    id SERIAL PRIMARY KEY,\n    drug_name VARCHAR(255) NOT NULL,\n    reported_by VARCHAR(255) NOT NULL,\n    reaction_description TEXT,\n    report_date DATE\n);\n\nCREATE TABLE patients (\n    id SERIAL PRIMARY KEY,\n    patient_name VARCHAR(255) NOT NULL,\n    age INT,\n    gender VARCHAR(20),\n    address TEXT\n);\n\nCREATE TABLE medical_records (\n    id SERIAL PRIMARY KEY,\n    patient_id INT,\n    diagnosis TEXT,\n    prescription TEXT,\n    FOREIGN KEY (patient_id) REFERENCES patients(id)\n);\n\nCREATE TABLE healthcare_professionals (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    specialization VARCHAR(255),\n    contact_number VARCHAR(20),\n    email VARCHAR(255)\n);\n\nCREATE TABLE reported_cases (\n    id SERIAL PRIMARY KEY,\n    case_description TEXT,\n    reported_by VARCHAR(255),\n    report_date DATE,\n    status VARCHAR(50) DEFAULT 'Pending'\n);\n\n### STATEMENT\n\nSELECT count(*) FROM adverse_reactions WHERE drug_name = 'Penicillin';"
]