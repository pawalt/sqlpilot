[
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT * FROM clinical_trials_data WHERE participant_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT participant_name, age FROM clinical_trials_data WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM clinical_trials_data;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT participant_id, participant_name, gender FROM clinical_trials_data WHERE age > 50;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT trial_name, trial_result FROM clinical_trials_data WHERE trial_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT DISTINCT gender FROM clinical_trials_data;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT AVG(age) FROM clinical_trials_data;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT participant_name FROM clinical_trials_data WHERE gender = 'Female' AND age < 40;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT trial_id, trial_name FROM clinical_trials_data WHERE trial_result = 'Positive';",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT * FROM clinical_trials_data WHERE participant_id BETWEEN 10 AND 20;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT MAX(age), MIN(age) FROM clinical_trials_data;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT trial_name, COUNT(*) FROM clinical_trials_data GROUP BY trial_name;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT participant_id, participant_name FROM clinical_trials_data WHERE gender = 'Female' ORDER BY age DESC;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT AVG(age) AS average_age, gender FROM clinical_trials_data GROUP BY gender;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT participant_id FROM clinical_trials_data WHERE participant_name LIKE '%Smith%';",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT trial_id, COUNT(*) FROM clinical_trials_data GROUP BY trial_id HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT MIN(age) AS min_age, MAX(age) AS max_age FROM clinical_trials_data;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT trial_name, trial_result, COUNT(*) FROM clinical_trials_data GROUP BY trial_name, trial_result;",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT DISTINCT trial_name FROM clinical_trials_data WHERE trial_result = 'Negative';",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT participant_id, age, trial_id FROM clinical_trials_data WHERE participant_name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT participant_id, participant_name, age, gender, trial_id, trial_name, trial_result FROM clinical_trials_data WHERE age > 50 ORDER BY participant_name DESC LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT participant_name, gender, trial_result FROM clinical_trials_data WHERE gender = 'Male' AND trial_result = 'Success'",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT participant_id, participant_name, age, trial_name FROM clinical_trials_data WHERE age BETWEEN 30 AND 50 ORDER BY age ASC LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT participant_id, participant_name, age, gender, trial_name, trial_result FROM clinical_trials_data WHERE trial_result IN ('Success', 'Failure') AND age < 40",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT participant_name, trial_name, trial_result FROM clinical_trials_data WHERE trial_name LIKE '%Cancer%' AND trial_result = 'Success'",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT participant_id, participant_name, gender, trial_result FROM clinical_trials_data WHERE gender = 'Female'",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT participant_name, trial_result FROM clinical_trials_data GROUP BY trial_result HAVING COUNT(participant_id) > 2",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT participant_id, participant_name, trial_name FROM clinical_trials_data WHERE participant_name LIKE '%John%'",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT trial_name, COUNT(participant_id) AS participant_count FROM clinical_trials_data GROUP BY trial_name HAVING COUNT(participant_id) > 5",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT participant_id, participant_name, gender, trial_result FROM clinical_trials_data WHERE trial_id = 101",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT participant_name, age, trial_name FROM clinical_trials_data WHERE age > 50 ORDER BY age DESC LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT DISTINCT trial_name FROM clinical_trials_data",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT participant_id, participant_name, trial_result FROM clinical_trials_data WHERE trial_result = 'Failure'",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT participant_id, participant_name, age, gender, trial_name, trial_result FROM clinical_trials_data WHERE trial_id = 102 ORDER BY participant_id ASC LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT participant_id, participant_name, trial_result FROM clinical_trials_data WHERE trial_result = 'Success'",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT participant_name, age, gender, trial_result FROM clinical_trials_data WHERE age > 40 AND gender = 'Male' AND trial_result = 'Success'",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT participant_id, participant_name, gender, trial_result FROM clinical_trials_data WHERE trial_name = 'Clinical Trial A'",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT participant_id, participant_name, age, gender FROM clinical_trials_data WHERE gender = 'Female' AND age < 30 ORDER BY age ASC LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT participant_name, trial_result FROM clinical_trials_data WHERE trial_id = 101 AND trial_result = 'Success'",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT participant_id, participant_name, trial_name FROM clinical_trials_data WHERE trial_result = 'Failure'",
  "### TABLEDATA\n\nCREATE TABLE clinical_trials_data (\n    participant_id INTEGER,\n    participant_name STRING,\n    age INTEGER,\n    gender STRING,\n    trial_id INTEGER,\n    trial_name STRING,\n    trial_result STRING\n);\n\n### STATEMENT\n\nSELECT participant_id, participant_name, age, gender, trial_name, trial_result FROM clinical_trials_data WHERE age BETWEEN 40 AND 60 ORDER BY age DESC LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM participants;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT id, age FROM participants WHERE gender='Male';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT participant_id, location FROM participants WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM trial_results;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT id, trial_id, result_date FROM trial_results WHERE participant_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT result FROM trial_results WHERE trial_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM participants WHERE location LIKE 'New%';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT id, participant_id FROM trial_results WHERE result_date BETWEEN '2022-01-01' AND '2022-03-31';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM participants;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT MAX(age) FROM participants;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(age) FROM participants WHERE gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM participants ORDER BY age DESC;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT participant_id, MAX(result_date) FROM trial_results GROUP BY participant_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT location, COUNT(*) FROM participants GROUP BY location;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM trial_results WHERE result LIKE '%positive%';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT trial_id, COUNT(*) FROM trial_results GROUP BY trial_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT id, participant_id, result_date FROM trial_results ORDER BY result_date;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(age), gender FROM participants GROUP BY gender;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT id, trial_id FROM trial_results WHERE result_date > '2022-04-01';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM participants WHERE id IN (1, 5, 10);",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM participants;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT id, age, gender FROM participants WHERE location='New York';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM participants;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT MIN(age), MAX(age) FROM participants;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT participant_id, age, gender FROM participants WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM participants JOIN trial_results ON participants.participant_id = trial_results.participant_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM trial_results WHERE result_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT gender) FROM participants;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT participant_id, AVG(age) AS avg_age FROM participants GROUP BY participant_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT participant_id, COUNT(*) AS result_count FROM trial_results GROUP BY participant_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT participant_id, COUNT(*) AS result_count FROM trial_results GROUP BY participant_id HAVING COUNT(*) > 2;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT participant_id, AVG(age) AS avg_age FROM participants WHERE gender='Male' GROUP BY participant_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT location, COUNT(*) AS participant_count FROM participants GROUP BY location ORDER BY participant_count DESC;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT t1.participant_id, t2.result FROM participants AS t1 JOIN trial_results AS t2 ON t1.participant_id = t2.participant_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM participants WHERE age IS NOT NULL AND gender IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM participants WHERE age > 40 AND (gender='Male' OR gender='Female');",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(age) AS avg_age, MIN(age) AS min_age, MAX(age) AS max_age FROM participants WHERE location='California';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT participant_id, MAX(result_date) AS latest_result_date FROM trial_results GROUP BY participant_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT location, COUNT(*) AS participant_count FROM participants GROUP BY location HAVING COUNT(*) >= 2;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  id SERIAL PRIMARY KEY,\n  participant_id INT NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(50)\n);\n\n\nCREATE TABLE trial_results (\n  id SERIAL PRIMARY KEY,\n  trial_id INT NOT NULL,\n  participant_id INT NOT NULL,\n  result TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM participants WHERE participant_id IN (SELECT participant_id FROM trial_results WHERE result_date BETWEEN '2022-01-01' AND '2022-12-31');",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM participants;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT name, age FROM participants;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT participant_id, location FROM participants;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM trials;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT trial_name, lead_researcher FROM trials;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT trial_id, end_date FROM trials;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM results;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT result_id, trial_id, participant_id FROM results;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT result_description, result_date FROM results;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT name, age, location FROM participants WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT trial_name, start_date, end_date FROM trials WHERE lead_researcher = 'Dr. Smith';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT result_description, result_date FROM results WHERE result_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT name, age FROM participants WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT trial_name, start_date, end_date FROM trials WHERE start_date < '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT result_description FROM results WHERE result_description LIKE '%positive%';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM participants ORDER BY name ASC;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM trials ORDER BY end_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM results ORDER BY result_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM participants WHERE location LIKE '%New York%';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT trial_name, lead_researcher FROM trials WHERE lead_researcher LIKE '%Dr.%';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM participants WHERE age > 18 AND gender='Male';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT name, age, location FROM participants WHERE location='New York';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT trial_name, start_date, end_date, lead_researcher FROM trials WHERE start_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM results WHERE result_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT trial_name, participant_id FROM trials JOIN results ON trials.trial_id = results.trial_id WHERE results.result_date > '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT name AS participant_name, trial_name AS experiment_name FROM participants JOIN results ON participants.participant_id = results.participant_id JOIN trials ON results.trial_id = trials.trial_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT participant_id, COUNT(result_id) AS num_results FROM results GROUP BY participant_id HAVING COUNT(result_id) > 3;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT trial_name, COUNT(participant_id) AS num_participants FROM trials JOIN results ON trials.trial_id = results.trial_id GROUP BY trial_name HAVING COUNT(participant_id) > 5;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT name, age, location FROM participants WHERE age > 25 UNION ALL SELECT trial_name, start_date, end_date FROM trials WHERE start_date > '2023-01-01';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT name, trial_name, result_description FROM participants JOIN results ON participants.participant_id = results.participant_id JOIN trials ON results.trial_id = trials.trial_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM participants WHERE gender='Female' ORDER BY age DESC;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT trial_name, participant_id FROM trials JOIN results ON trials.trial_id = results.trial_id WHERE results.result_description LIKE '%positive%';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT name, age FROM participants WHERE location LIKE '%California%' AND age < 30;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT trial_name, COUNT(result_id) AS num_results FROM trials JOIN results ON trials.trial_id = results.trial_id GROUP BY trial_name ORDER BY num_results DESC;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT participant_id, AVG(age) AS avg_age FROM participants GROUP BY participant_id HAVING AVG(age) > 40;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT location FROM participants;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT trial_id, COUNT(participant_id) AS num_participants FROM results GROUP BY trial_id ORDER BY num_participants DESC;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT trial_name, MAX(result_date) AS latest_result_date FROM trials JOIN results ON trials.trial_id = results.trial_id GROUP BY trial_name;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT name, age, location FROM participants WHERE age > 18 AND (location='California' OR location='New York');",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(age) AS avg_age, MAX(age) AS max_age, MIN(age) AS min_age FROM participants;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n  participant_id SERIAL PRIMARY KEY,\n  name VARCHAR(50) NOT NULL,\n  age INT,\n  gender VARCHAR(10),\n  location VARCHAR(100)\n);\n\nCREATE TABLE trials (\n  trial_id SERIAL PRIMARY KEY,\n  trial_name VARCHAR(100) NOT NULL,\n  start_date DATE,\n  end_date DATE,\n  lead_researcher VARCHAR(50)\n);\n\nCREATE TABLE results (\n  result_id SERIAL PRIMARY KEY,\n  trial_id INT REFERENCES trials(trial_id),\n  participant_id INT REFERENCES participants(participant_id),\n  result_description TEXT,\n  result_date DATE\n);\n\n### STATEMENT\n\nSELECT trial_name, COUNT(result_id) AS num_results FROM trials JOIN results ON trials.trial_id = results.trial_id GROUP BY trial_name HAVING num_results > 1;",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT * FROM ParticipantDemographics;",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT participant_name, age FROM ParticipantDemographics;",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT participant_id, gender FROM ParticipantDemographics WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT * FROM TrialResults;",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT result_value, timestamp FROM TrialResults WHERE participant_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT * FROM TrialPhases;",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT phase_id, phase_name FROM TrialPhases WHERE end_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT * FROM TrialParticipants;",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT participant_id, trial_id FROM TrialParticipants WHERE enrollment_date < '2022-03-15';",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT participant_id, completion_status FROM TrialParticipants WHERE trial_id = 500;",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT participant_name, age, gender FROM ParticipantDemographics INNER JOIN TrialParticipants ON ParticipantDemographics.participant_id = TrialParticipants.participant_id;",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT participant_name, result_value FROM ParticipantDemographics INNER JOIN TrialResults ON ParticipantDemographics.participant_id = TrialResults.participant_id;",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT * FROM ParticipantDemographics WHERE participant_id IN (SELECT participant_id FROM TrialParticipants WHERE trial_id = 200);",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT * FROM TrialResults WHERE timestamp BETWEEN '2022-01-01' AND '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT * FROM TrialParticipants WHERE enrollment_date BETWEEN '2022-01-01' AND '2022-02-28';",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT participant_name, phase_name FROM ParticipantDemographics JOIN TrialParticipants ON ParticipantDemographics.participant_id = TrialParticipants.participant_id JOIN TrialPhases ON TrialParticipants.trial_id = TrialPhases.phase_id;",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM ParticipantDemographics;",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT AVG(age) FROM ParticipantDemographics;",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT MAX(result_value) FROM TrialResults;",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT DISTINCT gender FROM ParticipantDemographics;",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT * FROM ParticipantDemographics WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT participant_name, age, gender FROM ParticipantDemographics WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT participant_id) FROM ParticipantDemographics;",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT participant_name, result_value, timestamp FROM ParticipantDemographics JOIN TrialResults ON ParticipantDemographics.participant_id = TrialResults.participant_id;",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT * FROM TrialResults WHERE result_value > 0.5 AND timestamp >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT phase_name, start_date, end_date FROM TrialPhases WHERE end_date > start_date;",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM TrialParticipants WHERE completion_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT participant_name, age, gender FROM ParticipantDemographics WHERE age BETWEEN 20 AND 40;",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT AVG(result_value) FROM TrialResults GROUP BY participant_id;",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT participant_name, trial_id, enrollment_date FROM TrialParticipants JOIN ParticipantDemographics ON TrialParticipants.participant_id = ParticipantDemographics.participant_id;",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT MAX(result_value) FROM TrialResults;",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT participant_id, result_value, timestamp FROM TrialResults WHERE result_value = (SELECT MAX(result_value) FROM TrialResults);",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT participant_name, age, gender FROM ParticipantDemographics WHERE age > 30 AND gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM TrialParticipants WHERE trial_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT participant_name, result_value, timestamp FROM ParticipantDemographics JOIN TrialResults ON ParticipantDemographics.participant_id = TrialResults.participant_id WHERE result_value > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT participant_name, age, gender FROM ParticipantDemographics WHERE participant_name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM TrialPhases WHERE end_date < '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT AVG(result_value) FROM TrialResults WHERE timestamp >= '2022-01-01' GROUP BY participant_id;",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT participant_name, age, gender FROM ParticipantDemographics WHERE participant_id IN (SELECT participant_id FROM TrialResults WHERE result_value > 0.7);",
  "### TABLEDATA\n\nCREATE TABLE ParticipantDemographics ( \n    participant_id INT PRIMARY KEY, \n    participant_name VARCHAR(50), \n    age INT, \n    gender VARCHAR(10) \n);\n\n\nCREATE TABLE TrialResults ( \n    result_id INT PRIMARY KEY, \n    participant_id INT, \n    result_value FLOAT, \n    timestamp TIMESTAMP \n);\n\n\nCREATE TABLE TrialPhases ( \n    phase_id INT PRIMARY KEY, \n    phase_name VARCHAR(50), \n    start_date DATE, \n    end_date DATE \n);\n\n\nCREATE TABLE TrialParticipants ( \n    participant_id INT, \n    trial_id INT, \n    enrollment_date DATE, \n    completion_status BOOLEAN \n);\n\n### STATEMENT\n\nSELECT DISTINCT trial_id FROM TrialParticipants;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM participants;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT participant_name, age FROM participants;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT participant_id, gender FROM participants;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM trials;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT trial_name, start_date FROM trials;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT trial_id, end_date FROM trials;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM trial_results;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT participant_id, trial_id, result FROM trial_results;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT result_id, participant_id FROM trial_results;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM hospitals;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT hospital_name, location FROM hospitals;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT hospital_id, contact_phone FROM hospitals;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM doctors;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT doctor_name, specialization FROM doctors;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT doctor_id, hospital_id FROM doctors;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT p.participant_name, t.trial_name, tr.result FROM participants p JOIN trial_results tr ON p.participant_id = tr.participant_id JOIN trials t ON tr.trial_id = t.trial_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT d.doctor_name, h.hospital_name, d.specialization FROM doctors d JOIN hospitals h ON d.hospital_id = h.hospital_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT p.participant_name, t.trial_name, r.result FROM participants p, trials t, trial_results r WHERE p.participant_id = r.participant_id AND t.trial_id = r.trial_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT h.hospital_name, d.doctor_name, d.specialization FROM hospitals h, doctors d WHERE h.hospital_id = d.hospital_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT p.participant_name, p.age, t.trial_name, t.start_date, r.result, h.hospital_name FROM participants p JOIN trial_results r ON p.participant_id = r.participant_id JOIN trials t ON r.trial_id = t.trial_id JOIN doctors d ON d.hospital_id = h.hospital_id JOIN hospitals h ON d.hospital_id = h.hospital_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM participants WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT participant_name, age, gender, address FROM participants WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT trial_name, start_date, end_date FROM trials WHERE start_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT * FROM trial_results WHERE participant_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT hospital_name, location, contact_phone FROM hospitals WHERE location LIKE '%City%';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT doctor_name, specialization FROM doctors WHERE hospital_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT p.participant_name, tr.result FROM participants p INNER JOIN trial_results tr ON p.participant_id = tr.participant_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT t.trial_name, tr.result FROM trials t INNER JOIN trial_results tr ON t.trial_id = tr.trial_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT p.participant_name, t.trial_name, tr.result FROM participants p INNER JOIN trial_results tr ON p.participant_id = tr.participant_id INNER JOIN trials t ON tr.trial_id = t.trial_id;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT MAX(age), MIN(age), AVG(age) FROM participants;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM participants WHERE gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT hospital_name, COUNT(doctor_id) FROM hospitals h INNER JOIN doctors d ON h.hospital_id = d.hospital_id GROUP BY hospital_name;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT t.trial_name, COUNT(tr.result_id) FROM trials t INNER JOIN trial_results tr ON t.trial_id = tr.trial_id GROUP BY t.trial_name;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT participant_name, COUNT(result_id) FROM participants p INNER JOIN trial_results tr ON p.participant_id = tr.participant_id GROUP BY participant_name;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT p.participant_name, t.trial_name, tr.result FROM participants p INNER JOIN trial_results tr ON p.participant_id = tr.participant_id INNER JOIN trials t ON tr.trial_id = t.trial_id WHERE tr.result = 'Positive';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT p.participant_name, SUM(age) FROM participants p INNER JOIN trial_results tr ON p.participant_id = tr.participant_id GROUP BY p.participant_name;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT hospital_name, AVG(age) FROM hospitals h INNER JOIN doctors d ON h.hospital_id = d.hospital_id INNER JOIN participants p ON d.doctor_id = p.participant_id GROUP BY hospital_name;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT h.hospital_name, COUNT(p.participant_id) FROM hospitals h INNER JOIN doctors d ON h.hospital_id = d.hospital_id INNER JOIN participants p ON d.doctor_id = p.participant_id GROUP BY h.hospital_name;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT t.trial_name FROM trials t INNER JOIN trial_results tr ON t.trial_id = tr.trial_id WHERE tr.result = 'Negative';",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT doctor_name FROM doctors d INNER JOIN participants p ON d.hospital_id = p.participant_id WHERE p.age > 40;",
  "### TABLEDATA\n\nCREATE TABLE participants (\n    participant_id INT PRIMARY KEY,\n    participant_name VARCHAR(50),\n    age INT,\n    gender VARCHAR(10),\n    address VARCHAR(100)\n);\n\nCREATE TABLE trials (\n    trial_id INT PRIMARY KEY,\n    trial_name VARCHAR(100),\n    start_date DATE,\n    end_date DATE,\n    description TEXT\n);\n\nCREATE TABLE trial_results (\n    result_id SERIAL PRIMARY KEY,\n    participant_id INT,\n    trial_id INT,\n    result TEXT\n);\n\nCREATE TABLE hospitals (\n    hospital_id SERIAL PRIMARY KEY,\n    hospital_name VARCHAR(100),\n    location VARCHAR(100),\n    contact_phone VARCHAR(20)\n);\n\nCREATE TABLE doctors (\n    doctor_id SERIAL PRIMARY KEY,\n    doctor_name VARCHAR(50),\n    specialization VARCHAR(50),\n    hospital_id INT\n);\n\n### STATEMENT\n\nSELECT AVG(LENGTH(description)) FROM trials;"
]