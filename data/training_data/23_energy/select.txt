<t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>SELECT * FROM user_energy_data WHERE id = 1;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>select * from user_energy_data where id = 1;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>SELECT * FROM user_energy_data WHERE id = 1;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>select * from user_energy_data where id = 1;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>SELECT energy_consumed FROM user_energy_data WHERE user_id = 5;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>select energy_consumed from user_energy_data where user_id = 5;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>SELECT energy_consumed FROM user_energy_data WHERE user_id = 5;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>select energy_consumed from user_energy_data where user_id = 5;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>SELECT * FROM user_energy_data WHERE timestamp BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>select * from user_energy_data where timestamp between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>SELECT * FROM user_energy_data WHERE timestamp BETWEEN '2022-01-01' AND '2022-01-31';</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>select * from user_energy_data where timestamp between '2022-01-01' and '2022-01-31';</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>SELECT id, energy_consumed FROM user_energy_data WHERE user_id = 3 AND timestamp > '2022-02-15';</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>select id, energy_consumed from user_energy_data where user_id = 3 and timestamp > '2022-02-15';</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>SELECT id, energy_consumed FROM user_energy_data WHERE user_id = 3 AND timestamp > '2022-02-15';</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>select id, energy_consumed from user_energy_data where user_id = 3 and timestamp > '2022-02-15';</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>SELECT SUM(energy_consumed) AS total_energy_consumed FROM user_energy_data;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>select sum(energy_consumed) as total_energy_consumed from user_energy_data;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>SELECT SUM(energy_consumed) AS total_energy_consumed FROM user_energy_data;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>select sum(energy_consumed) as total_energy_consumed from user_energy_data;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>SELECT user_id, COUNT(id) AS energy_records FROM user_energy_data GROUP BY user_id;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>select user_id, count(id) as energy_records from user_energy_data group by user_id;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>SELECT user_id, COUNT(id) AS energy_records FROM user_energy_data GROUP BY user_id;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>select user_id, count(id) as energy_records from user_energy_data group by user_id;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>SELECT * FROM user_energy_data ORDER BY timestamp DESC LIMIT 10;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>select * from user_energy_data order by timestamp desc limit 10;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>SELECT * FROM user_energy_data ORDER BY timestamp DESC LIMIT 10;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>select * from user_energy_data order by timestamp desc limit 10;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>SELECT provider_name, location FROM energy_providers WHERE provider_id = 2;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>select provider_name, location from energy_providers where provider_id = 2;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>SELECT provider_name, location FROM energy_providers WHERE provider_id = 2;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>select provider_name, location from energy_providers where provider_id = 2;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>SELECT * FROM energy_providers WHERE location = 'New York';</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>select * from energy_providers where location = 'new york';</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>SELECT * FROM energy_providers WHERE location = 'New York';</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>select * from energy_providers where location = 'new york';</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>SELECT provider_id, provider_name FROM energy_providers WHERE provider_name LIKE 'P%';</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>select provider_id, provider_name from energy_providers where provider_name like 'p%';</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>SELECT provider_id, provider_name FROM energy_providers WHERE provider_name LIKE 'P%';</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>select provider_id, provider_name from energy_providers where provider_name like 'p%';</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>SELECT * FROM user_energy_data JOIN energy_providers ON user_energy_data.user_id = energy_providers.provider_id;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>select * from user_energy_data join energy_providers on user_energy_data.user_id = energy_providers.provider_id;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>SELECT * FROM user_energy_data JOIN energy_providers ON user_energy_data.user_id = energy_providers.provider_id;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>select * from user_energy_data join energy_providers on user_energy_data.user_id = energy_providers.provider_id;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>SELECT * FROM user_energy_data LEFT JOIN energy_providers ON user_energy_data.user_id = energy_providers.provider_id;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>select * from user_energy_data left join energy_providers on user_energy_data.user_id = energy_providers.provider_id;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>SELECT * FROM user_energy_data LEFT JOIN energy_providers ON user_energy_data.user_id = energy_providers.provider_id;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>select * from user_energy_data left join energy_providers on user_energy_data.user_id = energy_providers.provider_id;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>SELECT user_id, provider_name FROM user_energy_data INNER JOIN energy_providers ON user_id = provider_id;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>select user_id, provider_name from user_energy_data inner join energy_providers on user_id = provider_id;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>SELECT user_id, provider_name FROM user_energy_data INNER JOIN energy_providers ON user_id = provider_id;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>select user_id, provider_name from user_energy_data inner join energy_providers on user_id = provider_id;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>SELECT user_id, provider_name FROM user_energy_data RIGHT JOIN energy_providers ON user_id = provider_id;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>select user_id, provider_name from user_energy_data right join energy_providers on user_id = provider_id;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>SELECT user_id, provider_name FROM user_energy_data RIGHT JOIN energy_providers ON user_id = provider_id;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>select user_id, provider_name from user_energy_data right join energy_providers on user_id = provider_id;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>SELECT * FROM user_energy_data CROSS JOIN energy_providers;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>select * from user_energy_data cross join energy_providers;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>SELECT * FROM user_energy_data CROSS JOIN energy_providers;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>select * from user_energy_data cross join energy_providers;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>SELECT DISTINCT user_id FROM user_energy_data;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>select distinct user_id from user_energy_data;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>SELECT DISTINCT user_id FROM user_energy_data;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>select distinct user_id from user_energy_data;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>SELECT user_id, MAX(timestamp) AS latest_timestamp FROM user_energy_data GROUP BY user_id;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>select user_id, max(timestamp) as latest_timestamp from user_energy_data group by user_id;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>SELECT user_id, MAX(timestamp) AS latest_timestamp FROM user_energy_data GROUP BY user_id;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>select user_id, max(timestamp) as latest_timestamp from user_energy_data group by user_id;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>SELECT AVG(energy_consumed) AS avg_energy_consumed, MIN(energy_consumed) AS min_energy_consumed, MAX(energy_consumed) AS max_energy_consumed FROM user_energy_data;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>select avg(energy_consumed) as avg_energy_consumed, min(energy_consumed) as min_energy_consumed, max(energy_consumed) as max_energy_consumed from user_energy_data;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>SELECT AVG(energy_consumed) AS avg_energy_consumed, MIN(energy_consumed) AS min_energy_consumed, MAX(energy_consumed) AS max_energy_consumed FROM user_energy_data;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>select avg(energy_consumed) as avg_energy_consumed, min(energy_consumed) as min_energy_consumed, max(energy_consumed) as max_energy_consumed from user_energy_data;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>SELECT user_id, CASE WHEN energy_consumed > 50 THEN 'High Consumption' ELSE 'Low Consumption' END AS consumption_level FROM user_energy_data;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>select user_id, case when energy_consumed > 50 then 'high consumption' else 'low consumption' end as consumption_level from user_energy_data;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>SELECT user_id, CASE WHEN energy_consumed > 50 THEN 'High Consumption' ELSE 'Low Consumption' END AS consumption_level FROM user_energy_data;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>select user_id, case when energy_consumed > 50 then 'high consumption' else 'low consumption' end as consumption_level from user_energy_data;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>SELECT * FROM user_energy_data WHERE timestamp = (SELECT MAX(timestamp) FROM user_energy_data);</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>select * from user_energy_data where timestamp = (select max(timestamp) from user_energy_data);</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>SELECT * FROM user_energy_data WHERE timestamp = (SELECT MAX(timestamp) FROM user_energy_data);</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>select * from user_energy_data where timestamp = (select max(timestamp) from user_energy_data);</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT * FROM energy_producers;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select * from energy_producers;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_producers;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_producers;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT * FROM energy_producers;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select * from energy_producers;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_producers;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_producers;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_producers;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_producers;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_producers;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_producers;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT id, name FROM energy_producers;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select id, name from energy_producers;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT id, name FROM energy_producers;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select id, name from energy_producers;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT id, name FROM energy_producers;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select id, name from energy_producers;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT id, name FROM energy_producers;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select id, name from energy_producers;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT id, name FROM energy_producers;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select id, name from energy_producers;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT id, name FROM energy_producers;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select id, name from energy_producers;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT * FROM energy_consumers;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select * from energy_consumers;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_consumers;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_consumers;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT * FROM energy_consumers;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select * from energy_consumers;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_consumers;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_consumers;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_consumers;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_consumers;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_consumers;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_consumers;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT id, name FROM energy_consumers;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select id, name from energy_consumers;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT id, name FROM energy_consumers;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select id, name from energy_consumers;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT id, name FROM energy_consumers;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select id, name from energy_consumers;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT id, name FROM energy_consumers;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select id, name from energy_consumers;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT id, name FROM energy_consumers;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select id, name from energy_consumers;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT id, name FROM energy_consumers;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select id, name from energy_consumers;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT * FROM energy_production;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select * from energy_production;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_production;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_production;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT * FROM energy_production;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select * from energy_production;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_production;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_production;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_production;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_production;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_production;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_production;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT producer_id, production_date FROM energy_production;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select producer_id, production_date from energy_production;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT producer_id, production_date FROM energy_production;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select producer_id, production_date from energy_production;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT producer_id, production_date FROM energy_production;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select producer_id, production_date from energy_production;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT producer_id, production_date FROM energy_production;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select producer_id, production_date from energy_production;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT producer_id, production_date FROM energy_production;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select producer_id, production_date from energy_production;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT producer_id, production_date FROM energy_production;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select producer_id, production_date from energy_production;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT producer_id, SUM(production_amount) AS total_production FROM energy_production GROUP BY producer_id;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select producer_id, sum(production_amount) as total_production from energy_production group by producer_id;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT producer_id, SUM(production_amount) AS total_production FROM energy_production GROUP BY producer_id;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select producer_id, sum(production_amount) as total_production from energy_production group by producer_id;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT producer_id, SUM(production_amount) AS total_production FROM energy_production GROUP BY producer_id;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select producer_id, sum(production_amount) as total_production from energy_production group by producer_id;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT producer_id, SUM(production_amount) AS total_production FROM energy_production GROUP BY producer_id;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select producer_id, sum(production_amount) as total_production from energy_production group by producer_id;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT producer_id, SUM(production_amount) AS total_production FROM energy_production GROUP BY producer_id;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select producer_id, sum(production_amount) as total_production from energy_production group by producer_id;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT producer_id, SUM(production_amount) AS total_production FROM energy_production GROUP BY producer_id;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select producer_id, sum(production_amount) as total_production from energy_production group by producer_id;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT producer_id, AVG(production_amount) AS avg_production FROM energy_production GROUP BY producer_id;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select producer_id, avg(production_amount) as avg_production from energy_production group by producer_id;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT producer_id, AVG(production_amount) AS avg_production FROM energy_production GROUP BY producer_id;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select producer_id, avg(production_amount) as avg_production from energy_production group by producer_id;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT producer_id, AVG(production_amount) AS avg_production FROM energy_production GROUP BY producer_id;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select producer_id, avg(production_amount) as avg_production from energy_production group by producer_id;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT producer_id, AVG(production_amount) AS avg_production FROM energy_production GROUP BY producer_id;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select producer_id, avg(production_amount) as avg_production from energy_production group by producer_id;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT producer_id, AVG(production_amount) AS avg_production FROM energy_production GROUP BY producer_id;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select producer_id, avg(production_amount) as avg_production from energy_production group by producer_id;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT producer_id, AVG(production_amount) AS avg_production FROM energy_production GROUP BY producer_id;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select producer_id, avg(production_amount) as avg_production from energy_production group by producer_id;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT * FROM energy_producers WHERE location='New York';</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select * from energy_producers where location='new york';</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_producers WHERE location='New York';</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_producers where location='new york';</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT * FROM energy_producers WHERE location='New York';</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select * from energy_producers where location='new york';</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_producers WHERE location='New York';</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_producers where location='new york';</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_producers WHERE location='New York';</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_producers where location='new york';</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_producers WHERE location='New York';</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_producers where location='new york';</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT * FROM energy_consumers WHERE location='California';</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select * from energy_consumers where location='california';</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_consumers WHERE location='California';</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_consumers where location='california';</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT * FROM energy_consumers WHERE location='California';</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select * from energy_consumers where location='california';</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_consumers WHERE location='California';</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_consumers where location='california';</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_consumers WHERE location='California';</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_consumers where location='california';</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_consumers WHERE location='California';</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_consumers where location='california';</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT * FROM energy_production WHERE production_date='2022-12-31';</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select * from energy_production where production_date='2022-12-31';</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_production WHERE production_date='2022-12-31';</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_production where production_date='2022-12-31';</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT * FROM energy_production WHERE production_date='2022-12-31';</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select * from energy_production where production_date='2022-12-31';</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_production WHERE production_date='2022-12-31';</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_production where production_date='2022-12-31';</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_production WHERE production_date='2022-12-31';</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_production where production_date='2022-12-31';</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_production WHERE production_date='2022-12-31';</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_production where production_date='2022-12-31';</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT * FROM energy_production WHERE production_amount > 1000;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select * from energy_production where production_amount > 1000;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_production WHERE production_amount > 1000;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_production where production_amount > 1000;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT * FROM energy_production WHERE production_amount > 1000;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select * from energy_production where production_amount > 1000;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_production WHERE production_amount > 1000;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_production where production_amount > 1000;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_production WHERE production_amount > 1000;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_production where production_amount > 1000;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_production WHERE production_amount > 1000;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_production where production_amount > 1000;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT * FROM energy_production WHERE producer_id=1;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select * from energy_production where producer_id=1;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_production WHERE producer_id=1;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_production where producer_id=1;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT * FROM energy_production WHERE producer_id=1;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select * from energy_production where producer_id=1;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_production WHERE producer_id=1;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_production where producer_id=1;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_production WHERE producer_id=1;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_production where producer_id=1;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT * FROM energy_production WHERE producer_id=1;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select * from energy_production where producer_id=1;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT name, production_amount FROM energy_production JOIN energy_producers ON energy_production.producer_id = energy_producers.id;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select name, production_amount from energy_production join energy_producers on energy_production.producer_id = energy_producers.id;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT name, production_amount FROM energy_production JOIN energy_producers ON energy_production.producer_id = energy_producers.id;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select name, production_amount from energy_production join energy_producers on energy_production.producer_id = energy_producers.id;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT name, production_amount FROM energy_production JOIN energy_producers ON energy_production.producer_id = energy_producers.id;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select name, production_amount from energy_production join energy_producers on energy_production.producer_id = energy_producers.id;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT name, production_amount FROM energy_production JOIN energy_producers ON energy_production.producer_id = energy_producers.id;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select name, production_amount from energy_production join energy_producers on energy_production.producer_id = energy_producers.id;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT name, production_amount FROM energy_production JOIN energy_producers ON energy_production.producer_id = energy_producers.id;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select name, production_amount from energy_production join energy_producers on energy_production.producer_id = energy_producers.id;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT name, production_amount FROM energy_production JOIN energy_producers ON energy_production.producer_id = energy_producers.id;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select name, production_amount from energy_production join energy_producers on energy_production.producer_id = energy_producers.id;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT name, production_amount FROM energy_production JOIN energy_producers ON energy_production.producer_id = energy_producers.id WHERE production_amount > 500;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select name, production_amount from energy_production join energy_producers on energy_production.producer_id = energy_producers.id where production_amount > 500;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT name, production_amount FROM energy_production JOIN energy_producers ON energy_production.producer_id = energy_producers.id WHERE production_amount > 500;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select name, production_amount from energy_production join energy_producers on energy_production.producer_id = energy_producers.id where production_amount > 500;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT name, production_amount FROM energy_production JOIN energy_producers ON energy_production.producer_id = energy_producers.id WHERE production_amount > 500;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select name, production_amount from energy_production join energy_producers on energy_production.producer_id = energy_producers.id where production_amount > 500;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT name, production_amount FROM energy_production JOIN energy_producers ON energy_production.producer_id = energy_producers.id WHERE production_amount > 500;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select name, production_amount from energy_production join energy_producers on energy_production.producer_id = energy_producers.id where production_amount > 500;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT name, production_amount FROM energy_production JOIN energy_producers ON energy_production.producer_id = energy_producers.id WHERE production_amount > 500;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select name, production_amount from energy_production join energy_producers on energy_production.producer_id = energy_producers.id where production_amount > 500;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT name, production_amount FROM energy_production JOIN energy_producers ON energy_production.producer_id = energy_producers.id WHERE production_amount > 500;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select name, production_amount from energy_production join energy_producers on energy_production.producer_id = energy_producers.id where production_amount > 500;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT energy_producers.name AS producer_name, energy_consumers.name AS consumer_name, production_amount FROM energy_production JOIN energy_producers ON energy_production.producer_id = energy_producers.id JOIN energy_consumers ON energy_production.consumer_id = energy_consumers.id;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select energy_producers.name as producer_name, energy_consumers.name as consumer_name, production_amount from energy_production join energy_producers on energy_production.producer_id = energy_producers.id join energy_consumers on energy_production.consumer_id = energy_consumers.id;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT energy_producers.name AS producer_name, energy_consumers.name AS consumer_name, production_amount FROM energy_production JOIN energy_producers ON energy_production.producer_id = energy_producers.id JOIN energy_consumers ON energy_production.consumer_id = energy_consumers.id;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select energy_producers.name as producer_name, energy_consumers.name as consumer_name, production_amount from energy_production join energy_producers on energy_production.producer_id = energy_producers.id join energy_consumers on energy_production.consumer_id = energy_consumers.id;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT energy_producers.name AS producer_name, energy_consumers.name AS consumer_name, production_amount FROM energy_production JOIN energy_producers ON energy_production.producer_id = energy_producers.id JOIN energy_consumers ON energy_production.consumer_id = energy_consumers.id;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select energy_producers.name as producer_name, energy_consumers.name as consumer_name, production_amount from energy_production join energy_producers on energy_production.producer_id = energy_producers.id join energy_consumers on energy_production.consumer_id = energy_consumers.id;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT energy_producers.name AS producer_name, energy_consumers.name AS consumer_name, production_amount FROM energy_production JOIN energy_producers ON energy_production.producer_id = energy_producers.id JOIN energy_consumers ON energy_production.consumer_id = energy_consumers.id;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select energy_producers.name as producer_name, energy_consumers.name as consumer_name, production_amount from energy_production join energy_producers on energy_production.producer_id = energy_producers.id join energy_consumers on energy_production.consumer_id = energy_consumers.id;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT energy_producers.name AS producer_name, energy_consumers.name AS consumer_name, production_amount FROM energy_production JOIN energy_producers ON energy_production.producer_id = energy_producers.id JOIN energy_consumers ON energy_production.consumer_id = energy_consumers.id;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select energy_producers.name as producer_name, energy_consumers.name as consumer_name, production_amount from energy_production join energy_producers on energy_production.producer_id = energy_producers.id join energy_consumers on energy_production.consumer_id = energy_consumers.id;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT energy_producers.name AS producer_name, energy_consumers.name AS consumer_name, production_amount FROM energy_production JOIN energy_producers ON energy_production.producer_id = energy_producers.id JOIN energy_consumers ON energy_production.consumer_id = energy_consumers.id;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select energy_producers.name as producer_name, energy_consumers.name as consumer_name, production_amount from energy_production join energy_producers on energy_production.producer_id = energy_producers.id join energy_consumers on energy_production.consumer_id = energy_consumers.id;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT production_date, SUM(production_amount) AS total_production FROM energy_production WHERE producer_id=1 GROUP BY production_date;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select production_date, sum(production_amount) as total_production from energy_production where producer_id=1 group by production_date;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT production_date, SUM(production_amount) AS total_production FROM energy_production WHERE producer_id=1 GROUP BY production_date;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select production_date, sum(production_amount) as total_production from energy_production where producer_id=1 group by production_date;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT production_date, SUM(production_amount) AS total_production FROM energy_production WHERE producer_id=1 GROUP BY production_date;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select production_date, sum(production_amount) as total_production from energy_production where producer_id=1 group by production_date;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT production_date, SUM(production_amount) AS total_production FROM energy_production WHERE producer_id=1 GROUP BY production_date;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select production_date, sum(production_amount) as total_production from energy_production where producer_id=1 group by production_date;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT production_date, SUM(production_amount) AS total_production FROM energy_production WHERE producer_id=1 GROUP BY production_date;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select production_date, sum(production_amount) as total_production from energy_production where producer_id=1 group by production_date;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT production_date, SUM(production_amount) AS total_production FROM energy_production WHERE producer_id=1 GROUP BY production_date;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select production_date, sum(production_amount) as total_production from energy_production where producer_id=1 group by production_date;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT producer_id, MONTH(production_date) AS month, SUM(production_amount) AS total_production FROM energy_production GROUP BY producer_id, month;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select producer_id, month(production_date) as month, sum(production_amount) as total_production from energy_production group by producer_id, month;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT producer_id, MONTH(production_date) AS month, SUM(production_amount) AS total_production FROM energy_production GROUP BY producer_id, month;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select producer_id, month(production_date) as month, sum(production_amount) as total_production from energy_production group by producer_id, month;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT producer_id, MONTH(production_date) AS month, SUM(production_amount) AS total_production FROM energy_production GROUP BY producer_id, month;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select producer_id, month(production_date) as month, sum(production_amount) as total_production from energy_production group by producer_id, month;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT producer_id, MONTH(production_date) AS month, SUM(production_amount) AS total_production FROM energy_production GROUP BY producer_id, month;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select producer_id, month(production_date) as month, sum(production_amount) as total_production from energy_production group by producer_id, month;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT producer_id, MONTH(production_date) AS month, SUM(production_amount) AS total_production FROM energy_production GROUP BY producer_id, month;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select producer_id, month(production_date) as month, sum(production_amount) as total_production from energy_production group by producer_id, month;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT producer_id, MONTH(production_date) AS month, SUM(production_amount) AS total_production FROM energy_production GROUP BY producer_id, month;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select producer_id, month(production_date) as month, sum(production_amount) as total_production from energy_production group by producer_id, month;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT producer_id, YEAR(production_date) AS year, SUM(production_amount) AS total_production FROM energy_production GROUP BY producer_id, year;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select producer_id, year(production_date) as year, sum(production_amount) as total_production from energy_production group by producer_id, year;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT producer_id, YEAR(production_date) AS year, SUM(production_amount) AS total_production FROM energy_production GROUP BY producer_id, year;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select producer_id, year(production_date) as year, sum(production_amount) as total_production from energy_production group by producer_id, year;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>SELECT producer_id, YEAR(production_date) AS year, SUM(production_amount) AS total_production FROM energy_production GROUP BY producer_id, year;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>select producer_id, year(production_date) as year, sum(production_amount) as total_production from energy_production group by producer_id, year;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT producer_id, YEAR(production_date) AS year, SUM(production_amount) AS total_production FROM energy_production GROUP BY producer_id, year;</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select producer_id, year(production_date) as year, sum(production_amount) as total_production from energy_production group by producer_id, year;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT producer_id, YEAR(production_date) AS year, SUM(production_amount) AS total_production FROM energy_production GROUP BY producer_id, year;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select producer_id, year(production_date) as year, sum(production_amount) as total_production from energy_production group by producer_id, year;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>SELECT producer_id, YEAR(production_date) AS year, SUM(production_amount) AS total_production FROM energy_production GROUP BY producer_id, year;</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>select producer_id, year(production_date) as year, sum(production_amount) as total_production from energy_production group by producer_id, year;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT * FROM customers</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select * from customers</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT * FROM customers</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select * from customers</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT * FROM customers</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select * from customers</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT * FROM customers</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select * from customers</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT * FROM customers</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select * from customers</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT * FROM customers</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select * from customers</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT * FROM customers</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select * from customers</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT * FROM customers</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select * from customers</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT * FROM customers</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select * from customers</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT * FROM customers</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select * from customers</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT * FROM customers</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select * from customers</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT * FROM customers</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select * from customers</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT * FROM customers</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select * from customers</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT * FROM customers</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select * from customers</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT * FROM customers</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select * from customers</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT * FROM customers</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select * from customers</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT * FROM customers</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select * from customers</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT * FROM customers</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select * from customers</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT * FROM customers</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select * from customers</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT * FROM customers</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select * from customers</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT * FROM customers</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select * from customers</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT * FROM customers</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select * from customers</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT * FROM customers</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select * from customers</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT * FROM customers</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select * from customers</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT customer_name, city, country FROM customers</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select customer_name, city, country from customers</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT customer_name, city, country FROM customers</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select customer_name, city, country from customers</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT customer_name, city, country FROM customers</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select customer_name, city, country from customers</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT customer_name, city, country FROM customers</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select customer_name, city, country from customers</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT customer_name, city, country FROM customers</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select customer_name, city, country from customers</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT customer_name, city, country FROM customers</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select customer_name, city, country from customers</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT customer_name, city, country FROM customers</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select customer_name, city, country from customers</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT customer_name, city, country FROM customers</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select customer_name, city, country from customers</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT customer_name, city, country FROM customers</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select customer_name, city, country from customers</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT customer_name, city, country FROM customers</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select customer_name, city, country from customers</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT customer_name, city, country FROM customers</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select customer_name, city, country from customers</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT customer_name, city, country FROM customers</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select customer_name, city, country from customers</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT customer_name, city, country FROM customers</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select customer_name, city, country from customers</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT customer_name, city, country FROM customers</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select customer_name, city, country from customers</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT customer_name, city, country FROM customers</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select customer_name, city, country from customers</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT customer_name, city, country FROM customers</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select customer_name, city, country from customers</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT customer_name, city, country FROM customers</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select customer_name, city, country from customers</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT customer_name, city, country FROM customers</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select customer_name, city, country from customers</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT customer_name, city, country FROM customers</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select customer_name, city, country from customers</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT customer_name, city, country FROM customers</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select customer_name, city, country from customers</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT customer_name, city, country FROM customers</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select customer_name, city, country from customers</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT customer_name, city, country FROM customers</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select customer_name, city, country from customers</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT customer_name, city, country FROM customers</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select customer_name, city, country from customers</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT customer_name, city, country FROM customers</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select customer_name, city, country from customers</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT * FROM supplies</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select * from supplies</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT * FROM supplies</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select * from supplies</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT * FROM supplies</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select * from supplies</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT * FROM supplies</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select * from supplies</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT * FROM supplies</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select * from supplies</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT * FROM supplies</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select * from supplies</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT * FROM supplies</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select * from supplies</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT * FROM supplies</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select * from supplies</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT * FROM supplies</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select * from supplies</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT * FROM supplies</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select * from supplies</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT * FROM supplies</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select * from supplies</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT * FROM supplies</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select * from supplies</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT * FROM supplies</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select * from supplies</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT * FROM supplies</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select * from supplies</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT * FROM supplies</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select * from supplies</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT * FROM supplies</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select * from supplies</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT * FROM supplies</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select * from supplies</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT * FROM supplies</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select * from supplies</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT * FROM supplies</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select * from supplies</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT * FROM supplies</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select * from supplies</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT * FROM supplies</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select * from supplies</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT * FROM supplies</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select * from supplies</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT * FROM supplies</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select * from supplies</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT * FROM supplies</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select * from supplies</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT supply_name, unit_price FROM supplies</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select supply_name, unit_price from supplies</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT supply_name, unit_price FROM supplies</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select supply_name, unit_price from supplies</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT supply_name, unit_price FROM supplies</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select supply_name, unit_price from supplies</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT supply_name, unit_price FROM supplies</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select supply_name, unit_price from supplies</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT supply_name, unit_price FROM supplies</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select supply_name, unit_price from supplies</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT supply_name, unit_price FROM supplies</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select supply_name, unit_price from supplies</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT supply_name, unit_price FROM supplies</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select supply_name, unit_price from supplies</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT supply_name, unit_price FROM supplies</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select supply_name, unit_price from supplies</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT supply_name, unit_price FROM supplies</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select supply_name, unit_price from supplies</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT supply_name, unit_price FROM supplies</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select supply_name, unit_price from supplies</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT supply_name, unit_price FROM supplies</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select supply_name, unit_price from supplies</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT supply_name, unit_price FROM supplies</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select supply_name, unit_price from supplies</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT supply_name, unit_price FROM supplies</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select supply_name, unit_price from supplies</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT supply_name, unit_price FROM supplies</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select supply_name, unit_price from supplies</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT supply_name, unit_price FROM supplies</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select supply_name, unit_price from supplies</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT supply_name, unit_price FROM supplies</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select supply_name, unit_price from supplies</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT supply_name, unit_price FROM supplies</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select supply_name, unit_price from supplies</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT supply_name, unit_price FROM supplies</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select supply_name, unit_price from supplies</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT supply_name, unit_price FROM supplies</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select supply_name, unit_price from supplies</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT supply_name, unit_price FROM supplies</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select supply_name, unit_price from supplies</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT supply_name, unit_price FROM supplies</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select supply_name, unit_price from supplies</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT supply_name, unit_price FROM supplies</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select supply_name, unit_price from supplies</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT supply_name, unit_price FROM supplies</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select supply_name, unit_price from supplies</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT supply_name, unit_price FROM supplies</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select supply_name, unit_price from supplies</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT * FROM products</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select * from products</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT * FROM products</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select * from products</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT * FROM products</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select * from products</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT * FROM products</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select * from products</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT * FROM products</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select * from products</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT * FROM products</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select * from products</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT * FROM products</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select * from products</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT * FROM products</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select * from products</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT * FROM products</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select * from products</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT * FROM products</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select * from products</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT * FROM products</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select * from products</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT * FROM products</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select * from products</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT * FROM products</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select * from products</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT * FROM products</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select * from products</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT * FROM products</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select * from products</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT * FROM products</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select * from products</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT * FROM products</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select * from products</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT * FROM products</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select * from products</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT * FROM products</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select * from products</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT * FROM products</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select * from products</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT * FROM products</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select * from products</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT * FROM products</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select * from products</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT * FROM products</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select * from products</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT * FROM products</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select * from products</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT product_name, category, price FROM products</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select product_name, category, price from products</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT product_name, category, price FROM products</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select product_name, category, price from products</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT product_name, category, price FROM products</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select product_name, category, price from products</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT product_name, category, price FROM products</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select product_name, category, price from products</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT product_name, category, price FROM products</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select product_name, category, price from products</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT product_name, category, price FROM products</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select product_name, category, price from products</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT product_name, category, price FROM products</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select product_name, category, price from products</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT product_name, category, price FROM products</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select product_name, category, price from products</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT product_name, category, price FROM products</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select product_name, category, price from products</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT product_name, category, price FROM products</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select product_name, category, price from products</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT product_name, category, price FROM products</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select product_name, category, price from products</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT product_name, category, price FROM products</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select product_name, category, price from products</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT product_name, category, price FROM products</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select product_name, category, price from products</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT product_name, category, price FROM products</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select product_name, category, price from products</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT product_name, category, price FROM products</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select product_name, category, price from products</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT product_name, category, price FROM products</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select product_name, category, price from products</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT product_name, category, price FROM products</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select product_name, category, price from products</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT product_name, category, price FROM products</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select product_name, category, price from products</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT product_name, category, price FROM products</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select product_name, category, price from products</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT product_name, category, price FROM products</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select product_name, category, price from products</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT product_name, category, price FROM products</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select product_name, category, price from products</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT product_name, category, price FROM products</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select product_name, category, price from products</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT product_name, category, price FROM products</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select product_name, category, price from products</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT product_name, category, price FROM products</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select product_name, category, price from products</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT * FROM orders</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select * from orders</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT * FROM orders</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select * from orders</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT * FROM orders</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select * from orders</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT * FROM orders</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select * from orders</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT * FROM orders</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select * from orders</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT * FROM orders</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select * from orders</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT * FROM orders</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select * from orders</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT * FROM orders</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select * from orders</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT * FROM orders</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select * from orders</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT * FROM orders</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select * from orders</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT * FROM orders</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select * from orders</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT * FROM orders</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select * from orders</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT * FROM orders</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select * from orders</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT * FROM orders</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select * from orders</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT * FROM orders</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select * from orders</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT * FROM orders</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select * from orders</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT * FROM orders</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select * from orders</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT * FROM orders</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select * from orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT * FROM orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select * from orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT * FROM orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select * from orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT * FROM orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select * from orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT * FROM orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select * from orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT * FROM orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select * from orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT * FROM orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select * from orders</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT order_date, customer_id, product_id, quantity FROM orders</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select order_date, customer_id, product_id, quantity from orders</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT order_date, customer_id, product_id, quantity FROM orders</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select order_date, customer_id, product_id, quantity from orders</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT order_date, customer_id, product_id, quantity FROM orders</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select order_date, customer_id, product_id, quantity from orders</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT order_date, customer_id, product_id, quantity FROM orders</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select order_date, customer_id, product_id, quantity from orders</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT order_date, customer_id, product_id, quantity FROM orders</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select order_date, customer_id, product_id, quantity from orders</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT order_date, customer_id, product_id, quantity FROM orders</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select order_date, customer_id, product_id, quantity from orders</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT order_date, customer_id, product_id, quantity FROM orders</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select order_date, customer_id, product_id, quantity from orders</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT order_date, customer_id, product_id, quantity FROM orders</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select order_date, customer_id, product_id, quantity from orders</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT order_date, customer_id, product_id, quantity FROM orders</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select order_date, customer_id, product_id, quantity from orders</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT order_date, customer_id, product_id, quantity FROM orders</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select order_date, customer_id, product_id, quantity from orders</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT order_date, customer_id, product_id, quantity FROM orders</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select order_date, customer_id, product_id, quantity from orders</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT order_date, customer_id, product_id, quantity FROM orders</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select order_date, customer_id, product_id, quantity from orders</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT order_date, customer_id, product_id, quantity FROM orders</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select order_date, customer_id, product_id, quantity from orders</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT order_date, customer_id, product_id, quantity FROM orders</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select order_date, customer_id, product_id, quantity from orders</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT order_date, customer_id, product_id, quantity FROM orders</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select order_date, customer_id, product_id, quantity from orders</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT order_date, customer_id, product_id, quantity FROM orders</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select order_date, customer_id, product_id, quantity from orders</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT order_date, customer_id, product_id, quantity FROM orders</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select order_date, customer_id, product_id, quantity from orders</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT order_date, customer_id, product_id, quantity FROM orders</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select order_date, customer_id, product_id, quantity from orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT order_date, customer_id, product_id, quantity FROM orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select order_date, customer_id, product_id, quantity from orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT order_date, customer_id, product_id, quantity FROM orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select order_date, customer_id, product_id, quantity from orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT order_date, customer_id, product_id, quantity FROM orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select order_date, customer_id, product_id, quantity from orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT order_date, customer_id, product_id, quantity FROM orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select order_date, customer_id, product_id, quantity from orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT order_date, customer_id, product_id, quantity FROM orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select order_date, customer_id, product_id, quantity from orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT order_date, customer_id, product_id, quantity FROM orders</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select order_date, customer_id, product_id, quantity from orders</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT c.customer_name, p.product_name, o.quantity FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select c.customer_name, p.product_name, o.quantity from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT c.customer_name, p.product_name, o.quantity FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select c.customer_name, p.product_name, o.quantity from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT c.customer_name, p.product_name, o.quantity FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select c.customer_name, p.product_name, o.quantity from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT c.customer_name, p.product_name, o.quantity FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select c.customer_name, p.product_name, o.quantity from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT c.customer_name, p.product_name, o.quantity FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select c.customer_name, p.product_name, o.quantity from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT c.customer_name, p.product_name, o.quantity FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select c.customer_name, p.product_name, o.quantity from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT c.customer_name, p.product_name, o.quantity FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select c.customer_name, p.product_name, o.quantity from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT c.customer_name, p.product_name, o.quantity FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select c.customer_name, p.product_name, o.quantity from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT c.customer_name, p.product_name, o.quantity FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select c.customer_name, p.product_name, o.quantity from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT c.customer_name, p.product_name, o.quantity FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select c.customer_name, p.product_name, o.quantity from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT c.customer_name, p.product_name, o.quantity FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select c.customer_name, p.product_name, o.quantity from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT c.customer_name, p.product_name, o.quantity FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select c.customer_name, p.product_name, o.quantity from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT c.customer_name, p.product_name, o.quantity FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select c.customer_name, p.product_name, o.quantity from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT c.customer_name, p.product_name, o.quantity FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select c.customer_name, p.product_name, o.quantity from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT c.customer_name, p.product_name, o.quantity FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select c.customer_name, p.product_name, o.quantity from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT c.customer_name, p.product_name, o.quantity FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select c.customer_name, p.product_name, o.quantity from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT c.customer_name, p.product_name, o.quantity FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select c.customer_name, p.product_name, o.quantity from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT c.customer_name, p.product_name, o.quantity FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select c.customer_name, p.product_name, o.quantity from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT c.customer_name, p.product_name, o.quantity FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select c.customer_name, p.product_name, o.quantity from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT c.customer_name, p.product_name, o.quantity FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select c.customer_name, p.product_name, o.quantity from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT c.customer_name, p.product_name, o.quantity FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select c.customer_name, p.product_name, o.quantity from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT c.customer_name, p.product_name, o.quantity FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select c.customer_name, p.product_name, o.quantity from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT c.customer_name, p.product_name, o.quantity FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select c.customer_name, p.product_name, o.quantity from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT c.customer_name, p.product_name, o.quantity FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select c.customer_name, p.product_name, o.quantity from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT s.supply_name, p.product_name, o.quantity FROM supplies s JOIN products p ON s.supply_id = p.supply_id JOIN orders o ON p.product_id = o.product_id LIMIT 5</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select s.supply_name, p.product_name, o.quantity from supplies s join products p on s.supply_id = p.supply_id join orders o on p.product_id = o.product_id limit 5</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT s.supply_name, p.product_name, o.quantity FROM supplies s JOIN products p ON s.supply_id = p.supply_id JOIN orders o ON p.product_id = o.product_id LIMIT 5</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select s.supply_name, p.product_name, o.quantity from supplies s join products p on s.supply_id = p.supply_id join orders o on p.product_id = o.product_id limit 5</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT s.supply_name, p.product_name, o.quantity FROM supplies s JOIN products p ON s.supply_id = p.supply_id JOIN orders o ON p.product_id = o.product_id LIMIT 5</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select s.supply_name, p.product_name, o.quantity from supplies s join products p on s.supply_id = p.supply_id join orders o on p.product_id = o.product_id limit 5</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT s.supply_name, p.product_name, o.quantity FROM supplies s JOIN products p ON s.supply_id = p.supply_id JOIN orders o ON p.product_id = o.product_id LIMIT 5</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select s.supply_name, p.product_name, o.quantity from supplies s join products p on s.supply_id = p.supply_id join orders o on p.product_id = o.product_id limit 5</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT s.supply_name, p.product_name, o.quantity FROM supplies s JOIN products p ON s.supply_id = p.supply_id JOIN orders o ON p.product_id = o.product_id LIMIT 5</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select s.supply_name, p.product_name, o.quantity from supplies s join products p on s.supply_id = p.supply_id join orders o on p.product_id = o.product_id limit 5</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT s.supply_name, p.product_name, o.quantity FROM supplies s JOIN products p ON s.supply_id = p.supply_id JOIN orders o ON p.product_id = o.product_id LIMIT 5</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select s.supply_name, p.product_name, o.quantity from supplies s join products p on s.supply_id = p.supply_id join orders o on p.product_id = o.product_id limit 5</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT s.supply_name, p.product_name, o.quantity FROM supplies s JOIN products p ON s.supply_id = p.supply_id JOIN orders o ON p.product_id = o.product_id LIMIT 5</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select s.supply_name, p.product_name, o.quantity from supplies s join products p on s.supply_id = p.supply_id join orders o on p.product_id = o.product_id limit 5</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT s.supply_name, p.product_name, o.quantity FROM supplies s JOIN products p ON s.supply_id = p.supply_id JOIN orders o ON p.product_id = o.product_id LIMIT 5</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select s.supply_name, p.product_name, o.quantity from supplies s join products p on s.supply_id = p.supply_id join orders o on p.product_id = o.product_id limit 5</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT s.supply_name, p.product_name, o.quantity FROM supplies s JOIN products p ON s.supply_id = p.supply_id JOIN orders o ON p.product_id = o.product_id LIMIT 5</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select s.supply_name, p.product_name, o.quantity from supplies s join products p on s.supply_id = p.supply_id join orders o on p.product_id = o.product_id limit 5</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT s.supply_name, p.product_name, o.quantity FROM supplies s JOIN products p ON s.supply_id = p.supply_id JOIN orders o ON p.product_id = o.product_id LIMIT 5</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select s.supply_name, p.product_name, o.quantity from supplies s join products p on s.supply_id = p.supply_id join orders o on p.product_id = o.product_id limit 5</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT s.supply_name, p.product_name, o.quantity FROM supplies s JOIN products p ON s.supply_id = p.supply_id JOIN orders o ON p.product_id = o.product_id LIMIT 5</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select s.supply_name, p.product_name, o.quantity from supplies s join products p on s.supply_id = p.supply_id join orders o on p.product_id = o.product_id limit 5</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT s.supply_name, p.product_name, o.quantity FROM supplies s JOIN products p ON s.supply_id = p.supply_id JOIN orders o ON p.product_id = o.product_id LIMIT 5</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select s.supply_name, p.product_name, o.quantity from supplies s join products p on s.supply_id = p.supply_id join orders o on p.product_id = o.product_id limit 5</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT s.supply_name, p.product_name, o.quantity FROM supplies s JOIN products p ON s.supply_id = p.supply_id JOIN orders o ON p.product_id = o.product_id LIMIT 5</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select s.supply_name, p.product_name, o.quantity from supplies s join products p on s.supply_id = p.supply_id join orders o on p.product_id = o.product_id limit 5</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT s.supply_name, p.product_name, o.quantity FROM supplies s JOIN products p ON s.supply_id = p.supply_id JOIN orders o ON p.product_id = o.product_id LIMIT 5</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select s.supply_name, p.product_name, o.quantity from supplies s join products p on s.supply_id = p.supply_id join orders o on p.product_id = o.product_id limit 5</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT s.supply_name, p.product_name, o.quantity FROM supplies s JOIN products p ON s.supply_id = p.supply_id JOIN orders o ON p.product_id = o.product_id LIMIT 5</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select s.supply_name, p.product_name, o.quantity from supplies s join products p on s.supply_id = p.supply_id join orders o on p.product_id = o.product_id limit 5</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT s.supply_name, p.product_name, o.quantity FROM supplies s JOIN products p ON s.supply_id = p.supply_id JOIN orders o ON p.product_id = o.product_id LIMIT 5</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select s.supply_name, p.product_name, o.quantity from supplies s join products p on s.supply_id = p.supply_id join orders o on p.product_id = o.product_id limit 5</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT s.supply_name, p.product_name, o.quantity FROM supplies s JOIN products p ON s.supply_id = p.supply_id JOIN orders o ON p.product_id = o.product_id LIMIT 5</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select s.supply_name, p.product_name, o.quantity from supplies s join products p on s.supply_id = p.supply_id join orders o on p.product_id = o.product_id limit 5</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT s.supply_name, p.product_name, o.quantity FROM supplies s JOIN products p ON s.supply_id = p.supply_id JOIN orders o ON p.product_id = o.product_id LIMIT 5</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select s.supply_name, p.product_name, o.quantity from supplies s join products p on s.supply_id = p.supply_id join orders o on p.product_id = o.product_id limit 5</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT s.supply_name, p.product_name, o.quantity FROM supplies s JOIN products p ON s.supply_id = p.supply_id JOIN orders o ON p.product_id = o.product_id LIMIT 5</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select s.supply_name, p.product_name, o.quantity from supplies s join products p on s.supply_id = p.supply_id join orders o on p.product_id = o.product_id limit 5</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT s.supply_name, p.product_name, o.quantity FROM supplies s JOIN products p ON s.supply_id = p.supply_id JOIN orders o ON p.product_id = o.product_id LIMIT 5</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select s.supply_name, p.product_name, o.quantity from supplies s join products p on s.supply_id = p.supply_id join orders o on p.product_id = o.product_id limit 5</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT s.supply_name, p.product_name, o.quantity FROM supplies s JOIN products p ON s.supply_id = p.supply_id JOIN orders o ON p.product_id = o.product_id LIMIT 5</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select s.supply_name, p.product_name, o.quantity from supplies s join products p on s.supply_id = p.supply_id join orders o on p.product_id = o.product_id limit 5</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT s.supply_name, p.product_name, o.quantity FROM supplies s JOIN products p ON s.supply_id = p.supply_id JOIN orders o ON p.product_id = o.product_id LIMIT 5</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select s.supply_name, p.product_name, o.quantity from supplies s join products p on s.supply_id = p.supply_id join orders o on p.product_id = o.product_id limit 5</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT s.supply_name, p.product_name, o.quantity FROM supplies s JOIN products p ON s.supply_id = p.supply_id JOIN orders o ON p.product_id = o.product_id LIMIT 5</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select s.supply_name, p.product_name, o.quantity from supplies s join products p on s.supply_id = p.supply_id join orders o on p.product_id = o.product_id limit 5</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT s.supply_name, p.product_name, o.quantity FROM supplies s JOIN products p ON s.supply_id = p.supply_id JOIN orders o ON p.product_id = o.product_id LIMIT 5</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select s.supply_name, p.product_name, o.quantity from supplies s join products p on s.supply_id = p.supply_id join orders o on p.product_id = o.product_id limit 5</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT c.customer_name, p.product_name, o.quantity, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id ORDER BY o.order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select c.customer_name, p.product_name, o.quantity, o.order_date from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id order by o.order_date desc limit 10</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT c.customer_name, p.product_name, o.quantity, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id ORDER BY o.order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select c.customer_name, p.product_name, o.quantity, o.order_date from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id order by o.order_date desc limit 10</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT c.customer_name, p.product_name, o.quantity, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id ORDER BY o.order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select c.customer_name, p.product_name, o.quantity, o.order_date from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id order by o.order_date desc limit 10</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT c.customer_name, p.product_name, o.quantity, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id ORDER BY o.order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select c.customer_name, p.product_name, o.quantity, o.order_date from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id order by o.order_date desc limit 10</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT c.customer_name, p.product_name, o.quantity, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id ORDER BY o.order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select c.customer_name, p.product_name, o.quantity, o.order_date from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id order by o.order_date desc limit 10</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT c.customer_name, p.product_name, o.quantity, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id ORDER BY o.order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select c.customer_name, p.product_name, o.quantity, o.order_date from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id order by o.order_date desc limit 10</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT c.customer_name, p.product_name, o.quantity, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id ORDER BY o.order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select c.customer_name, p.product_name, o.quantity, o.order_date from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id order by o.order_date desc limit 10</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT c.customer_name, p.product_name, o.quantity, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id ORDER BY o.order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select c.customer_name, p.product_name, o.quantity, o.order_date from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id order by o.order_date desc limit 10</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT c.customer_name, p.product_name, o.quantity, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id ORDER BY o.order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select c.customer_name, p.product_name, o.quantity, o.order_date from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id order by o.order_date desc limit 10</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT c.customer_name, p.product_name, o.quantity, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id ORDER BY o.order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select c.customer_name, p.product_name, o.quantity, o.order_date from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id order by o.order_date desc limit 10</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT c.customer_name, p.product_name, o.quantity, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id ORDER BY o.order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select c.customer_name, p.product_name, o.quantity, o.order_date from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id order by o.order_date desc limit 10</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT c.customer_name, p.product_name, o.quantity, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id ORDER BY o.order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select c.customer_name, p.product_name, o.quantity, o.order_date from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id order by o.order_date desc limit 10</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT c.customer_name, p.product_name, o.quantity, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id ORDER BY o.order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select c.customer_name, p.product_name, o.quantity, o.order_date from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id order by o.order_date desc limit 10</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT c.customer_name, p.product_name, o.quantity, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id ORDER BY o.order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select c.customer_name, p.product_name, o.quantity, o.order_date from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id order by o.order_date desc limit 10</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT c.customer_name, p.product_name, o.quantity, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id ORDER BY o.order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select c.customer_name, p.product_name, o.quantity, o.order_date from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id order by o.order_date desc limit 10</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT c.customer_name, p.product_name, o.quantity, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id ORDER BY o.order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select c.customer_name, p.product_name, o.quantity, o.order_date from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id order by o.order_date desc limit 10</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT c.customer_name, p.product_name, o.quantity, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id ORDER BY o.order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select c.customer_name, p.product_name, o.quantity, o.order_date from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id order by o.order_date desc limit 10</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT c.customer_name, p.product_name, o.quantity, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id ORDER BY o.order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select c.customer_name, p.product_name, o.quantity, o.order_date from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id order by o.order_date desc limit 10</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT c.customer_name, p.product_name, o.quantity, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id ORDER BY o.order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select c.customer_name, p.product_name, o.quantity, o.order_date from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id order by o.order_date desc limit 10</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT c.customer_name, p.product_name, o.quantity, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id ORDER BY o.order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select c.customer_name, p.product_name, o.quantity, o.order_date from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id order by o.order_date desc limit 10</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT c.customer_name, p.product_name, o.quantity, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id ORDER BY o.order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select c.customer_name, p.product_name, o.quantity, o.order_date from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id order by o.order_date desc limit 10</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT c.customer_name, p.product_name, o.quantity, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id ORDER BY o.order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select c.customer_name, p.product_name, o.quantity, o.order_date from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id order by o.order_date desc limit 10</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT c.customer_name, p.product_name, o.quantity, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id ORDER BY o.order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select c.customer_name, p.product_name, o.quantity, o.order_date from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id order by o.order_date desc limit 10</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT c.customer_name, p.product_name, o.quantity, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN products p ON o.product_id = p.product_id ORDER BY o.order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select c.customer_name, p.product_name, o.quantity, o.order_date from customers c join orders o on c.customer_id = o.customer_id join products p on o.product_id = p.product_id order by o.order_date desc limit 10</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT c.customer_name, SUM(o.quantity) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select c.customer_name, sum(o.quantity) as total_orders from customers c join orders o on c.customer_id = o.customer_id group by c.customer_name order by total_orders desc</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT c.customer_name, SUM(o.quantity) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select c.customer_name, sum(o.quantity) as total_orders from customers c join orders o on c.customer_id = o.customer_id group by c.customer_name order by total_orders desc</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT c.customer_name, SUM(o.quantity) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select c.customer_name, sum(o.quantity) as total_orders from customers c join orders o on c.customer_id = o.customer_id group by c.customer_name order by total_orders desc</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT c.customer_name, SUM(o.quantity) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select c.customer_name, sum(o.quantity) as total_orders from customers c join orders o on c.customer_id = o.customer_id group by c.customer_name order by total_orders desc</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT c.customer_name, SUM(o.quantity) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select c.customer_name, sum(o.quantity) as total_orders from customers c join orders o on c.customer_id = o.customer_id group by c.customer_name order by total_orders desc</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT c.customer_name, SUM(o.quantity) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select c.customer_name, sum(o.quantity) as total_orders from customers c join orders o on c.customer_id = o.customer_id group by c.customer_name order by total_orders desc</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT c.customer_name, SUM(o.quantity) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select c.customer_name, sum(o.quantity) as total_orders from customers c join orders o on c.customer_id = o.customer_id group by c.customer_name order by total_orders desc</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT c.customer_name, SUM(o.quantity) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select c.customer_name, sum(o.quantity) as total_orders from customers c join orders o on c.customer_id = o.customer_id group by c.customer_name order by total_orders desc</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT c.customer_name, SUM(o.quantity) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select c.customer_name, sum(o.quantity) as total_orders from customers c join orders o on c.customer_id = o.customer_id group by c.customer_name order by total_orders desc</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT c.customer_name, SUM(o.quantity) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select c.customer_name, sum(o.quantity) as total_orders from customers c join orders o on c.customer_id = o.customer_id group by c.customer_name order by total_orders desc</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT c.customer_name, SUM(o.quantity) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select c.customer_name, sum(o.quantity) as total_orders from customers c join orders o on c.customer_id = o.customer_id group by c.customer_name order by total_orders desc</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT c.customer_name, SUM(o.quantity) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select c.customer_name, sum(o.quantity) as total_orders from customers c join orders o on c.customer_id = o.customer_id group by c.customer_name order by total_orders desc</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT c.customer_name, SUM(o.quantity) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select c.customer_name, sum(o.quantity) as total_orders from customers c join orders o on c.customer_id = o.customer_id group by c.customer_name order by total_orders desc</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT c.customer_name, SUM(o.quantity) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select c.customer_name, sum(o.quantity) as total_orders from customers c join orders o on c.customer_id = o.customer_id group by c.customer_name order by total_orders desc</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT c.customer_name, SUM(o.quantity) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select c.customer_name, sum(o.quantity) as total_orders from customers c join orders o on c.customer_id = o.customer_id group by c.customer_name order by total_orders desc</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT c.customer_name, SUM(o.quantity) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select c.customer_name, sum(o.quantity) as total_orders from customers c join orders o on c.customer_id = o.customer_id group by c.customer_name order by total_orders desc</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT c.customer_name, SUM(o.quantity) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select c.customer_name, sum(o.quantity) as total_orders from customers c join orders o on c.customer_id = o.customer_id group by c.customer_name order by total_orders desc</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT c.customer_name, SUM(o.quantity) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select c.customer_name, sum(o.quantity) as total_orders from customers c join orders o on c.customer_id = o.customer_id group by c.customer_name order by total_orders desc</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT c.customer_name, SUM(o.quantity) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select c.customer_name, sum(o.quantity) as total_orders from customers c join orders o on c.customer_id = o.customer_id group by c.customer_name order by total_orders desc</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT c.customer_name, SUM(o.quantity) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select c.customer_name, sum(o.quantity) as total_orders from customers c join orders o on c.customer_id = o.customer_id group by c.customer_name order by total_orders desc</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT c.customer_name, SUM(o.quantity) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select c.customer_name, sum(o.quantity) as total_orders from customers c join orders o on c.customer_id = o.customer_id group by c.customer_name order by total_orders desc</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT c.customer_name, SUM(o.quantity) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select c.customer_name, sum(o.quantity) as total_orders from customers c join orders o on c.customer_id = o.customer_id group by c.customer_name order by total_orders desc</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT c.customer_name, SUM(o.quantity) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select c.customer_name, sum(o.quantity) as total_orders from customers c join orders o on c.customer_id = o.customer_id group by c.customer_name order by total_orders desc</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT c.customer_name, SUM(o.quantity) AS total_orders FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_name ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select c.customer_name, sum(o.quantity) as total_orders from customers c join orders o on c.customer_id = o.customer_id group by c.customer_name order by total_orders desc</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT s.supply_name, AVG(p.price) AS avg_price FROM supplies s JOIN products p ON s.supply_id = p.supply_id GROUP BY s.supply_name ORDER BY avg_price DESC</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select s.supply_name, avg(p.price) as avg_price from supplies s join products p on s.supply_id = p.supply_id group by s.supply_name order by avg_price desc</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT s.supply_name, AVG(p.price) AS avg_price FROM supplies s JOIN products p ON s.supply_id = p.supply_id GROUP BY s.supply_name ORDER BY avg_price DESC</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select s.supply_name, avg(p.price) as avg_price from supplies s join products p on s.supply_id = p.supply_id group by s.supply_name order by avg_price desc</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT s.supply_name, AVG(p.price) AS avg_price FROM supplies s JOIN products p ON s.supply_id = p.supply_id GROUP BY s.supply_name ORDER BY avg_price DESC</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select s.supply_name, avg(p.price) as avg_price from supplies s join products p on s.supply_id = p.supply_id group by s.supply_name order by avg_price desc</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT s.supply_name, AVG(p.price) AS avg_price FROM supplies s JOIN products p ON s.supply_id = p.supply_id GROUP BY s.supply_name ORDER BY avg_price DESC</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select s.supply_name, avg(p.price) as avg_price from supplies s join products p on s.supply_id = p.supply_id group by s.supply_name order by avg_price desc</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT s.supply_name, AVG(p.price) AS avg_price FROM supplies s JOIN products p ON s.supply_id = p.supply_id GROUP BY s.supply_name ORDER BY avg_price DESC</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select s.supply_name, avg(p.price) as avg_price from supplies s join products p on s.supply_id = p.supply_id group by s.supply_name order by avg_price desc</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT s.supply_name, AVG(p.price) AS avg_price FROM supplies s JOIN products p ON s.supply_id = p.supply_id GROUP BY s.supply_name ORDER BY avg_price DESC</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select s.supply_name, avg(p.price) as avg_price from supplies s join products p on s.supply_id = p.supply_id group by s.supply_name order by avg_price desc</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT s.supply_name, AVG(p.price) AS avg_price FROM supplies s JOIN products p ON s.supply_id = p.supply_id GROUP BY s.supply_name ORDER BY avg_price DESC</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select s.supply_name, avg(p.price) as avg_price from supplies s join products p on s.supply_id = p.supply_id group by s.supply_name order by avg_price desc</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT s.supply_name, AVG(p.price) AS avg_price FROM supplies s JOIN products p ON s.supply_id = p.supply_id GROUP BY s.supply_name ORDER BY avg_price DESC</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select s.supply_name, avg(p.price) as avg_price from supplies s join products p on s.supply_id = p.supply_id group by s.supply_name order by avg_price desc</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT s.supply_name, AVG(p.price) AS avg_price FROM supplies s JOIN products p ON s.supply_id = p.supply_id GROUP BY s.supply_name ORDER BY avg_price DESC</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select s.supply_name, avg(p.price) as avg_price from supplies s join products p on s.supply_id = p.supply_id group by s.supply_name order by avg_price desc</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT s.supply_name, AVG(p.price) AS avg_price FROM supplies s JOIN products p ON s.supply_id = p.supply_id GROUP BY s.supply_name ORDER BY avg_price DESC</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select s.supply_name, avg(p.price) as avg_price from supplies s join products p on s.supply_id = p.supply_id group by s.supply_name order by avg_price desc</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT s.supply_name, AVG(p.price) AS avg_price FROM supplies s JOIN products p ON s.supply_id = p.supply_id GROUP BY s.supply_name ORDER BY avg_price DESC</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select s.supply_name, avg(p.price) as avg_price from supplies s join products p on s.supply_id = p.supply_id group by s.supply_name order by avg_price desc</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT s.supply_name, AVG(p.price) AS avg_price FROM supplies s JOIN products p ON s.supply_id = p.supply_id GROUP BY s.supply_name ORDER BY avg_price DESC</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select s.supply_name, avg(p.price) as avg_price from supplies s join products p on s.supply_id = p.supply_id group by s.supply_name order by avg_price desc</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT s.supply_name, AVG(p.price) AS avg_price FROM supplies s JOIN products p ON s.supply_id = p.supply_id GROUP BY s.supply_name ORDER BY avg_price DESC</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select s.supply_name, avg(p.price) as avg_price from supplies s join products p on s.supply_id = p.supply_id group by s.supply_name order by avg_price desc</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT s.supply_name, AVG(p.price) AS avg_price FROM supplies s JOIN products p ON s.supply_id = p.supply_id GROUP BY s.supply_name ORDER BY avg_price DESC</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select s.supply_name, avg(p.price) as avg_price from supplies s join products p on s.supply_id = p.supply_id group by s.supply_name order by avg_price desc</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT s.supply_name, AVG(p.price) AS avg_price FROM supplies s JOIN products p ON s.supply_id = p.supply_id GROUP BY s.supply_name ORDER BY avg_price DESC</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select s.supply_name, avg(p.price) as avg_price from supplies s join products p on s.supply_id = p.supply_id group by s.supply_name order by avg_price desc</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT s.supply_name, AVG(p.price) AS avg_price FROM supplies s JOIN products p ON s.supply_id = p.supply_id GROUP BY s.supply_name ORDER BY avg_price DESC</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select s.supply_name, avg(p.price) as avg_price from supplies s join products p on s.supply_id = p.supply_id group by s.supply_name order by avg_price desc</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT s.supply_name, AVG(p.price) AS avg_price FROM supplies s JOIN products p ON s.supply_id = p.supply_id GROUP BY s.supply_name ORDER BY avg_price DESC</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select s.supply_name, avg(p.price) as avg_price from supplies s join products p on s.supply_id = p.supply_id group by s.supply_name order by avg_price desc</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT s.supply_name, AVG(p.price) AS avg_price FROM supplies s JOIN products p ON s.supply_id = p.supply_id GROUP BY s.supply_name ORDER BY avg_price DESC</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select s.supply_name, avg(p.price) as avg_price from supplies s join products p on s.supply_id = p.supply_id group by s.supply_name order by avg_price desc</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT s.supply_name, AVG(p.price) AS avg_price FROM supplies s JOIN products p ON s.supply_id = p.supply_id GROUP BY s.supply_name ORDER BY avg_price DESC</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select s.supply_name, avg(p.price) as avg_price from supplies s join products p on s.supply_id = p.supply_id group by s.supply_name order by avg_price desc</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT s.supply_name, AVG(p.price) AS avg_price FROM supplies s JOIN products p ON s.supply_id = p.supply_id GROUP BY s.supply_name ORDER BY avg_price DESC</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select s.supply_name, avg(p.price) as avg_price from supplies s join products p on s.supply_id = p.supply_id group by s.supply_name order by avg_price desc</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT s.supply_name, AVG(p.price) AS avg_price FROM supplies s JOIN products p ON s.supply_id = p.supply_id GROUP BY s.supply_name ORDER BY avg_price DESC</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select s.supply_name, avg(p.price) as avg_price from supplies s join products p on s.supply_id = p.supply_id group by s.supply_name order by avg_price desc</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT s.supply_name, AVG(p.price) AS avg_price FROM supplies s JOIN products p ON s.supply_id = p.supply_id GROUP BY s.supply_name ORDER BY avg_price DESC</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select s.supply_name, avg(p.price) as avg_price from supplies s join products p on s.supply_id = p.supply_id group by s.supply_name order by avg_price desc</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT s.supply_name, AVG(p.price) AS avg_price FROM supplies s JOIN products p ON s.supply_id = p.supply_id GROUP BY s.supply_name ORDER BY avg_price DESC</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select s.supply_name, avg(p.price) as avg_price from supplies s join products p on s.supply_id = p.supply_id group by s.supply_name order by avg_price desc</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT s.supply_name, AVG(p.price) AS avg_price FROM supplies s JOIN products p ON s.supply_id = p.supply_id GROUP BY s.supply_name ORDER BY avg_price DESC</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select s.supply_name, avg(p.price) as avg_price from supplies s join products p on s.supply_id = p.supply_id group by s.supply_name order by avg_price desc</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT customer_name, city, country, COUNT(*) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name, city, country ORDER BY total_orders DESC LIMIT 5</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select customer_name, city, country, count(*) as total_orders from customers join orders on customers.customer_id = orders.customer_id group by customer_name, city, country order by total_orders desc limit 5</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT customer_name, city, country, COUNT(*) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name, city, country ORDER BY total_orders DESC LIMIT 5</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select customer_name, city, country, count(*) as total_orders from customers join orders on customers.customer_id = orders.customer_id group by customer_name, city, country order by total_orders desc limit 5</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT customer_name, city, country, COUNT(*) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name, city, country ORDER BY total_orders DESC LIMIT 5</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select customer_name, city, country, count(*) as total_orders from customers join orders on customers.customer_id = orders.customer_id group by customer_name, city, country order by total_orders desc limit 5</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT customer_name, city, country, COUNT(*) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name, city, country ORDER BY total_orders DESC LIMIT 5</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select customer_name, city, country, count(*) as total_orders from customers join orders on customers.customer_id = orders.customer_id group by customer_name, city, country order by total_orders desc limit 5</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT customer_name, city, country, COUNT(*) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name, city, country ORDER BY total_orders DESC LIMIT 5</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select customer_name, city, country, count(*) as total_orders from customers join orders on customers.customer_id = orders.customer_id group by customer_name, city, country order by total_orders desc limit 5</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT customer_name, city, country, COUNT(*) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name, city, country ORDER BY total_orders DESC LIMIT 5</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select customer_name, city, country, count(*) as total_orders from customers join orders on customers.customer_id = orders.customer_id group by customer_name, city, country order by total_orders desc limit 5</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT customer_name, city, country, COUNT(*) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name, city, country ORDER BY total_orders DESC LIMIT 5</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select customer_name, city, country, count(*) as total_orders from customers join orders on customers.customer_id = orders.customer_id group by customer_name, city, country order by total_orders desc limit 5</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT customer_name, city, country, COUNT(*) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name, city, country ORDER BY total_orders DESC LIMIT 5</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select customer_name, city, country, count(*) as total_orders from customers join orders on customers.customer_id = orders.customer_id group by customer_name, city, country order by total_orders desc limit 5</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT customer_name, city, country, COUNT(*) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name, city, country ORDER BY total_orders DESC LIMIT 5</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select customer_name, city, country, count(*) as total_orders from customers join orders on customers.customer_id = orders.customer_id group by customer_name, city, country order by total_orders desc limit 5</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT customer_name, city, country, COUNT(*) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name, city, country ORDER BY total_orders DESC LIMIT 5</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select customer_name, city, country, count(*) as total_orders from customers join orders on customers.customer_id = orders.customer_id group by customer_name, city, country order by total_orders desc limit 5</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT customer_name, city, country, COUNT(*) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name, city, country ORDER BY total_orders DESC LIMIT 5</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select customer_name, city, country, count(*) as total_orders from customers join orders on customers.customer_id = orders.customer_id group by customer_name, city, country order by total_orders desc limit 5</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT customer_name, city, country, COUNT(*) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name, city, country ORDER BY total_orders DESC LIMIT 5</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select customer_name, city, country, count(*) as total_orders from customers join orders on customers.customer_id = orders.customer_id group by customer_name, city, country order by total_orders desc limit 5</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT customer_name, city, country, COUNT(*) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name, city, country ORDER BY total_orders DESC LIMIT 5</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select customer_name, city, country, count(*) as total_orders from customers join orders on customers.customer_id = orders.customer_id group by customer_name, city, country order by total_orders desc limit 5</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT customer_name, city, country, COUNT(*) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name, city, country ORDER BY total_orders DESC LIMIT 5</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select customer_name, city, country, count(*) as total_orders from customers join orders on customers.customer_id = orders.customer_id group by customer_name, city, country order by total_orders desc limit 5</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT customer_name, city, country, COUNT(*) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name, city, country ORDER BY total_orders DESC LIMIT 5</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select customer_name, city, country, count(*) as total_orders from customers join orders on customers.customer_id = orders.customer_id group by customer_name, city, country order by total_orders desc limit 5</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT customer_name, city, country, COUNT(*) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name, city, country ORDER BY total_orders DESC LIMIT 5</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select customer_name, city, country, count(*) as total_orders from customers join orders on customers.customer_id = orders.customer_id group by customer_name, city, country order by total_orders desc limit 5</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT customer_name, city, country, COUNT(*) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name, city, country ORDER BY total_orders DESC LIMIT 5</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select customer_name, city, country, count(*) as total_orders from customers join orders on customers.customer_id = orders.customer_id group by customer_name, city, country order by total_orders desc limit 5</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT customer_name, city, country, COUNT(*) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name, city, country ORDER BY total_orders DESC LIMIT 5</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select customer_name, city, country, count(*) as total_orders from customers join orders on customers.customer_id = orders.customer_id group by customer_name, city, country order by total_orders desc limit 5</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT customer_name, city, country, COUNT(*) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name, city, country ORDER BY total_orders DESC LIMIT 5</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select customer_name, city, country, count(*) as total_orders from customers join orders on customers.customer_id = orders.customer_id group by customer_name, city, country order by total_orders desc limit 5</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT customer_name, city, country, COUNT(*) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name, city, country ORDER BY total_orders DESC LIMIT 5</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select customer_name, city, country, count(*) as total_orders from customers join orders on customers.customer_id = orders.customer_id group by customer_name, city, country order by total_orders desc limit 5</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT customer_name, city, country, COUNT(*) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name, city, country ORDER BY total_orders DESC LIMIT 5</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select customer_name, city, country, count(*) as total_orders from customers join orders on customers.customer_id = orders.customer_id group by customer_name, city, country order by total_orders desc limit 5</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT customer_name, city, country, COUNT(*) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name, city, country ORDER BY total_orders DESC LIMIT 5</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select customer_name, city, country, count(*) as total_orders from customers join orders on customers.customer_id = orders.customer_id group by customer_name, city, country order by total_orders desc limit 5</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT customer_name, city, country, COUNT(*) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name, city, country ORDER BY total_orders DESC LIMIT 5</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select customer_name, city, country, count(*) as total_orders from customers join orders on customers.customer_id = orders.customer_id group by customer_name, city, country order by total_orders desc limit 5</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT customer_name, city, country, COUNT(*) AS total_orders FROM customers JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customer_name, city, country ORDER BY total_orders DESC LIMIT 5</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select customer_name, city, country, count(*) as total_orders from customers join orders on customers.customer_id = orders.customer_id group by customer_name, city, country order by total_orders desc limit 5</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT customer_id, COUNT(*) AS total_orders FROM orders GROUP BY customer_id HAVING COUNT(*) > 3 ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select customer_id, count(*) as total_orders from orders group by customer_id having count(*) > 3 order by total_orders desc</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT customer_id, COUNT(*) AS total_orders FROM orders GROUP BY customer_id HAVING COUNT(*) > 3 ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select customer_id, count(*) as total_orders from orders group by customer_id having count(*) > 3 order by total_orders desc</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT customer_id, COUNT(*) AS total_orders FROM orders GROUP BY customer_id HAVING COUNT(*) > 3 ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select customer_id, count(*) as total_orders from orders group by customer_id having count(*) > 3 order by total_orders desc</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT customer_id, COUNT(*) AS total_orders FROM orders GROUP BY customer_id HAVING COUNT(*) > 3 ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select customer_id, count(*) as total_orders from orders group by customer_id having count(*) > 3 order by total_orders desc</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT customer_id, COUNT(*) AS total_orders FROM orders GROUP BY customer_id HAVING COUNT(*) > 3 ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select customer_id, count(*) as total_orders from orders group by customer_id having count(*) > 3 order by total_orders desc</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT customer_id, COUNT(*) AS total_orders FROM orders GROUP BY customer_id HAVING COUNT(*) > 3 ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select customer_id, count(*) as total_orders from orders group by customer_id having count(*) > 3 order by total_orders desc</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT customer_id, COUNT(*) AS total_orders FROM orders GROUP BY customer_id HAVING COUNT(*) > 3 ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select customer_id, count(*) as total_orders from orders group by customer_id having count(*) > 3 order by total_orders desc</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT customer_id, COUNT(*) AS total_orders FROM orders GROUP BY customer_id HAVING COUNT(*) > 3 ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select customer_id, count(*) as total_orders from orders group by customer_id having count(*) > 3 order by total_orders desc</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT customer_id, COUNT(*) AS total_orders FROM orders GROUP BY customer_id HAVING COUNT(*) > 3 ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select customer_id, count(*) as total_orders from orders group by customer_id having count(*) > 3 order by total_orders desc</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT customer_id, COUNT(*) AS total_orders FROM orders GROUP BY customer_id HAVING COUNT(*) > 3 ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select customer_id, count(*) as total_orders from orders group by customer_id having count(*) > 3 order by total_orders desc</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT customer_id, COUNT(*) AS total_orders FROM orders GROUP BY customer_id HAVING COUNT(*) > 3 ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select customer_id, count(*) as total_orders from orders group by customer_id having count(*) > 3 order by total_orders desc</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT customer_id, COUNT(*) AS total_orders FROM orders GROUP BY customer_id HAVING COUNT(*) > 3 ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select customer_id, count(*) as total_orders from orders group by customer_id having count(*) > 3 order by total_orders desc</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT customer_id, COUNT(*) AS total_orders FROM orders GROUP BY customer_id HAVING COUNT(*) > 3 ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select customer_id, count(*) as total_orders from orders group by customer_id having count(*) > 3 order by total_orders desc</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT customer_id, COUNT(*) AS total_orders FROM orders GROUP BY customer_id HAVING COUNT(*) > 3 ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select customer_id, count(*) as total_orders from orders group by customer_id having count(*) > 3 order by total_orders desc</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT customer_id, COUNT(*) AS total_orders FROM orders GROUP BY customer_id HAVING COUNT(*) > 3 ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select customer_id, count(*) as total_orders from orders group by customer_id having count(*) > 3 order by total_orders desc</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT customer_id, COUNT(*) AS total_orders FROM orders GROUP BY customer_id HAVING COUNT(*) > 3 ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select customer_id, count(*) as total_orders from orders group by customer_id having count(*) > 3 order by total_orders desc</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT customer_id, COUNT(*) AS total_orders FROM orders GROUP BY customer_id HAVING COUNT(*) > 3 ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select customer_id, count(*) as total_orders from orders group by customer_id having count(*) > 3 order by total_orders desc</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT customer_id, COUNT(*) AS total_orders FROM orders GROUP BY customer_id HAVING COUNT(*) > 3 ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select customer_id, count(*) as total_orders from orders group by customer_id having count(*) > 3 order by total_orders desc</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT customer_id, COUNT(*) AS total_orders FROM orders GROUP BY customer_id HAVING COUNT(*) > 3 ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select customer_id, count(*) as total_orders from orders group by customer_id having count(*) > 3 order by total_orders desc</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT customer_id, COUNT(*) AS total_orders FROM orders GROUP BY customer_id HAVING COUNT(*) > 3 ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select customer_id, count(*) as total_orders from orders group by customer_id having count(*) > 3 order by total_orders desc</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT customer_id, COUNT(*) AS total_orders FROM orders GROUP BY customer_id HAVING COUNT(*) > 3 ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select customer_id, count(*) as total_orders from orders group by customer_id having count(*) > 3 order by total_orders desc</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT customer_id, COUNT(*) AS total_orders FROM orders GROUP BY customer_id HAVING COUNT(*) > 3 ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select customer_id, count(*) as total_orders from orders group by customer_id having count(*) > 3 order by total_orders desc</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT customer_id, COUNT(*) AS total_orders FROM orders GROUP BY customer_id HAVING COUNT(*) > 3 ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select customer_id, count(*) as total_orders from orders group by customer_id having count(*) > 3 order by total_orders desc</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT customer_id, COUNT(*) AS total_orders FROM orders GROUP BY customer_id HAVING COUNT(*) > 3 ORDER BY total_orders DESC</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select customer_id, count(*) as total_orders from orders group by customer_id having count(*) > 3 order by total_orders desc</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT customer_name, order_date, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date >= '2022-01-01' ORDER BY order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select customer_name, order_date, quantity from customers join orders on customers.customer_id = orders.customer_id where order_date >= '2022-01-01' order by order_date desc limit 10</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT customer_name, order_date, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date >= '2022-01-01' ORDER BY order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select customer_name, order_date, quantity from customers join orders on customers.customer_id = orders.customer_id where order_date >= '2022-01-01' order by order_date desc limit 10</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT customer_name, order_date, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date >= '2022-01-01' ORDER BY order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select customer_name, order_date, quantity from customers join orders on customers.customer_id = orders.customer_id where order_date >= '2022-01-01' order by order_date desc limit 10</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT customer_name, order_date, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date >= '2022-01-01' ORDER BY order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select customer_name, order_date, quantity from customers join orders on customers.customer_id = orders.customer_id where order_date >= '2022-01-01' order by order_date desc limit 10</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT customer_name, order_date, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date >= '2022-01-01' ORDER BY order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select customer_name, order_date, quantity from customers join orders on customers.customer_id = orders.customer_id where order_date >= '2022-01-01' order by order_date desc limit 10</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT customer_name, order_date, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date >= '2022-01-01' ORDER BY order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select customer_name, order_date, quantity from customers join orders on customers.customer_id = orders.customer_id where order_date >= '2022-01-01' order by order_date desc limit 10</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT customer_name, order_date, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date >= '2022-01-01' ORDER BY order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select customer_name, order_date, quantity from customers join orders on customers.customer_id = orders.customer_id where order_date >= '2022-01-01' order by order_date desc limit 10</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT customer_name, order_date, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date >= '2022-01-01' ORDER BY order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select customer_name, order_date, quantity from customers join orders on customers.customer_id = orders.customer_id where order_date >= '2022-01-01' order by order_date desc limit 10</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT customer_name, order_date, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date >= '2022-01-01' ORDER BY order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select customer_name, order_date, quantity from customers join orders on customers.customer_id = orders.customer_id where order_date >= '2022-01-01' order by order_date desc limit 10</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT customer_name, order_date, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date >= '2022-01-01' ORDER BY order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select customer_name, order_date, quantity from customers join orders on customers.customer_id = orders.customer_id where order_date >= '2022-01-01' order by order_date desc limit 10</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT customer_name, order_date, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date >= '2022-01-01' ORDER BY order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select customer_name, order_date, quantity from customers join orders on customers.customer_id = orders.customer_id where order_date >= '2022-01-01' order by order_date desc limit 10</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT customer_name, order_date, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date >= '2022-01-01' ORDER BY order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select customer_name, order_date, quantity from customers join orders on customers.customer_id = orders.customer_id where order_date >= '2022-01-01' order by order_date desc limit 10</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT customer_name, order_date, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date >= '2022-01-01' ORDER BY order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select customer_name, order_date, quantity from customers join orders on customers.customer_id = orders.customer_id where order_date >= '2022-01-01' order by order_date desc limit 10</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT customer_name, order_date, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date >= '2022-01-01' ORDER BY order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select customer_name, order_date, quantity from customers join orders on customers.customer_id = orders.customer_id where order_date >= '2022-01-01' order by order_date desc limit 10</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>SELECT customer_name, order_date, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date >= '2022-01-01' ORDER BY order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>select customer_name, order_date, quantity from customers join orders on customers.customer_id = orders.customer_id where order_date >= '2022-01-01' order by order_date desc limit 10</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT customer_name, order_date, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date >= '2022-01-01' ORDER BY order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select customer_name, order_date, quantity from customers join orders on customers.customer_id = orders.customer_id where order_date >= '2022-01-01' order by order_date desc limit 10</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT customer_name, order_date, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date >= '2022-01-01' ORDER BY order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select customer_name, order_date, quantity from customers join orders on customers.customer_id = orders.customer_id where order_date >= '2022-01-01' order by order_date desc limit 10</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT customer_name, order_date, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date >= '2022-01-01' ORDER BY order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select customer_name, order_date, quantity from customers join orders on customers.customer_id = orders.customer_id where order_date >= '2022-01-01' order by order_date desc limit 10</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT customer_name, order_date, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date >= '2022-01-01' ORDER BY order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select customer_name, order_date, quantity from customers join orders on customers.customer_id = orders.customer_id where order_date >= '2022-01-01' order by order_date desc limit 10</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT customer_name, order_date, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date >= '2022-01-01' ORDER BY order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select customer_name, order_date, quantity from customers join orders on customers.customer_id = orders.customer_id where order_date >= '2022-01-01' order by order_date desc limit 10</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>SELECT customer_name, order_date, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date >= '2022-01-01' ORDER BY order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>select customer_name, order_date, quantity from customers join orders on customers.customer_id = orders.customer_id where order_date >= '2022-01-01' order by order_date desc limit 10</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT customer_name, order_date, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date >= '2022-01-01' ORDER BY order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select customer_name, order_date, quantity from customers join orders on customers.customer_id = orders.customer_id where order_date >= '2022-01-01' order by order_date desc limit 10</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>SELECT customer_name, order_date, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date >= '2022-01-01' ORDER BY order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>select customer_name, order_date, quantity from customers join orders on customers.customer_id = orders.customer_id where order_date >= '2022-01-01' order by order_date desc limit 10</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>SELECT customer_name, order_date, quantity FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE order_date >= '2022-01-01' ORDER BY order_date DESC LIMIT 10</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>select customer_name, order_date, quantity from customers join orders on customers.customer_id = orders.customer_id where order_date >= '2022-01-01' order by order_date desc limit 10</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>SELECT * FROM EnergyCompany;</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>select * from energycompany;</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>SELECT company_id from EnergyCompany;</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>select company_id from energycompany;</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>SELECT company_name, industry FROM EnergyCompany;</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>select company_name, industry from energycompany;</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>SELECT * FROM EnergyCompany WHERE company_id = 1;</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>select * from energycompany where company_id = 1;</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>SELECT * FROM EnergyCompany WHERE industry = 'Renewable Energy';</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>select * from energycompany where industry = 'renewable energy';</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>SELECT * FROM EnergyCompany WHERE company_name LIKE '%Solar%';</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>select * from energycompany where company_name like '%solar%';</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>SELECT * FROM EnergyCompany WHERE company_name = 'Green Energy Inc.';</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>select * from energycompany where company_name = 'green energy inc.';</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>SELECT company_id, company_name FROM EnergyCompany WHERE industry = 'Oil and Gas';</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>select company_id, company_name from energycompany where industry = 'oil and gas';</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>SELECT * FROM EnergyCompany ORDER BY company_name ASC;</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>select * from energycompany order by company_name asc;</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>SELECT * FROM EnergyCompany ORDER BY company_id DESC;</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>select * from energycompany order by company_id desc;</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>SELECT COUNT(*) FROM EnergyCompany;</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>select count(*) from energycompany;</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>SELECT MAX(company_id) FROM EnergyCompany;</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>select max(company_id) from energycompany;</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>SELECT AVG(company_id) FROM EnergyCompany;</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>select avg(company_id) from energycompany;</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>SELECT SUM(company_id) FROM EnergyCompany;</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>select sum(company_id) from energycompany;</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>SELECT DISTINCT industry FROM EnergyCompany;</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>select distinct industry from energycompany;</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>SELECT industry, COUNT(*) FROM EnergyCompany GROUP BY industry;</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>select industry, count(*) from energycompany group by industry;</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>SELECT * FROM EnergyCompany WHERE company_id IN (1, 2, 3);</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>select * from energycompany where company_id in (1, 2, 3);</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>SELECT * FROM EnergyCompany WHERE industry NOT IN ('Oil and Gas', 'Coal');</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>select * from energycompany where industry not in ('oil and gas', 'coal');</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>SELECT * FROM EnergyCompany WHERE industry = 'Renewable Energy' AND company_name LIKE '%Solar%';</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>select * from energycompany where industry = 'renewable energy' and company_name like '%solar%';</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>SELECT * FROM EnergyCompany WHERE industry = 'Renewable Energy' OR industry = 'Solar Power';</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>select * from energycompany where industry = 'renewable energy' or industry = 'solar power';</stat>