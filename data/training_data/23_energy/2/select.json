[
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM energy_usage_in_smart_buildings;",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT building_id, energy_consumed FROM energy_usage_in_smart_buildings;",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT building_id FROM energy_usage_in_smart_buildings;",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM energy_usage_in_smart_buildings WHERE building_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM energy_usage_in_smart_buildings WHERE energy_consumed > 100;",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM energy_usage_in_smart_buildings ORDER BY timestamp ASC;",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(energy_consumed) FROM energy_usage_in_smart_buildings;",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT building_id, COUNT(*) FROM energy_usage_in_smart_buildings GROUP BY building_id;",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM energy_usage_in_smart_buildings LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM energy_usage_in_smart_buildings OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM energy_usage_in_smart_buildings WHERE room_id IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM energy_usage_in_smart_buildings WHERE sensor_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM energy_usage_in_smart_buildings WHERE timestamp >= '2022-01-01' AND timestamp <= '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT building_id, SUM(energy_consumed) FROM energy_usage_in_smart_buildings GROUP BY building_id HAVING SUM(energy_consumed) > 500;",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT building_id, room_id FROM energy_usage_in_smart_buildings;",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT building_id, MAX(energy_consumed) FROM energy_usage_in_smart_buildings GROUP BY building_id;",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM energy_usage_in_smart_buildings WHERE energy_consumed = (SELECT MAX(energy_consumed) FROM energy_usage_in_smart_buildings);",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM energy_usage_in_smart_buildings WHERE energy_consumed BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT building_id, COUNT(*) AS num_records FROM energy_usage_in_smart_buildings GROUP BY building_id HAVING num_records > 10;",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT building_id, SUM(energy_consumed) AS total_energy_consumed FROM energy_usage_in_smart_buildings GROUP BY building_id",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT building_id, AVG(energy_consumed) AS average_energy_consumed FROM energy_usage_in_smart_buildings GROUP BY building_id",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT building_id, MAX(energy_consumed) AS max_energy_consumed FROM energy_usage_in_smart_buildings GROUP BY building_id",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT building_id, MIN(energy_consumed) AS min_energy_consumed FROM energy_usage_in_smart_buildings GROUP BY building_id",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT building_id, COUNT(DISTINCT sensor_id) AS num_sensors FROM energy_usage_in_smart_buildings GROUP BY building_id",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT building_id, COUNT(DISTINCT room_id) AS num_rooms FROM energy_usage_in_smart_buildings GROUP BY building_id",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT building_id, AVG(energy_consumed) AS average_energy_consumed, MIN(energy_consumed) AS min_energy_consumed, MAX(energy_consumed) AS max_energy_consumed FROM energy_usage_in_smart_buildings GROUP BY building_id",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT building_id, sensor_id, COUNT(sensor_id) AS count_sensor_usage FROM energy_usage_in_smart_buildings GROUP BY building_id, sensor_id",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT SUM(energy_consumed) AS total_energy FROM energy_usage_in_smart_buildings",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT building_id, sensor_id, AVG(energy_consumed) AS average_sensor_energy_consumed FROM energy_usage_in_smart_buildings GROUP BY building_id, sensor_id",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT building_id, COUNT(DISTINCT timestamp) AS num_records FROM energy_usage_in_smart_buildings GROUP BY building_id",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT timestamp, building_id, energy_consumed FROM energy_usage_in_smart_buildings WHERE energy_consumed > 100 ORDER BY energy_consumed DESC",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT building_id, room_id, sensor_id, AVG(energy_consumed) AS avg_energy_consumed FROM energy_usage_in_smart_buildings GROUP BY building_id, room_id, sensor_id",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT building_id, COUNT(room_id) AS num_rooms, SUM(energy_consumed) AS total_energy_consumed FROM energy_usage_in_smart_buildings GROUP BY building_id",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT building_id, sensor_id FROM energy_usage_in_smart_buildings",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT building_id, sensor_id, COUNT(DISTINCT room_id) AS num_rooms FROM energy_usage_in_smart_buildings GROUP BY building_id, sensor_id",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT building_id, sensor_id, COUNT(DISTINCT timestamp) AS num_records FROM energy_usage_in_smart_buildings GROUP BY building_id, sensor_id",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT building_id, sensor_id, SUM(energy_consumed) AS total_energy_consumed FROM energy_usage_in_smart_buildings GROUP BY building_id, sensor_id",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT building_id, AVG(energy_consumed) AS overall_average_energy_consumed FROM energy_usage_in_smart_buildings",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT building_id, sensor_id, MAX(energy_consumed) AS max_energy_consumed FROM energy_usage_in_smart_buildings GROUP BY building_id, sensor_id",
  "### TABLEDATA\n\nCREATE TABLE energy_usage_in_smart_buildings (\n  building_id INT PRIMARY KEY,\n  energy_consumed DECIMAL,\n  room_id INT,\n  sensor_id INT,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT building_id, sensor_id, MIN(energy_consumed) AS min_energy_consumed FROM energy_usage_in_smart_buildings GROUP BY building_id, sensor_id",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM buildings;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT building_name, location FROM buildings;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT building_id, building_name, total_energy_usage FROM buildings WHERE total_energy_usage > 1000;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM energy_meters;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT meter_id, building_id, meter_location FROM energy_meters;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT meter_id, energy_reading, timestamp FROM energy_meters WHERE energy_reading < 500;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT buildings.building_name, energy_meters.energy_reading FROM buildings JOIN energy_meters ON buildings.building_id = energy_meters.building_id;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT building_name, location, energy_reading FROM buildings JOIN energy_meters ON buildings.building_id = energy_meters.building_id;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT buildings.building_name, buildings.total_energy_usage, energy_meters.energy_reading FROM buildings JOIN energy_meters ON buildings.building_id = energy_meters.building_id;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT building_id, building_name, meter_location FROM buildings LEFT JOIN energy_meters ON buildings.building_id = energy_meters.building_id;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT building_name, location, energy_reading FROM buildings LEFT JOIN energy_meters ON buildings.building_id = energy_meters.building_id;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT buildings.building_name, energy_meters.energy_reading FROM buildings RIGHT JOIN energy_meters ON buildings.building_id = energy_meters.building_id;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT building_name, location, energy_reading FROM buildings RIGHT JOIN energy_meters ON buildings.building_id = energy_meters.building_id;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT buildings.building_name, buildings.total_energy_usage, energy_meters.energy_reading FROM buildings RIGHT JOIN energy_meters ON buildings.building_id = energy_meters.building_id;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT building_id, building_name, meter_location FROM buildings FULL JOIN energy_meters ON buildings.building_id = energy_meters.building_id;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT building_name, location, energy_reading FROM buildings FULL JOIN energy_meters ON buildings.building_id = energy_meters.building_id;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT buildings.building_name, energy_meters.energy_reading FROM buildings FULL JOIN energy_meters ON buildings.building_id = energy_meters.building_id;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT building_name, location, energy_reading FROM buildings FULL JOIN energy_meters ON buildings.building_id = energy_meters.building_id;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT buildings.building_name, buildings.total_energy_usage, energy_meters.energy_reading FROM buildings FULL JOIN energy_meters ON buildings.building_id = energy_meters.building_id;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(total_energy_usage) AS avg_energy_usage FROM buildings;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM buildings WHERE total_energy_usage > 1000",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT building_name, location FROM buildings WHERE total_energy_usage < 500",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM buildings WHERE location LIKE 'New York%'",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT building_id, building_name FROM buildings JOIN energy_meters ON buildings.building_id = energy_meters.building_id",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT SUM(energy_reading) AS total_energy_usage FROM energy_meters WHERE building_id = 1",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT building_name, energy_reading FROM buildings JOIN energy_meters ON buildings.building_id = energy_meters.building_id WHERE energy_reading > 1000",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(total_energy_usage) AS avg_energy_usage FROM buildings",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM energy_meters WHERE timestamp >= '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT building_id, COUNT(*) AS num_readings FROM energy_meters GROUP BY building_id",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT building_name, SUM(energy_reading) AS total_energy_usage FROM buildings JOIN energy_meters ON buildings.building_id = energy_meters.building_id GROUP BY building_name",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MAX(total_energy_usage) AS max_energy_usage FROM buildings",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT building_name, SUM(energy_reading) AS total_energy_usage FROM buildings JOIN energy_meters ON buildings.building_id = energy_meters.building_id GROUP BY building_name HAVING total_energy_usage > 5000",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT building_name, MAX(timestamp) AS latest_reading_timestamp FROM buildings JOIN energy_meters ON buildings.building_id = energy_meters.building_id",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT building_name, AVG(energy_reading) AS avg_energy_reading FROM buildings JOIN energy_meters ON buildings.building_id = energy_meters.building_id GROUP BY building_name",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM buildings WHERE building_id IN (SELECT building_id FROM energy_meters WHERE energy_reading > 500)",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT building_name, location, energy_reading FROM buildings JOIN energy_meters ON buildings.building_id = energy_meters.building_id WHERE energy_reading < total_energy_usage",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT building_name, MAX(energy_reading) AS max_energy_reading FROM buildings JOIN energy_meters ON buildings.building_id = energy_meters.building_id GROUP BY building_name",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT building_id, AVG(energy_reading) AS avg_energy_reading FROM energy_meters GROUP BY building_id HAVING avg_energy_reading > 500",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT building_name, SUM(energy_reading) AS total_energy_usage FROM buildings JOIN energy_meters ON buildings.building_id = energy_meters.building_id WHERE timestamp >= '2022-01-01' GROUP BY building_name",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255),\n  location VARCHAR(255),\n  total_energy_usage DECIMAL\n)\n\nCREATE TABLE energy_meters (\n  meter_id INT PRIMARY KEY,\n  building_id INT,\n  meter_location VARCHAR(255),\n  energy_reading DECIMAL,\n  timestamp TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT building_name, location, AVG(total_energy_usage) AS avg_energy_usage FROM buildings GROUP BY building_name",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT * FROM buildings;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT building_name, location FROM buildings;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT building_name, location, total_energy_usage FROM buildings;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT * FROM rooms;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT room_name, area FROM rooms;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT room_name, area, energy_usage FROM rooms;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT * FROM appliances;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT appliance_name, power_consumption FROM appliances;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT appliance_name, power_consumption, room_id FROM appliances;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT b.building_name, r.room_name, a.appliance_name FROM buildings b INNER JOIN rooms r ON b.building_id = r.building_id INNER JOIN appliances a ON r.room_id = a.room_id;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT b.building_name, SUM(r.area) as total_area FROM buildings b INNER JOIN rooms r ON b.building_id = r.building_id GROUP BY b.building_name;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT b.building_name, COUNT(r.room_id) as num_rooms FROM buildings b LEFT JOIN rooms r ON b.building_id = r.building_id GROUP BY b.building_name;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT b.building_name, AVG(r.area) as avg_area FROM buildings b INNER JOIN rooms r ON b.building_id = r.building_id GROUP BY b.building_name;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT b.building_name, MIN(r.energy_usage) as min_energy_usage FROM buildings b INNER JOIN rooms r ON b.building_id = r.building_id GROUP BY b.building_name;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT b.building_name, MAX(r.energy_usage) as max_energy_usage FROM buildings b INNER JOIN rooms r ON b.building_id = r.building_id GROUP BY b.building_name;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT r.room_name, SUM(a.power_consumption) as total_power_consumption FROM rooms r INNER JOIN appliances a ON r.room_id = a.room_id GROUP BY r.room_name;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT r.room_name, COUNT(a.appliance_id) as num_appliances FROM rooms r LEFT JOIN appliances a ON r.room_id = a.room_id GROUP BY r.room_name;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT r.room_name, AVG(a.power_consumption) as avg_power_consumption FROM rooms r INNER JOIN appliances a ON r.room_id = a.room_id GROUP BY r.room_name;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT r.room_name, MIN(a.power_consumption) as min_power_consumption FROM rooms r INNER JOIN appliances a ON r.room_id = a.room_id GROUP BY r.room_name;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT r.room_name, MAX(a.power_consumption) as max_power_consumption FROM rooms r INNER JOIN appliances a ON r.room_id = a.room_id GROUP BY r.room_name;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT * FROM buildings;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT building_name, location FROM buildings WHERE total_energy_usage > 1000;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT building_id, building_name, SUM(total_energy_usage) AS total_energy_used FROM buildings GROUP BY building_id;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT * FROM rooms JOIN buildings ON rooms.building_id = buildings.building_id;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT room_name, area FROM rooms WHERE energy_usage < 500;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT appliance_name, power_consumption FROM appliances WHERE power_consumption > 100;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT building_name, COUNT(DISTINCT room_id) AS number_of_rooms FROM buildings JOIN rooms ON buildings.building_id = rooms.building_id GROUP BY building_name;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT building_name, room_name, SUM(power_consumption) AS total_power_consumption FROM buildings JOIN rooms ON buildings.building_id = rooms.building_id JOIN appliances ON rooms.room_id = appliances.room_id GROUP BY building_name, room_name;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT building_id, location FROM buildings JOIN rooms ON buildings.building_id = rooms.building_id WHERE area > 1000;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT appliance_name, power_consumption FROM appliances WHERE appliance_id IN (SELECT appliance_id FROM appliances WHERE power_consumption > 50);",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT building_name, AVG(total_energy_usage) AS avg_energy_usage FROM buildings GROUP BY building_name HAVING AVG(total_energy_usage) > 500;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT building_name, SUM(total_energy_usage) AS total_energy FROM buildings WHERE building_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT building_name, room_name, appliance_name FROM buildings JOIN rooms ON buildings.building_id = rooms.building_id JOIN appliances ON rooms.room_id = appliances.room_id;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT building_name, MAX(total_energy_usage) AS max_energy_usage FROM buildings;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT building_id, AVG(area) AS avg_room_area FROM rooms GROUP BY building_id;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT building_name, COUNT(room_id) AS total_rooms FROM buildings JOIN rooms ON buildings.building_id = rooms.building_id GROUP BY building_name;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT building_name, SUM(total_energy_usage) AS total_energy_used FROM buildings WHERE location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT building_name FROM buildings WHERE building_id IN (SELECT building_id FROM rooms WHERE area < 500);",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT neighborhood, SUM(total_energy_usage) AS total_energy FROM buildings GROUP BY neighborhood;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255) NOT NULL,\n    location VARCHAR(255) NOT NULL,\n    total_energy_usage DECIMAL(10,2) NOT NULL\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_name VARCHAR(255) NOT NULL,\n    building_id INT NOT NULL,\n    area DECIMAL(8,2) NOT NULL,\n    energy_usage DECIMAL(10,2) NOT NULL,\n    CONSTRAINT fk_building_id FOREIGN KEY(building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE appliances (\n    appliance_id INT PRIMARY KEY,\n    appliance_name VARCHAR(255) NOT NULL,\n    room_id INT NOT NULL,\n    power_consumption DECIMAL(8,2) NOT NULL,\n    CONSTRAINT fk_room_id FOREIGN KEY(room_id) REFERENCES rooms(room_id)\n);\n\n### STATEMENT\n\nSELECT building_name, COUNT(appliance_id) AS total_appliances FROM buildings JOIN rooms ON buildings.building_id = rooms.building_id JOIN appliances ON rooms.room_id = appliances.room_id GROUP BY building_name;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT * FROM buildings;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT building_name, location FROM buildings;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT * FROM rooms;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT room_number, floor_number FROM rooms;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT * FROM devices;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT device_name FROM devices;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT * FROM energy_usage;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT device_id, energy_usage, date_of_reading FROM energy_usage;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT building_name, room_number, device_name, energy_usage FROM buildings JOIN rooms ON buildings.building_id = rooms.building_id JOIN devices ON rooms.room_id = devices.room_id JOIN energy_usage ON devices.device_id = energy_usage.device_id;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT * FROM buildings WHERE building_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT building_name, location FROM buildings WHERE building_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT * FROM rooms WHERE building_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT room_number, floor_number FROM rooms WHERE building_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT * FROM devices WHERE room_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT device_name FROM devices WHERE room_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT * FROM energy_usage WHERE device_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT device_id, energy_usage, date_of_reading FROM energy_usage WHERE device_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT building_name, room_number, device_name, energy_usage FROM buildings JOIN rooms ON buildings.building_id = rooms.building_id JOIN devices ON rooms.room_id = devices.room_id JOIN energy_usage ON devices.device_id = energy_usage.device_id WHERE buildings.building_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT building_name, room_number, device_name, energy_usage FROM buildings JOIN rooms ON buildings.building_id = rooms.building_id JOIN devices ON rooms.room_id = devices.room_id JOIN energy_usage ON devices.device_id = energy_usage.device_id WHERE buildings.building_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT * FROM buildings;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT building_id, building_name FROM buildings WHERE location='New York';",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT building_name, building_id, COUNT(room_id) as total_rooms FROM buildings LEFT JOIN rooms ON buildings.building_id = rooms.building_id GROUP BY building_id;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT building_name, SUM(energy_usage) as total_energy_usage FROM buildings INNER JOIN rooms ON buildings.building_id = rooms.building_id INNER JOIN devices ON rooms.room_id = devices.room_id INNER JOIN energy_usage ON devices.device_id = energy_usage.device_id GROUP BY building_name;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT building_name, AVG(energy_usage) as avg_energy_usage FROM buildings INNER JOIN rooms ON buildings.building_id = rooms.building_id INNER JOIN devices ON rooms.room_id = devices.room_id INNER JOIN energy_usage ON devices.device_id = energy_usage.device_id GROUP BY building_name ORDER BY avg_energy_usage DESC;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT building_id, building_name FROM buildings WHERE building_id IN (SELECT building_id FROM rooms WHERE floor_number = 1);",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT building_name, COUNT(device_id) as total_devices FROM buildings LEFT JOIN rooms ON buildings.building_id = rooms.building_id LEFT JOIN devices ON rooms.room_id = devices.room_id GROUP BY building_id ORDER BY total_devices DESC;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT building_name, SUM(energy_usage) as total_energy_usage FROM buildings INNER JOIN rooms ON buildings.building_id = rooms.building_id INNER JOIN devices ON rooms.room_id = devices.room_id INNER JOIN energy_usage ON devices.device_id = energy_usage.device_id WHERE energy_usage.date_of_reading >= '2022-01-01' AND energy_usage.date_of_reading <= '2022-12-31' GROUP BY building_name;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT building_name, AVG(energy_usage) as avg_energy_usage FROM buildings INNER JOIN rooms ON buildings.building_id = rooms.building_id INNER JOIN devices ON rooms.room_id = devices.room_id INNER JOIN energy_usage ON devices.device_id = energy_usage.device_id WHERE location = 'London' GROUP BY building_name;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT building_name FROM buildings WHERE building_id NOT IN (SELECT building_id FROM rooms);",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT building_name, location FROM buildings WHERE building_name LIKE '%Tech%' AND location NOT LIKE '%USA%';",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT building_name, energy_usage, date_of_reading FROM buildings INNER JOIN rooms ON buildings.building_id = rooms.building_id INNER JOIN devices ON rooms.room_id = devices.room_id INNER JOIN energy_usage ON devices.device_id = energy_usage.device_id WHERE energy_usage >= 50;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT building_name, COUNT(device_id) as total_devices FROM buildings LEFT JOIN rooms ON buildings.building_id = rooms.building_id LEFT JOIN devices ON rooms.room_id = devices.room_id WHERE devices.device_name LIKE '%Laptop%' GROUP BY building_id;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT building_name, SUM(energy_usage) as total_energy_usage FROM buildings INNER JOIN rooms ON buildings.building_id = rooms.building_id INNER JOIN devices ON rooms.room_id = devices.room_id INNER JOIN energy_usage ON devices.device_id = energy_usage.device_id WHERE energy_usage.date_of_reading BETWEEN '2022-01-01' AND '2022-06-30' GROUP BY building_name;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT building_name, AVG(energy_usage) as avg_energy_usage FROM buildings INNER JOIN rooms ON buildings.building_id = rooms.building_id INNER JOIN devices ON rooms.room_id = devices.room_id INNER JOIN energy_usage ON devices.device_id = energy_usage.device_id WHERE location = 'Paris' AND floor_number = 2 GROUP BY building_name;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT building_name, COUNT(room_id) as total_rooms FROM buildings LEFT JOIN rooms ON buildings.building_id = rooms.building_id WHERE location = 'Tokyo' GROUP BY building_id ORDER BY total_rooms DESC;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT building_name, MAX(energy_usage) as max_energy_usage FROM buildings INNER JOIN rooms ON buildings.building_id = rooms.building_id INNER JOIN devices ON rooms.room_id = devices.room_id INNER JOIN energy_usage ON devices.device_id = energy_usage.device_id GROUP BY building_name;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT building_name, MIN(energy_usage) as min_energy_usage FROM buildings INNER JOIN rooms ON buildings.building_id = rooms.building_id INNER JOIN devices ON rooms.room_id = devices.room_id INNER JOIN energy_usage ON devices.device_id = energy_usage.device_id GROUP BY building_name;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT building_name, SUM(energy_usage) as total_energy_usage FROM buildings INNER JOIN rooms ON buildings.building_id = rooms.building_id INNER JOIN devices ON rooms.room_id = devices.room_id INNER JOIN energy_usage ON devices.device_id = energy_usage.device_id WHERE building_name = 'Office Building A' GROUP BY building_name;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n    building_id INT PRIMARY KEY,\n    building_name VARCHAR(255),\n    location VARCHAR(255)\n);\n\nCREATE TABLE rooms (\n    room_id INT PRIMARY KEY,\n    room_number INT,\n    floor_number INT,\n    building_id INT,\n    FOREIGN KEY (building_id) REFERENCES buildings(building_id)\n);\n\nCREATE TABLE devices (\n    device_id INT PRIMARY KEY,\n    device_name VARCHAR(255),\n    room_id INT,\n    FOREIGN KEY (room_id) REFERENCES rooms(room_id)\n);\n\nCREATE TABLE energy_usage (\n    usage_id INT PRIMARY KEY,\n    device_id INT,\n    energy_usage FLOAT,\n    date_of_reading DATE,\n    FOREIGN KEY (device_id) REFERENCES devices(device_id)\n);\n\n### STATEMENT\n\nSELECT building_name, AVG(energy_usage) as avg_energy_usage FROM buildings INNER JOIN rooms ON buildings.building_id = rooms.building_id INNER JOIN devices ON rooms.room_id = devices.room_id INNER JOIN energy_usage ON devices.device_id = energy_usage.device_id WHERE floor_number = 1 GROUP BY building_name;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM buildings",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT building_id, building_name FROM buildings",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT DISTINCT location FROM buildings",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM rooms",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT room_id, room_name FROM rooms",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT building_id, COUNT(room_id) AS room_count FROM rooms GROUP BY building_id",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM sensors",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT sensor_id, sensor_type FROM sensors",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT AVG(reading_value) AS avg_reading FROM energy_consumption",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT MAX(reading_value) AS max_reading, MIN(reading_value) AS min_reading FROM energy_consumption",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM energy_consumption ORDER BY timestamp DESC LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT sensor_id, COUNT(reading_id) AS reading_count FROM energy_consumption GROUP BY sensor_id",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM alerts",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT sensor_id, alert_type FROM alerts",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT alert_type) AS num_unique_alerts FROM alerts",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT b.building_name, r.room_name, e.reading_value FROM buildings b JOIN rooms r ON b.building_id = r.building_id JOIN sensors s ON r.room_id = s.room_id JOIN energy_consumption e ON s.sensor_id = e.sensor_id",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT r.room_name, a.alert_message FROM rooms r JOIN sensors s ON r.room_id = s.room_id JOIN alerts a ON s.sensor_id = a.sensor_id",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT b.building_name, COUNT(DISTINCT r.room_id) AS num_rooms FROM buildings b JOIN rooms r ON b.building_id = r.building_id GROUP BY b.building_name ORDER BY num_rooms DESC",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT AVG(reading_value) AS avg_reading_per_room FROM energy_consumption GROUP BY sensor_id",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT building_id, SUM(reading_value) AS total_energy_consumption FROM rooms r JOIN sensors s ON r.room_id = s.room_id JOIN energy_consumption e ON s.sensor_id = e.sensor_id GROUP BY building_id",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM energy_consumption WHERE timestamp BETWEEN '2022-01-01' AND '2022-01-31'",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT b.building_name, r.room_name, e.reading_value, a.alert_type FROM buildings b JOIN rooms r ON b.building_id = r.building_id JOIN sensors s ON r.room_id = s.room_id JOIN energy_consumption e ON s.sensor_id = e.sensor_id JOIN alerts a ON s.sensor_id = a.sensor_id",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM buildings WHERE location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT building_name, location FROM buildings WHERE building_name LIKE 'Tech%';",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM rooms JOIN buildings ON rooms.building_id = buildings.building_id;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT DISTINCT building_name FROM buildings WHERE location = 'California';",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT sensor_id, sensor_type, room_id FROM sensors WHERE sensor_type = 'Temperature';",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM sensors JOIN rooms ON sensors.room_id = rooms.room_id WHERE room_name = 'Meeting Room';",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT building_name, room_name, sensor_type FROM buildings JOIN rooms ON buildings.building_id = rooms.building_id JOIN sensors ON rooms.room_id = sensors.room_id;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT AVG(reading_value) AS average_consumption FROM energy_consumption WHERE timestamp >= '2022-01-01' AND timestamp < '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT MAX(reading_value) AS max_consumption FROM energy_consumption WHERE timestamp >= '2022-01-01' AND timestamp < '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT building_name, SUM(reading_value) AS total_consumption FROM energy_consumption JOIN sensors ON energy_consumption.sensor_id = sensors.sensor_id JOIN rooms ON sensors.room_id = rooms.room_id JOIN buildings ON rooms.building_id = buildings.building_id GROUP BY building_name;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT building_name, COUNT(alert_id) AS total_alerts FROM buildings LEFT JOIN rooms ON buildings.building_id = rooms.building_id LEFT JOIN sensors ON rooms.room_id = sensors.room_id LEFT JOIN alerts ON sensors.sensor_id = alerts.sensor_id GROUP BY building_name;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM buildings WHERE building_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM rooms WHERE building_id = (SELECT building_id FROM buildings WHERE location = 'Texas');",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT DISTINCT alert_type FROM alerts WHERE alert_message LIKE '%critical%';",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT building_name, room_name, sensor_type, reading_value, timestamp FROM buildings JOIN rooms ON buildings.building_id = rooms.building_id JOIN sensors ON rooms.room_id = sensors.room_id JOIN energy_consumption ON sensors.sensor_id = energy_consumption.sensor_id;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT building_name, alert_type, alert_message FROM buildings JOIN rooms ON buildings.building_id = rooms.building_id JOIN sensors ON rooms.room_id = sensors.room_id JOIN alerts ON sensors.sensor_id = alerts.sensor_id;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT building_name, room_name, sensor_type, alert_type, alert_message FROM buildings JOIN rooms ON buildings.building_id = rooms.building_id JOIN sensors ON rooms.room_id = sensors.room_id JOIN alerts ON sensors.sensor_id = alerts.sensor_id;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT building_name, location, sensor_type, alert_type, timestamp FROM buildings JOIN rooms ON buildings.building_id = rooms.building_id JOIN sensors ON rooms.room_id = sensors.room_id JOIN alerts ON sensors.sensor_id = alerts.sensor_id JOIN energy_consumption ON sensors.sensor_id = energy_consumption.sensor_id;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT building_name, location, sensor_type, reading_value, timestamp FROM buildings JOIN rooms ON buildings.building_id = rooms.building_id JOIN sensors ON rooms.room_id = sensors.room_id JOIN energy_consumption ON sensors.sensor_id = energy_consumption.sensor_id WHERE reading_value > 100;",
  "### TABLEDATA\n\nCREATE TABLE buildings (\n  building_id INT PRIMARY KEY,\n  building_name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL\n)\n\nCREATE TABLE rooms (\n  room_id INT PRIMARY KEY,\n  room_name VARCHAR(255) NOT NULL,\n  building_id INT REFERENCES buildings(building_id) NOT NULL\n)\n\nCREATE TABLE sensors (\n  sensor_id INT PRIMARY KEY,\n  sensor_type VARCHAR(50) NOT NULL,\n  room_id INT REFERENCES rooms(room_id) NOT NULL\n)\n\nCREATE TABLE energy_consumption (\n  reading_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  reading_value DECIMAL(10,2) NOT NULL,\n  timestamp TIMESTAMP NOT NULL\n)\n\nCREATE TABLE alerts (\n  alert_id INT PRIMARY KEY,\n  sensor_id INT REFERENCES sensors(sensor_id) NOT NULL,\n  alert_type VARCHAR(50) NOT NULL,\n  alert_message TEXT NOT NULL\n)\n\n### STATEMENT\n\nSELECT building_name, location, sensor_type, alert_type, alert_message FROM buildings JOIN rooms ON buildings.building_id = rooms.building_id JOIN sensors ON rooms.room_id = sensors.room_id JOIN alerts ON sensors.sensor_id = alerts.sensor_id WHERE alert_type = 'Temperature Alert';"
]