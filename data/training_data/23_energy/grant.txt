<t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>GRANT SELECT ON user_energy_data TO data_analyst;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>grant select on user_energy_data to data_analyst;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>GRANT SELECT ON user_energy_data TO data_analyst;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>grant select on user_energy_data to data_analyst;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>GRANT INSERT, UPDATE, DELETE ON user_energy_data TO data_manager;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>grant insert, update, delete on user_energy_data to data_manager;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>GRANT INSERT, UPDATE, DELETE ON user_energy_data TO data_manager;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>grant insert, update, delete on user_energy_data to data_manager;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>GRANT SELECT, UPDATE ON energy_providers TO data_analyst;</stat><divider><t>CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )

CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )</t><stat>grant select, update on energy_providers to data_analyst;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>GRANT SELECT, UPDATE ON energy_providers TO data_analyst;</stat><divider><t>CREATE TABLE energy_providers ( provider_id INT PRIMARY KEY, provider_name VARCHAR(255), location VARCHAR(255) )

CREATE TABLE user_energy_data ( id INT PRIMARY KEY, user_id INT, energy_consumed FLOAT, timestamp TIMESTAMP )</t><stat>grant select, update on energy_providers to data_analyst;</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>GRANT SELECT ON energy_producers TO analyst</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>grant select on energy_producers to analyst</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>GRANT SELECT ON energy_producers TO analyst</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>grant select on energy_producers to analyst</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>GRANT SELECT ON energy_producers TO analyst</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>grant select on energy_producers to analyst</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>GRANT SELECT ON energy_producers TO analyst</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>grant select on energy_producers to analyst</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>GRANT SELECT ON energy_producers TO analyst</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>grant select on energy_producers to analyst</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>GRANT SELECT ON energy_producers TO analyst</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>grant select on energy_producers to analyst</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>GRANT INSERT, UPDATE, DELETE ON energy_consumers TO administrator</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>grant insert, update, delete on energy_consumers to administrator</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>GRANT INSERT, UPDATE, DELETE ON energy_consumers TO administrator</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>grant insert, update, delete on energy_consumers to administrator</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>GRANT INSERT, UPDATE, DELETE ON energy_consumers TO administrator</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>grant insert, update, delete on energy_consumers to administrator</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>GRANT INSERT, UPDATE, DELETE ON energy_consumers TO administrator</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>grant insert, update, delete on energy_consumers to administrator</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>GRANT INSERT, UPDATE, DELETE ON energy_consumers TO administrator</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>grant insert, update, delete on energy_consumers to administrator</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>GRANT INSERT, UPDATE, DELETE ON energy_consumers TO administrator</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>grant insert, update, delete on energy_consumers to administrator</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE ON energy_production TO operator</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>grant select, insert, update on energy_production to operator</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE ON energy_production TO operator</stat><divider><t>CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>grant select, insert, update on energy_production to operator</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE ON energy_production TO operator</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);
</t><stat>grant select, insert, update on energy_production to operator</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE ON energy_production TO operator</stat><divider><t>CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>grant select, insert, update on energy_production to operator</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE ON energy_production TO operator</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>grant select, insert, update on energy_production to operator</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>GRANT SELECT, INSERT, UPDATE ON energy_production TO operator</stat><divider><t>CREATE TABLE energy_production (
  id INT PRIMARY KEY,
  producer_id INT NOT NULL,
 production_date DATE NOT NULL,
 production_amount FLOAT NOT NULL
);


CREATE TABLE energy_consumers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);


CREATE TABLE energy_producers (
  id INT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  location VARCHAR(100) NOT NULL
);
</t><stat>grant select, insert, update on energy_production to operator</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>GRANT SELECT ON customers TO user1</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>grant select on customers to user1</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>GRANT SELECT ON customers TO user1</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>grant select on customers to user1</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>GRANT SELECT ON customers TO user1</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>grant select on customers to user1</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>GRANT SELECT ON customers TO user1</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>grant select on customers to user1</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>GRANT SELECT ON customers TO user1</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>grant select on customers to user1</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>GRANT SELECT ON customers TO user1</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>grant select on customers to user1</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>GRANT SELECT ON customers TO user1</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>grant select on customers to user1</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>GRANT SELECT ON customers TO user1</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>grant select on customers to user1</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>GRANT SELECT ON customers TO user1</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>grant select on customers to user1</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>GRANT SELECT ON customers TO user1</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>grant select on customers to user1</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>GRANT SELECT ON customers TO user1</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>grant select on customers to user1</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>GRANT SELECT ON customers TO user1</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>grant select on customers to user1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>GRANT SELECT ON customers TO user1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>grant select on customers to user1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>GRANT SELECT ON customers TO user1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>grant select on customers to user1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>GRANT SELECT ON customers TO user1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>grant select on customers to user1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>GRANT SELECT ON customers TO user1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>grant select on customers to user1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>GRANT SELECT ON customers TO user1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>grant select on customers to user1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>GRANT SELECT ON customers TO user1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>grant select on customers to user1</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>GRANT SELECT ON customers TO user1</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>grant select on customers to user1</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>GRANT SELECT ON customers TO user1</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>grant select on customers to user1</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>GRANT SELECT ON customers TO user1</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>grant select on customers to user1</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>GRANT SELECT ON customers TO user1</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>grant select on customers to user1</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>GRANT SELECT ON customers TO user1</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>grant select on customers to user1</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>GRANT SELECT ON customers TO user1</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>grant select on customers to user1</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>GRANT INSERT, UPDATE ON supplies TO user2</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>grant insert, update on supplies to user2</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>GRANT INSERT, UPDATE ON supplies TO user2</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>grant insert, update on supplies to user2</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>GRANT INSERT, UPDATE ON supplies TO user2</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>grant insert, update on supplies to user2</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>GRANT INSERT, UPDATE ON supplies TO user2</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>grant insert, update on supplies to user2</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>GRANT INSERT, UPDATE ON supplies TO user2</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>grant insert, update on supplies to user2</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>GRANT INSERT, UPDATE ON supplies TO user2</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>grant insert, update on supplies to user2</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>GRANT INSERT, UPDATE ON supplies TO user2</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>grant insert, update on supplies to user2</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>GRANT INSERT, UPDATE ON supplies TO user2</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>grant insert, update on supplies to user2</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>GRANT INSERT, UPDATE ON supplies TO user2</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>grant insert, update on supplies to user2</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>GRANT INSERT, UPDATE ON supplies TO user2</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>grant insert, update on supplies to user2</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>GRANT INSERT, UPDATE ON supplies TO user2</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>grant insert, update on supplies to user2</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>GRANT INSERT, UPDATE ON supplies TO user2</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>grant insert, update on supplies to user2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>GRANT INSERT, UPDATE ON supplies TO user2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>grant insert, update on supplies to user2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>GRANT INSERT, UPDATE ON supplies TO user2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>grant insert, update on supplies to user2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>GRANT INSERT, UPDATE ON supplies TO user2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>grant insert, update on supplies to user2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>GRANT INSERT, UPDATE ON supplies TO user2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>grant insert, update on supplies to user2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>GRANT INSERT, UPDATE ON supplies TO user2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>grant insert, update on supplies to user2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>GRANT INSERT, UPDATE ON supplies TO user2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>grant insert, update on supplies to user2</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>GRANT INSERT, UPDATE ON supplies TO user2</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>grant insert, update on supplies to user2</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>GRANT INSERT, UPDATE ON supplies TO user2</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>grant insert, update on supplies to user2</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>GRANT INSERT, UPDATE ON supplies TO user2</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>grant insert, update on supplies to user2</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>GRANT INSERT, UPDATE ON supplies TO user2</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>grant insert, update on supplies to user2</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>GRANT INSERT, UPDATE ON supplies TO user2</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>grant insert, update on supplies to user2</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>GRANT INSERT, UPDATE ON supplies TO user2</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>grant insert, update on supplies to user2</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>GRANT ALL PRIVILEGES ON products TO user3</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>grant all privileges on products to user3</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>GRANT ALL PRIVILEGES ON products TO user3</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>grant all privileges on products to user3</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>GRANT ALL PRIVILEGES ON products TO user3</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>grant all privileges on products to user3</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>GRANT ALL PRIVILEGES ON products TO user3</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>grant all privileges on products to user3</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>GRANT ALL PRIVILEGES ON products TO user3</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>grant all privileges on products to user3</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>GRANT ALL PRIVILEGES ON products TO user3</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>grant all privileges on products to user3</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>GRANT ALL PRIVILEGES ON products TO user3</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>grant all privileges on products to user3</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>GRANT ALL PRIVILEGES ON products TO user3</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>grant all privileges on products to user3</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>GRANT ALL PRIVILEGES ON products TO user3</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>grant all privileges on products to user3</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>GRANT ALL PRIVILEGES ON products TO user3</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>grant all privileges on products to user3</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>GRANT ALL PRIVILEGES ON products TO user3</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>grant all privileges on products to user3</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>GRANT ALL PRIVILEGES ON products TO user3</stat><divider><t>CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>grant all privileges on products to user3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>GRANT ALL PRIVILEGES ON products TO user3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>grant all privileges on products to user3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>GRANT ALL PRIVILEGES ON products TO user3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>grant all privileges on products to user3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>GRANT ALL PRIVILEGES ON products TO user3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)</t><stat>grant all privileges on products to user3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>GRANT ALL PRIVILEGES ON products TO user3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>grant all privileges on products to user3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>GRANT ALL PRIVILEGES ON products TO user3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>grant all privileges on products to user3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>GRANT ALL PRIVILEGES ON products TO user3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>grant all privileges on products to user3</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>GRANT ALL PRIVILEGES ON products TO user3</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>grant all privileges on products to user3</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>GRANT ALL PRIVILEGES ON products TO user3</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>grant all privileges on products to user3</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>GRANT ALL PRIVILEGES ON products TO user3</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))</t><stat>grant all privileges on products to user3</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>GRANT ALL PRIVILEGES ON products TO user3</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>grant all privileges on products to user3</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>GRANT ALL PRIVILEGES ON products TO user3</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))</t><stat>grant all privileges on products to user3</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>GRANT ALL PRIVILEGES ON products TO user3</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, order_date DATE, customer_id INT REFERENCES customers(customer_id), product_id INT REFERENCES products(product_id), quantity INT)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name STRING, category STRING, price FLOAT, supply_id INT REFERENCES supplies(supply_id))

CREATE TABLE supplies (supply_id INT PRIMARY KEY, supply_name STRING, description STRING, unit_price FLOAT, supplier_id INT REFERENCES suppliers(supplier_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name STRING, city STRING, country STRING)},{</t><stat>grant all privileges on products to user3</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>GRANT SELECT ON EnergyCompany TO user1</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>grant select on energycompany to user1</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>GRANT INSERT ON EnergyCompany TO user2</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>grant insert on energycompany to user2</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>GRANT UPDATE ON EnergyCompany TO user3</stat><divider><t>CREATE TABLE EnergyCompany (company_id INT PRIMARY KEY, company_name VARCHAR(255) NOT NULL, industry VARCHAR(100) NOT NULL)</t><stat>grant update on energycompany to user3</stat>