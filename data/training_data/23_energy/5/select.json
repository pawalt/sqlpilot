[
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT * FROM customer_data WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM customer_data WHERE customer_id > 10;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT COUNT(customer_id) FROM customer_data;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT customer_name, energy_consumption FROM customer_data WHERE energy_consumption > 100;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT customer_name, energy_saving_recommendation FROM customer_data WHERE customer_id BETWEEN 5 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT AVG(energy_consumption) FROM customer_data;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT customer_id, customer_name, customer_email FROM customer_data WHERE energy_consumption < 50;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT customer_id, customer_email FROM customer_data ORDER BY customer_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT customer_name, energy_saving_recommendation FROM customer_data WHERE customer_email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT DISTINCT energy_saving_recommendation FROM customer_data WHERE energy_consumption BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT customer_id, customer_name, customer_email FROM customer_data WHERE energy_saving_recommendation IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT MAX(energy_consumption) FROM customer_data;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM customer_data WHERE customer_name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT customer_id) FROM customer_data;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT customer_id, customer_name, energy_saving_recommendation FROM customer_data ORDER BY energy_consumption DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT customer_name, energy_saving_recommendation FROM customer_data WHERE energy_consumption < 50 AND energy_saving_recommendation IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT ROUND(energy_consumption, 2) FROM customer_data;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT customer_name, energy_saving_recommendation FROM customer_data WHERE energy_consumption >= 100 AND energy_saving_recommendation != 'None';",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT customer_name, energy_consumption * 0.5 AS half_energy_consumption FROM customer_data;",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT customer_name, energy_saving_recommendation FROM customer_data WHERE customer_email NOT LIKE '%yahoo.com';",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT * FROM customer_data WHERE energy_consumption > 100",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT customer_name, energy_saving_recommendation FROM customer_data WHERE customer_email LIKE '%gmail.com'",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT customer_name, energy_consumption FROM customer_data WHERE energy_consumption BETWEEN 50 AND 100",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT customer_name, energy_consumption FROM customer_data ORDER BY energy_consumption DESC",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT AVG(energy_consumption) AS avg_consumption FROM customer_data",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT customer_id, customer_name, energy_saving_recommendation FROM customer_data WHERE energy_consumption < (SELECT AVG(energy_consumption) FROM customer_data)",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM customer_data WHERE LENGTH(customer_name) > 10",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT customer_name, energy_consumption FROM customer_data WHERE energy_consumption = (SELECT MAX(energy_consumption) FROM customer_data)",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT customer_email, energy_consumption FROM customer_data WHERE customer_id % 2 = 0",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT DISTINCT customer_email FROM customer_data",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT energy_saving_recommendation) AS unique_recommendations FROM customer_data",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT CONCAT(customer_name, ' => ', energy_consumption) AS info FROM customer_data",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT customer_id, customer_name, energy_consumption * 1.1 AS increased_consumption FROM customer_data",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT customer_name, energy_saving_recommendation FROM customer_data WHERE energy_saving_recommendation IS NOT NULL",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT customer_name, energy_saving_recommendation FROM customer_data WHERE energy_saving_recommendation LIKE '%save%'",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT customer_name, energy_consumption FROM customer_data WHERE LENGTH(customer_name) > LENGTH(customer_email)",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT customer_name, energy_saving_recommendation FROM customer_data WHERE energy_consumption > 200 AND energy_saving_recommendation IS NOT NULL",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT customer_name, energy_consumption FROM customer_data WHERE energy_consumption = (SELECT MIN(energy_consumption) FROM customer_data)",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT energy_saving_recommendation, COUNT(*) AS recommendation_count FROM customer_data GROUP BY energy_saving_recommendation",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT customer_name, SUM(energy_consumption) AS total_consumption FROM customer_data GROUP BY customer_name HAVING total_consumption > 1000",
  "### TABLEDATA\n\nCREATE TABLE customer_data (\n  customer_id INT PRIMARY KEY,\n  customer_name STRING,\n  customer_email STRING,\n  energy_consumption FLOAT,\n  energy_saving_recommendation STRING\n)\n\n### STATEMENT\n\nSELECT customer_name, AVG(energy_consumption) AS avg_consumption FROM customer_data GROUP BY customer_name HAVING avg_consumption < 50",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, address FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT energy_usage FROM customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, address, energy_usage FROM customers WHERE zip_code = '12345';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT * FROM energy_recommendations;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT recommendation, recommendation_date FROM energy_recommendations WHERE recommendation_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customers.customer_name, energy_recommendations.recommendation FROM customers JOIN energy_recommendations ON customers.customer_id = energy_recommendations.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customers.customer_name, customers.address, energy_recommendations.recommendation FROM customers JOIN energy_recommendations ON customers.customer_id = energy_recommendations.customer_id WHERE energy_recommendations.recommendation_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customers.customer_name, customers.address, energy_recommendations.recommendation FROM customers INNER JOIN energy_recommendations ON customers.customer_id = energy_recommendations.customer_id WHERE customers.zip_code = '45678';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, energy_usage FROM customers WHERE energy_usage > 100;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, energy_usage FROM customers WHERE energy_usage BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, energy_usage FROM customers WHERE energy_usage < 50 OR energy_usage > 100;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, energy_usage FROM customers WHERE energy_usage IN (50, 75, 100);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, energy_recommendations.recommendation FROM customers LEFT JOIN energy_recommendations ON customers.customer_id = energy_recommendations.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, energy_recommendations.recommendation FROM customers RIGHT JOIN energy_recommendations ON customers.customer_id = energy_recommendations.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, energy_recommendations.recommendation FROM customers FULL JOIN energy_recommendations ON customers.customer_id = energy_recommendations.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, energy_recommendations.recommendation FROM customers JOIN energy_recommendations ON customers.customer_id = energy_recommendations.customer_id WHERE customers.customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, energy_recommendations.recommendation FROM customers JOIN energy_recommendations ON customers.customer_id = energy_recommendations.customer_id ORDER BY energy_recommendations.recommendation_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, MAX(energy_recommendations.recommendation_date) AS last_recommendation_date FROM customers JOIN energy_recommendations ON customers.customer_id = energy_recommendations.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, COUNT(recommendation_id) AS num_recommendations FROM customers JOIN energy_recommendations ON customers.customer_id = energy_recommendations.customer_id GROUP BY customer_name HAVING num_recommendations > 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, address FROM customers WHERE energy_usage > 100;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, address, recommendation FROM customers JOIN energy_recommendations ON customers.customer_id = energy_recommendations.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, address, recommendation, recommendation_date FROM customers JOIN energy_recommendations ON customers.customer_id = energy_recommendations.customer_id WHERE recommendation_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, address, recommendation, recommendation_date FROM customers JOIN energy_recommendations ON customers.customer_id = energy_recommendations.customer_id WHERE energy_usage < 200;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customers.customer_name, customers.address, energy_recommendations.recommendation FROM customers LEFT JOIN energy_recommendations ON customers.customer_id = energy_recommendations.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customers.customer_name, AVG(energy_usage) AS avg_usage FROM customers GROUP BY customers.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customers.customer_name, COUNT(recommendation_id) AS num_recommendations FROM customers LEFT JOIN energy_recommendations ON customers.customer_id = energy_recommendations.customer_id GROUP BY customers.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, SUM(energy_usage) AS total_energy FROM customers GROUP BY customer_name HAVING total_energy > 500;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, address, recommendation FROM customers JOIN energy_recommendations ON customers.customer_id = energy_recommendations.customer_id WHERE energy_recommendations.recommendation LIKE '%save energy%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, recommendation_date FROM customers JOIN energy_recommendations ON customers.customer_id = energy_recommendations.customer_id WHERE recommendation_date > '2022-01-01' AND recommendation_date < '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, address, recommendation, MONTH(recommendation_date) AS month FROM customers JOIN energy_recommendations ON customers.customer_id = energy_recommendations.customer_id WHERE recommendation_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, address, recommendation FROM customers JOIN energy_recommendations ON customers.customer_id = energy_recommendations.customer_id ORDER BY recommendation_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, SUM(energy_usage) AS total_energy FROM customers GROUP BY customer_name ORDER BY total_energy DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, COUNT(recommendation_id) AS num_recommendations FROM customers LEFT JOIN energy_recommendations ON customers.customer_id = energy_recommendations.customer_id GROUP BY customers.customer_name ORDER BY num_recommendations DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, MAX(energy_usage) AS max_energy FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, MIN(energy_usage) AS min_energy FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, AVG(energy_usage) AS avg_usage FROM customers WHERE energy_usage > 100;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, COUNT(recommendation_id) AS num_recommendations FROM customers LEFT JOIN energy_recommendations ON customers.customer_id = energy_recommendations.customer_id GROUP BY customers.customer_name HAVING num_recommendations > 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    address VARCHAR(255),\n    zip_code VARCHAR(10),\n    energy_usage DECIMAL\n)\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation TEXT,\n    recommendation_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, recommendation FROM customers JOIN energy_recommendations ON customers.customer_id = energy_recommendations.customer_id WHERE energy_recommendations.recommendation = 'Upgrade to energy-efficient appliances';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, email FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, address FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM energy_usage;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, month, year, usage FROM energy_usage;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT SUM(usage) FROM energy_usage WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT AVG(usage) FROM energy_usage WHERE year = 2022;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM energy_recommendations;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, recommendation_text FROM energy_recommendations;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT recommendation_text FROM energy_recommendations WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, recommendation_text FROM customers JOIN energy_recommendations ON customers.customer_id = energy_recommendations.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, recommendation_text FROM customers JOIN energy_recommendations USING (customer_id);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customers.customer_name, energy_usage.usage FROM customers LEFT JOIN energy_usage ON customers.customer_id = energy_usage.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT AVG(usage) AS avg_energy_usage FROM energy_usage GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, COUNT(*) AS num_recommendations FROM energy_recommendations GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM energy_recommendations WHERE recommendation_text ILIKE '%save%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM energy_usage WHERE year = 2022 ORDER BY usage DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, MAX(usage) FROM energy_usage GROUP BY customer_id HAVING MAX(usage) > 500;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM customers WHERE address = '123 Main St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, month, year, usage FROM customers c INNER JOIN energy_usage e ON c.customer_id = e.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT e.month, e.year, e.usage FROM customers c JOIN energy_usage e ON c.customer_id = e.customer_id WHERE c.customer_name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, e.usage FROM customers c JOIN energy_usage e ON c.customer_id = e.customer_id WHERE e.year = 2022;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, e.month, e.year, e.usage FROM customers c JOIN energy_usage e ON c.customer_id = e.customer_id WHERE c.customer_name = 'Alice Smith' AND e.year = 2022;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, r.recommendation_text FROM customers c JOIN energy_recommendations r ON c.customer_id = r.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, e.usage, r.recommendation_text FROM customers c JOIN energy_usage e ON c.customer_id = e.customer_id JOIN energy_recommendations r ON c.customer_id = r.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, e.month, e.year, e.usage, r.recommendation_text FROM customers c JOIN energy_usage e ON c.customer_id = e.customer_id JOIN energy_recommendations r ON c.customer_id = r.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, e.year, SUM(e.usage) AS total_usage FROM customers c JOIN energy_usage e ON c.customer_id = e.customer_id GROUP BY c.customer_name, e.year;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, e.month, e.year, AVG(e.usage) AS avg_usage FROM customers c JOIN energy_usage e ON c.customer_id = e.customer_id GROUP BY c.customer_name, e.month, e.year;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, e.month, e.year, MAX(e.usage) AS max_usage FROM customers c JOIN energy_usage e ON c.customer_id = e.customer_id GROUP BY c.customer_name, e.month, e.year;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, e.month, e.year, MIN(e.usage) AS min_usage FROM customers c JOIN energy_usage e ON c.customer_id = e.customer_id GROUP BY c.customer_name, e.month, e.year;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, e.month, e.year, COUNT(e.usage) AS num_records FROM customers c JOIN energy_usage e ON c.customer_id = e.customer_id GROUP BY c.customer_name, e.month, e.year;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, e.month, e.year, AVG(e.usage) AS avg_usage, MAX(e.usage) AS max_usage, MIN(e.usage) AS min_usage FROM customers c JOIN energy_usage e ON c.customer_id = e.customer_id GROUP BY c.customer_name, e.month, e.year;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, SUM(e.usage) AS total_usage FROM customers c JOIN energy_usage e ON c.customer_id = e.customer_id GROUP BY c.customer_name HAVING total_usage > 500;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, e.month, e.year, AVG(e.usage) AS avg_usage, MAX(e.usage) AS max_usage, MIN(e.usage) AS min_usage, SUM(e.usage) AS total_usage FROM customers c JOIN energy_usage e ON c.customer_id = e.customer_id GROUP BY c.customer_name, e.month, e.year HAVING total_usage > 500;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c1.customer_name AS customer_name_1, c2.customer_name AS customer_name_2, ABS(c1.usage - c2.usage) AS usage_difference FROM customers c1 JOIN customers c2 ON c1.customer_id <> c2.customer_id JOIN energy_usage e1 ON c1.customer_id = e1.customer_id JOIN energy_usage e2 ON c2.customer_id = e2.customer_id WHERE c1.customer_name = 'Alice Smith' AND c2.customer_name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, e.month, e.year, SUM(e.usage) AS total_usage FROM customers c JOIN energy_usage e ON c.customer_id = e.customer_id WHERE e.year = 2022 GROUP BY c.customer_name HAVING total_usage > 1000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR,\n    email VARCHAR,\n    address VARCHAR\n);\n\nCREATE TABLE energy_usage (\n    customer_id UUID,\n    month INT,\n    year INT,\n    usage DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE energy_recommendations (\n    recommendation_id SERIAL PRIMARY KEY,\n    customer_id UUID,\n    recommendation_text VARCHAR,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nSELECT c.customer_name, r.recommendation_text FROM customers c JOIN energy_recommendations r ON c.customer_id = r.customer_id ORDER BY c.customer_name ASC, r.recommendation_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_info;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM customer_info;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_phone FROM customer_info WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM energy_consumption;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT consumption_date, kilowatt_hours FROM energy_consumption WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM energy_savings;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT savings_amount FROM energy_savings WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM energy_recommendations;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT recommendation_type FROM energy_recommendations WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, kilowatt_hours FROM customer_info JOIN energy_consumption ON customer_info.customer_id = energy_consumption.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, savings_amount FROM customer_info JOIN energy_savings ON customer_info.customer_id = energy_savings.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, recommendation_description FROM customer_info JOIN energy_recommendations ON customer_info.customer_id = energy_recommendations.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_info ORDER BY customer_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, kilowatt_hours FROM customer_info JOIN energy_consumption ON customer_info.customer_id = energy_consumption.customer_id ORDER BY kilowatt_hours DESC;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM energy_savings WHERE savings_amount > 100;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM energy_recommendations WHERE recommendation_type = 'Appliance Efficiency';",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT customer_id FROM energy_consumption;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT AVG(kilowatt_hours) AS avg_consumption FROM energy_consumption;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(savings_amount) AS total_savings FROM customer_info JOIN energy_savings ON customer_info.customer_id = energy_savings.customer_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, recommendation_type, recommendation_description FROM customer_info JOIN energy_recommendations ON customer_info.customer_id = energy_recommendations.customer_id WHERE recommendation_type = 'Lighting Efficiency';",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, recommendation_type, recommendation_description FROM customer_info JOIN energy_recommendations ON customer_info.customer_id = energy_recommendations.customer_id WHERE recommendation_type = 'Insulation Upgrade';",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM customer_info;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM customer_info WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email, kilowatt_hours FROM customer_info JOIN energy_consumption ON customer_info.customer_id = energy_consumption.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, savings_amount FROM customer_info JOIN energy_savings ON customer_info.customer_id = energy_savings.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, recommendation_type, recommendation_description FROM customer_info JOIN energy_recommendations ON customer_info.customer_id = energy_recommendations.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, kilowatt_hours, savings_amount FROM customer_info JOIN energy_consumption ON customer_info.customer_id = energy_consumption.customer_id JOIN energy_savings ON customer_info.customer_id = energy_savings.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, recommendation_description FROM customer_info JOIN energy_recommendations ON customer_info.customer_id = energy_recommendations.customer_id WHERE recommendation_type = 'Home Improvement';",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, recommendation_description FROM customer_info JOIN energy_recommendations ON customer_info.customer_id = energy_recommendations.customer_id WHERE recommendation_type LIKE '%Energy%';",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, recommendation_description FROM customer_info JOIN energy_recommendations ON customer_info.customer_id = energy_recommendations.customer_id WHERE LENGTH(recommendation_description) > 100;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, sum(kilowatt_hours) AS total_consumption FROM customer_info JOIN energy_consumption ON customer_info.customer_id = energy_consumption.customer_id GROUP BY customer_info.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT COUNT(customer_name) AS total_customers, AVG(kilowatt_hours) AS average_consumption FROM customer_info JOIN energy_consumption ON customer_info.customer_id = energy_consumption.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, MAX(kilowatt_hours) AS max_consumption FROM customer_info JOIN energy_consumption ON customer_info.customer_id = energy_consumption.customer_id GROUP BY customer_info.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, MIN(savings_amount) AS min_savings FROM customer_info JOIN energy_savings ON customer_info.customer_id = energy_savings.customer_id GROUP BY customer_info.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT DISTINCT customer_name, recommendation_type FROM customer_info JOIN energy_recommendations ON customer_info.customer_id = energy_recommendations.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(kilowatt_hours) AS avg_consumption, AVG(savings_amount) AS avg_savings FROM customer_info JOIN energy_consumption ON customer_info.customer_id = energy_consumption.customer_id JOIN energy_savings ON customer_info.customer_id = energy_savings.customer_id GROUP BY customer_info.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(kilowatt_hours) AS avg_consumption, SUM(savings_amount) AS total_savings FROM customer_info JOIN energy_consumption ON customer_info.customer_id = energy_consumption.customer_id JOIN energy_savings ON customer_info.customer_id = energy_savings.customer_id GROUP BY customer_info.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, DATEDIFF(MAX(savings_date), MIN(savings_date)) AS days_between_savings FROM customer_info JOIN energy_savings ON customer_info.customer_id = energy_savings.customer_id GROUP BY customer_info.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(kilowatt_hours) AS total_consumption, YEAR(consumption_date) AS year FROM customer_info JOIN energy_consumption ON customer_info.customer_id = energy_consumption.customer_id GROUP BY customer_info.customer_id, YEAR(consumption_date);",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(savings_amount) AS avg_savings, MONTH(savings_date) AS month FROM customer_info JOIN energy_savings ON customer_info.customer_id = energy_savings.customer_id GROUP BY customer_info.customer_id, MONTH(savings_date);",
  "### TABLEDATA\n\nCREATE TABLE customer_info (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_phone VARCHAR(15)\n);\n\n\nCREATE TABLE energy_consumption (\n    consumption_id INT PRIMARY KEY,\n    customer_id INT,\n    consumption_date DATE,\n    kilowatt_hours FLOAT\n);\n\n\nCREATE TABLE energy_savings (\n    savings_id INT PRIMARY KEY,\n    customer_id INT,\n    savings_date DATE,\n    savings_amount FLOAT\n);\n\n\nCREATE TABLE energy_recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_type VARCHAR(50),\n    recommendation_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(kilowatt_hours) AS total_consumption, MONTH(consumption_date) AS month FROM customer_info JOIN energy_consumption ON customer_info.customer_id = energy_consumption.customer_id GROUP BY customer_info.customer_id, MONTH(consumption_date);",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, email_address FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, address FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT * FROM energy_usage;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT monthly_usage, yearly_usage FROM energy_usage;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, monthly_usage FROM customers JOIN energy_usage ON customers.customer_id = energy_usage.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, recommended_actions FROM customers JOIN energy_savings ON customers.customer_id = energy_savings.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT appliance_name, power_consumption FROM appliances;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, appliance_name FROM customers JOIN customer_appliances ON customers.customer_id = customer_appliances.customer_id JOIN appliances ON customer_appliances.appliance_id = appliances.appliance_id;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT distinct customer_name FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, email_address FROM customers WHERE customer_id = '12345678-1234-1234-1234-123456789abc';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, yearly_usage FROM customers JOIN energy_usage ON customers.customer_id = energy_usage.customer_id WHERE yearly_usage > 500;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, appliance_name FROM customers JOIN customer_appliances ON customers.customer_id = customer_appliances.customer_id JOIN appliances ON customer_appliances.appliance_id = appliances.appliance_id WHERE power_consumption < 1000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, estimated_savings FROM customers JOIN energy_savings ON customers.customer_id = energy_savings.customer_id WHERE estimated_savings > 200;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, monthly_usage, total_usage FROM customers JOIN energy_usage ON customers.customer_id = energy_usage.customer_id WHERE monthly_usage > 100 AND total_usage < 1000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, appliance_name, power_consumption FROM customers JOIN customer_appliances ON customers.customer_id = customer_appliances.customer_id JOIN appliances ON customer_appliances.appliance_id = appliances.appliance_id WHERE customer_name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, email_address, address FROM customers WHERE address LIKE '%Street%';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT appliance_name, power_consumption FROM appliances WHERE power_consumption BETWEEN 500 AND 1000;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, recommended_actions, estimated_savings FROM customers JOIN energy_savings ON customers.customer_id = energy_savings.customer_id WHERE recommended_actions CONTAINS 'insulate';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, email_address, total_usage FROM customers JOIN energy_usage ON customers.customer_id = energy_usage.customer_id ORDER BY total_usage DESC;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT * FROM customers WHERE customer_name LIKE '%John%'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT customer_name, email_address FROM customers WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT cu.customer_name, ea.monthly_usage FROM customers cu JOIN energy_usage ea ON cu.customer_id = ea.customer_id",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT cu.customer_name, ea.total_usage, es.estimated_savings FROM customers cu JOIN energy_usage ea ON cu.customer_id = ea.customer_id JOIN energy_savings es ON cu.customer_id = es.customer_id",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT cu.customer_name, ap.appliance_name, ap.power_consumption FROM customers cu JOIN customer_appliances ca ON cu.customer_id = ca.customer_id JOIN appliances ap ON ca.appliance_id = ap.appliance_id",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_customers FROM customers",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT AVG(monthly_usage) AS avg_monthly_usage FROM energy_usage",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT SUM(total_usage) AS total_energy_usage FROM energy_usage",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT MAX(power_consumption) AS max_power_consumption FROM appliances",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT * FROM customers WHERE address LIKE '%Street%'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT cu.customer_name, ap.appliance_name FROM customers cu JOIN customer_appliances ca ON cu.customer_id = ca.customer_id JOIN appliances ap ON ca.appliance_id = ap.appliance_id",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id UUID PRIMARY KEY,\n    customer_name VARCHAR(255),\n    email_address VARCHAR(255),\n    address VARCHAR(255)\n)\n\nCREATE TABLE energy_usage (\n    customer_id UUID PRIMARY KEY,\n    monthly_usage DECIMAL,\n    yearly_usage DECIMAL,\n    total_usage DECIMAL\n)\n\nCREATE TABLE energy_savings (\n    customer_id UUID PRIMARY KEY,\n    recommended_actions VARCHAR[],\n    estimated_savings DECIMAL\n)\n\nCREATE TABLE appliances (\n    appliance_id UUID PRIMARY KEY,\n    appliance_name VARCHAR(255),\n    power_consumption DECIMAL\n)\n\nCREATE TABLE customer_appliances (\n    customer_id UUID,\n    appliance_id UUID,\n    FOREIGN KEY (customer_id) REFERENCES customers (customer_id),\n    FOREIGN KEY (appliance_id) REFERENCES appliances (appliance_id)\n)\n\n### STATEMENT\n\nSELECT cu.customer_name, ea.yearl..."
]